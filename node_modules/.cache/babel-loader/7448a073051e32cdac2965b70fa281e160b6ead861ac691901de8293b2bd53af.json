{"ast":null,"code":"import { h, ref, defineComponent, watchEffect, computed, onMounted } from 'vue';\nimport { useConfig, useTheme, useThemeClass } from \"../../_mixins/index.mjs\";\nimport style from \"./styles/index.cssr.mjs\";\nimport { qrcodeLight } from \"../styles/index.mjs\";\nimport qrcodegen from \"./qrcodegen.mjs\";\nconst ERROR_CORRECTION_LEVEL = {\n  L: qrcodegen.QrCode.Ecc.LOW,\n  M: qrcodegen.QrCode.Ecc.MEDIUM,\n  Q: qrcodegen.QrCode.Ecc.QUARTILE,\n  H: qrcodegen.QrCode.Ecc.HIGH\n};\nexport const qrCodeProps = Object.assign(Object.assign({}, useTheme.props), {\n  value: String,\n  color: {\n    type: String,\n    default: '#000'\n  },\n  backgroundColor: {\n    type: String,\n    default: '#FFF'\n  },\n  iconSrc: String,\n  iconSize: {\n    type: Number,\n    default: 40\n  },\n  iconBackgroundColor: {\n    type: String,\n    default: '#FFF'\n  },\n  iconBorderRadius: {\n    type: Number,\n    default: 4\n  },\n  size: {\n    type: Number,\n    default: 100\n  },\n  padding: {\n    type: [Number, String],\n    default: 12\n  },\n  errorCorrectionLevel: {\n    type: String,\n    default: 'M'\n  }\n});\n// For retina display\nconst UPSCALE_RATIO = 2;\nexport default defineComponent({\n  name: 'QrCode',\n  props: qrCodeProps,\n  setup(props) {\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const themeRef = useTheme('QrCode', '-qr-code', style, qrcodeLight, props, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      return {\n        '--n-border-radius': themeRef.value.self.borderRadius\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('qr-code', undefined, cssVarsRef, props) : undefined;\n    const canvasRef = ref();\n    const qr = computed(() => {\n      var _a;\n      const errorCorrectionLevel = ERROR_CORRECTION_LEVEL[props.errorCorrectionLevel];\n      return qrcodegen.QrCode.encodeText((_a = props.value) !== null && _a !== void 0 ? _a : '-', errorCorrectionLevel);\n    });\n    onMounted(() => {\n      const imageLoadedTrigger = ref(0);\n      let loadedIcon = null;\n      watchEffect(() => {\n        void imageLoadedTrigger.value;\n        drawCanvas(qr.value, props.size, props.color, props.backgroundColor, loadedIcon ? {\n          icon: loadedIcon,\n          iconBorderRadius: props.iconBorderRadius,\n          iconSize: props.iconSize,\n          iconBackgroundColor: props.iconBackgroundColor\n        } : null);\n      });\n      watchEffect(() => {\n        const {\n          iconSrc\n        } = props;\n        if (iconSrc) {\n          let aborted = false;\n          const img = new Image();\n          img.src = iconSrc;\n          img.onload = () => {\n            if (aborted) return;\n            loadedIcon = img;\n            imageLoadedTrigger.value++;\n          };\n          return () => {\n            aborted = true;\n          };\n        }\n      });\n    });\n    function drawCanvas(qr, size, foregroundColor, backgroundColor, iconConfig) {\n      const canvas = canvasRef.value;\n      if (!canvas) return;\n      const canvasWidth = size * UPSCALE_RATIO;\n      const width = qr.size;\n      const scale = canvasWidth / width;\n      canvas.width = canvasWidth;\n      canvas.height = canvasWidth;\n      const ctx = canvas.getContext('2d');\n      if (!ctx) return;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      for (let y = 0; y < qr.size; y++) {\n        for (let x = 0; x < qr.size; x++) {\n          ctx.fillStyle = qr.getModule(x, y) ? foregroundColor : backgroundColor;\n          const startX = Math.floor(x * scale);\n          const endX = Math.ceil((x + 1) * scale);\n          const startY = Math.floor(y * scale);\n          const endY = Math.ceil((y + 1) * scale);\n          ctx.fillRect(startX, startY, endX - startX, endY - startY);\n        }\n      }\n      if (iconConfig) {\n        const {\n          icon,\n          iconBackgroundColor,\n          iconBorderRadius,\n          iconSize\n        } = iconConfig;\n        const finalIconSize = iconSize * UPSCALE_RATIO;\n        const centerX = (canvas.width - finalIconSize) / 2;\n        const centerY = (canvas.height - finalIconSize) / 2;\n        ctx.fillStyle = iconBackgroundColor;\n        ctx.beginPath();\n        ctx.roundRect(centerX, centerY, finalIconSize, finalIconSize, iconBorderRadius * UPSCALE_RATIO);\n        ctx.fill();\n        const aspectRatio = icon.width / icon.height;\n        const scaledWidth = aspectRatio >= 1 ? finalIconSize : finalIconSize * aspectRatio;\n        const scaledHeight = aspectRatio <= 1 ? finalIconSize : finalIconSize / aspectRatio;\n        const left = centerX + (finalIconSize - scaledWidth) / 2;\n        const top = centerY + (finalIconSize - scaledHeight) / 2;\n        ctx.drawImage(icon, left, top, scaledWidth, scaledHeight);\n      }\n    }\n    return {\n      canvasRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass\n    };\n  },\n  render() {\n    const {\n      mergedClsPrefix,\n      backgroundColor,\n      padding,\n      cssVars,\n      themeClass,\n      size\n    } = this;\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-qr-code`, themeClass],\n      style: Object.assign({\n        padding: typeof padding === 'number' ? `${padding}px` : padding,\n        backgroundColor,\n        width: `${size}px`,\n        height: `${size}px`\n      }, cssVars)\n    }, h(\"canvas\", {\n      ref: \"canvasRef\",\n      style: {\n        width: `${size}px`,\n        height: `${size}px`\n      }\n    }));\n  }\n});","map":{"version":3,"names":["h","ref","defineComponent","watchEffect","computed","onMounted","useConfig","useTheme","useThemeClass","style","qrcodeLight","qrcodegen","ERROR_CORRECTION_LEVEL","L","QrCode","Ecc","LOW","M","MEDIUM","Q","QUARTILE","H","HIGH","qrCodeProps","Object","assign","props","value","String","color","type","default","backgroundColor","iconSrc","iconSize","Number","iconBackgroundColor","iconBorderRadius","size","padding","errorCorrectionLevel","UPSCALE_RATIO","name","setup","mergedClsPrefixRef","inlineThemeDisabled","themeRef","cssVarsRef","self","borderRadius","themeClassHandle","undefined","canvasRef","qr","_a","encodeText","imageLoadedTrigger","loadedIcon","drawCanvas","icon","aborted","img","Image","src","onload","foregroundColor","iconConfig","canvas","canvasWidth","width","scale","height","ctx","getContext","clearRect","y","x","fillStyle","getModule","startX","Math","floor","endX","ceil","startY","endY","fillRect","finalIconSize","centerX","centerY","beginPath","roundRect","fill","aspectRatio","scaledWidth","scaledHeight","left","top","drawImage","mergedClsPrefix","cssVars","themeClass","render","class"],"sources":["E:/java项目/blog/blog-front/node_modules/naive-ui/es/qr-code/src/QrCode.mjs"],"sourcesContent":["import { h, ref, defineComponent, watchEffect, computed, onMounted } from 'vue';\nimport { useConfig, useTheme, useThemeClass } from \"../../_mixins/index.mjs\";\nimport style from \"./styles/index.cssr.mjs\";\nimport { qrcodeLight } from \"../styles/index.mjs\";\nimport qrcodegen from \"./qrcodegen.mjs\";\nconst ERROR_CORRECTION_LEVEL = {\n  L: qrcodegen.QrCode.Ecc.LOW,\n  M: qrcodegen.QrCode.Ecc.MEDIUM,\n  Q: qrcodegen.QrCode.Ecc.QUARTILE,\n  H: qrcodegen.QrCode.Ecc.HIGH\n};\nexport const qrCodeProps = Object.assign(Object.assign({}, useTheme.props), {\n  value: String,\n  color: {\n    type: String,\n    default: '#000'\n  },\n  backgroundColor: {\n    type: String,\n    default: '#FFF'\n  },\n  iconSrc: String,\n  iconSize: {\n    type: Number,\n    default: 40\n  },\n  iconBackgroundColor: {\n    type: String,\n    default: '#FFF'\n  },\n  iconBorderRadius: {\n    type: Number,\n    default: 4\n  },\n  size: {\n    type: Number,\n    default: 100\n  },\n  padding: {\n    type: [Number, String],\n    default: 12\n  },\n  errorCorrectionLevel: {\n    type: String,\n    default: 'M'\n  }\n});\n// For retina display\nconst UPSCALE_RATIO = 2;\nexport default defineComponent({\n  name: 'QrCode',\n  props: qrCodeProps,\n  setup(props) {\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const themeRef = useTheme('QrCode', '-qr-code', style, qrcodeLight, props, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      return {\n        '--n-border-radius': themeRef.value.self.borderRadius\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('qr-code', undefined, cssVarsRef, props) : undefined;\n    const canvasRef = ref();\n    const qr = computed(() => {\n      var _a;\n      const errorCorrectionLevel = ERROR_CORRECTION_LEVEL[props.errorCorrectionLevel];\n      return qrcodegen.QrCode.encodeText((_a = props.value) !== null && _a !== void 0 ? _a : '-', errorCorrectionLevel);\n    });\n    onMounted(() => {\n      const imageLoadedTrigger = ref(0);\n      let loadedIcon = null;\n      watchEffect(() => {\n        void imageLoadedTrigger.value;\n        drawCanvas(qr.value, props.size, props.color, props.backgroundColor, loadedIcon ? {\n          icon: loadedIcon,\n          iconBorderRadius: props.iconBorderRadius,\n          iconSize: props.iconSize,\n          iconBackgroundColor: props.iconBackgroundColor\n        } : null);\n      });\n      watchEffect(() => {\n        const {\n          iconSrc\n        } = props;\n        if (iconSrc) {\n          let aborted = false;\n          const img = new Image();\n          img.src = iconSrc;\n          img.onload = () => {\n            if (aborted) return;\n            loadedIcon = img;\n            imageLoadedTrigger.value++;\n          };\n          return () => {\n            aborted = true;\n          };\n        }\n      });\n    });\n    function drawCanvas(qr, size, foregroundColor, backgroundColor, iconConfig) {\n      const canvas = canvasRef.value;\n      if (!canvas) return;\n      const canvasWidth = size * UPSCALE_RATIO;\n      const width = qr.size;\n      const scale = canvasWidth / width;\n      canvas.width = canvasWidth;\n      canvas.height = canvasWidth;\n      const ctx = canvas.getContext('2d');\n      if (!ctx) return;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      for (let y = 0; y < qr.size; y++) {\n        for (let x = 0; x < qr.size; x++) {\n          ctx.fillStyle = qr.getModule(x, y) ? foregroundColor : backgroundColor;\n          const startX = Math.floor(x * scale);\n          const endX = Math.ceil((x + 1) * scale);\n          const startY = Math.floor(y * scale);\n          const endY = Math.ceil((y + 1) * scale);\n          ctx.fillRect(startX, startY, endX - startX, endY - startY);\n        }\n      }\n      if (iconConfig) {\n        const {\n          icon,\n          iconBackgroundColor,\n          iconBorderRadius,\n          iconSize\n        } = iconConfig;\n        const finalIconSize = iconSize * UPSCALE_RATIO;\n        const centerX = (canvas.width - finalIconSize) / 2;\n        const centerY = (canvas.height - finalIconSize) / 2;\n        ctx.fillStyle = iconBackgroundColor;\n        ctx.beginPath();\n        ctx.roundRect(centerX, centerY, finalIconSize, finalIconSize, iconBorderRadius * UPSCALE_RATIO);\n        ctx.fill();\n        const aspectRatio = icon.width / icon.height;\n        const scaledWidth = aspectRatio >= 1 ? finalIconSize : finalIconSize * aspectRatio;\n        const scaledHeight = aspectRatio <= 1 ? finalIconSize : finalIconSize / aspectRatio;\n        const left = centerX + (finalIconSize - scaledWidth) / 2;\n        const top = centerY + (finalIconSize - scaledHeight) / 2;\n        ctx.drawImage(icon, left, top, scaledWidth, scaledHeight);\n      }\n    }\n    return {\n      canvasRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass\n    };\n  },\n  render() {\n    const {\n      mergedClsPrefix,\n      backgroundColor,\n      padding,\n      cssVars,\n      themeClass,\n      size\n    } = this;\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-qr-code`, themeClass],\n      style: Object.assign({\n        padding: typeof padding === 'number' ? `${padding}px` : padding,\n        backgroundColor,\n        width: `${size}px`,\n        height: `${size}px`\n      }, cssVars)\n    }, h(\"canvas\", {\n      ref: \"canvasRef\",\n      style: {\n        width: `${size}px`,\n        height: `${size}px`\n      }\n    }));\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}