{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { ref, onMounted } from 'vue';\nimport { save, download } from '@/api/user';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nexport default {\n  __name: 'Index',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    let showMessage = ref(false);\n    let userInfo = ref(JSON.parse(localStorage.getItem(\"userInfo\")));\n    let password = ref(null);\n    let avatar = ref();\n    //上传头像\n    const headers = ref({\n      \"Token\": localStorage.getItem(\"token\")\n    });\n    const uploadImgUrl = ref(\"http://localhost:8081/user/upload/avatar\");\n    const ImageData = ref();\n    // 上传之前\n    onMounted(() => {\n      // userInfo.value.avatar=require(userInfo.value.avatar);\n      // getImageUrl();\n      downloadAvatar();\n    });\n    const beforeAvatarUpload = rawFile => {\n      console.log(\"上传开始之前\");\n      if (rawFile.type !== \"image/jpeg\" && rawFile.type !== \"image/png\" && rawFile.type !== \"image/jpg\") {\n        ElMessage({\n          showClose: true,\n          message: '图片只能是JPG或PNG格式！',\n          type: 'warning'\n        });\n        return;\n      }\n      if (rawFile.size / 1024 / 1024 > 5) {\n        ElMessage({\n          showClose: true,\n          message: '图片大小不能超过5MB！',\n          type: 'warning'\n        });\n        return;\n      }\n      // 一般是formData格式\n      ImageData.value = new FormData();\n      // 'file'具体是什么字段看项目接口文档\n      ImageData.value.append('file', rawFile);\n    };\n\n    // 上传成功回调\n    const handleAvatarSuccess = (res, uploadFile) => {\n      avatar.value = URL.createObjectURL(uploadFile.raw);\n    };\n    function downloadAvatar() {\n      download(userInfo.value.avatar).then(res => {\n        // const blob = new Blob([res.data]);\n        const reader = new FileReader();\n        reader.readAsDataURL(res);\n        reader.onload = () => {\n          avatar.value = reader.result;\n        };\n        // avatar.value=res;\n      });\n    }\n    function saveUser() {\n      ElMessageBox.confirm('确定保存吗？', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        let user = {\n          \"name\": userInfo.value.name,\n          \"birthday\": userInfo.value\n        };\n        userInfo.value.add({\n          \"password\": password\n        });\n        save(userInfo).then(res => {\n          if (res.code == 1) {\n            ElMessage({\n              type: 'success',\n              message: '保存成功'\n            });\n            getTags();\n          } else {\n            ElMessage({\n              type: 'info',\n              message: '保存失败'\n            });\n          }\n        });\n      }).catch(() => {\n        ElMessage({\n          type: 'info',\n          message: '取消'\n        });\n      });\n    }\n    const __returned__ = {\n      get showMessage() {\n        return showMessage;\n      },\n      set showMessage(v) {\n        showMessage = v;\n      },\n      get userInfo() {\n        return userInfo;\n      },\n      set userInfo(v) {\n        userInfo = v;\n      },\n      get password() {\n        return password;\n      },\n      set password(v) {\n        password = v;\n      },\n      get avatar() {\n        return avatar;\n      },\n      set avatar(v) {\n        avatar = v;\n      },\n      headers,\n      uploadImgUrl,\n      ImageData,\n      beforeAvatarUpload,\n      handleAvatarSuccess,\n      downloadAvatar,\n      saveUser,\n      ref,\n      onMounted,\n      get save() {\n        return save;\n      },\n      get download() {\n        return download;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","save","download","ElMessage","ElMessageBox","showMessage","userInfo","JSON","parse","localStorage","getItem","password","avatar","headers","uploadImgUrl","ImageData","downloadAvatar","beforeAvatarUpload","rawFile","console","log","type","showClose","message","size","value","FormData","append","handleAvatarSuccess","res","uploadFile","URL","createObjectURL","raw","then","reader","FileReader","readAsDataURL","onload","result","saveUser","confirm","confirmButtonText","cancelButtonText","user","name","add","code","getTags","catch"],"sources":["E:/java项目/test/blog/blog-front/src/views/controller/user_manage/Index.vue"],"sourcesContent":["<template>\r\n\t<div class=\"user-manage-body\">\r\n\t\t<el-upload\r\n\t\t\tclass=\"user-manage-avatar-uploader\"\r\n\t\t\t:action=\"uploadImgUrl\"\r\n\t\t\t:data=\"ImageData\"\r\n\t\t\t:show-file-list=\"false\" \r\n\t\t\t:headers=\"headers\"\r\n\t\t\tmethod=\"put\"\r\n\t\t\t:on-success=\"handleAvatarSuccess\"\r\n\t\t\t:before-upload=\"beforeAvatarUpload\"\r\n\t\t\t@mouseover=\"showMessage = true\" @mouseleave=\"showMessage = false\"\r\n\t\t>\r\n\t\t\t<img v-if=\"avatar\" :src=\"avatar\" class=\"user-manage-avatar\" />\r\n\t\t\t<img v-else src=\"@/assets/imgs/fufu.jpg\" class=\"user-manage-avatar\" />\r\n\t\t\t<div class=\"user-manage-avatar-cover\" v-if=\"showMessage\">\r\n\t\t\t\t<img src=\"@/assets/imgs/controller/头像上传.svg\" style=\"height: 40px;color: rgb(253, 253, 253);\" />\r\n\t\t\t</div>\r\n\t\t</el-upload>\r\n\t\t<div class=\"user-manage-item\">\r\n\t\t\t<span>姓名</span>\r\n\t\t\t<el-input style=\"width: 260px\" placeholder=\"请输入姓名\" v-model=\"userInfo.name\"/>\r\n\t\t</div>\r\n\t\t<div class=\"user-manage-item\">\r\n\t\t\t<span>性别</span>\r\n\t\t\t<el-radio-group v-model=\"userInfo.sex\" class=\"ml-4\">\r\n\t\t\t\t<el-radio value=\"1\" size=\"large\">男</el-radio>\r\n\t\t\t\t<el-radio value=\"2\" size=\"large\">女</el-radio>\r\n\t\t\t</el-radio-group>\r\n\t\t</div>\r\n\t\t<div class=\"user-manage-item\">\r\n\t\t\t<span>生日</span>\r\n\t\t\t<el-date-picker\r\n        v-model=\"userInfo.birthday\"\r\n        type=\"date\"\r\n        placeholder=\"请输入生日\"\r\n\t\t\t\tstyle=\"width: 260px\"\r\n      />\r\n\t\t</div>\r\n\t\t<div class=\"user-manage-item\">\r\n\t\t\t<span>所在地</span>\r\n\t\t\t<el-input style=\"width: 260px\" placeholder=\"请输入所在地\" v-model=\"userInfo.location\"/>\r\n\t\t</div>\r\n\t\t<div class=\"user-manage-item\">\r\n\t\t\t<span>毕业院校</span>\r\n\t\t\t<el-input style=\"width: 260px\" placeholder=\"请输入毕业院校\" v-model=\"userInfo.college\"/>\r\n\t\t</div>\r\n\t\t<div class=\"user-manage-item\">\r\n\t\t\t<span>密码</span>\r\n\t\t\t<el-input style=\"width: 260px\" placeholder=\"请输入新密码\" v-model=\"password\"/>\r\n\t\t</div>\r\n\t\t<div class=\"user-manage-button\">\r\n\t\t\t<el-button type=\"primary\" style=\"width: 80px;\" @click=\"saveUser\">确认修改</el-button>\r\n\t\t\t<el-button type=\"default\" style=\"width: 80px;\">重置</el-button>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\nimport {ref,onMounted} from 'vue'\r\nimport {save,download} from '@/api/user'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nlet showMessage=ref(false)\r\nlet userInfo=ref(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n\r\n\r\nlet password = ref(null);\r\nlet avatar=ref();\r\n//上传头像\r\nconst headers = ref({ \"Token\":  localStorage.getItem(\"token\") });\r\n\r\nconst uploadImgUrl = ref(\"http://localhost:8081/user/upload/avatar\");\r\n\r\nconst ImageData = ref()\r\n// 上传之前\r\nonMounted(()=>{\r\n\t// userInfo.value.avatar=require(userInfo.value.avatar);\r\n\t// getImageUrl();\r\n\tdownloadAvatar();\r\n})\r\n\r\nconst beforeAvatarUpload = (rawFile) => {\r\n\tconsole.log(\"上传开始之前\")\r\n  if (rawFile.type !== \"image/jpeg\"&&rawFile.type !== \"image/png\"&&rawFile.type !== \"image/jpg\") {\r\n    ElMessage({\r\n      showClose:true,\r\n      message:'图片只能是JPG或PNG格式！',\r\n      type:'warning'\r\n    });\r\n    return;\r\n  }\r\n  if (rawFile.size / 1024 / 1024 > 5) {\r\n    ElMessage({\r\n      showClose:true,\r\n      message:'图片大小不能超过5MB！',\r\n      type:'warning'\r\n    });\r\n    return;\r\n  }\r\n// 一般是formData格式\r\n  ImageData.value = new FormData();\r\n// 'file'具体是什么字段看项目接口文档\r\n  ImageData.value.append('file',rawFile);\r\n};\r\n \r\n// 上传成功回调\r\nconst handleAvatarSuccess = (res, uploadFile) => {\r\n avatar.value = URL.createObjectURL(uploadFile.raw);\r\n};\r\n\r\nfunction downloadAvatar(){\r\n\tdownload(userInfo.value.avatar)\r\n\t.then(res=>{\r\n\t\t// const blob = new Blob([res.data]);\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsDataURL(res);\r\n\t\treader.onload = () => {\r\n\t\t\tavatar.value = reader.result;\r\n\t\t};\r\n\t\t// avatar.value=res;\r\n\t})\r\n}\r\n\r\nfunction saveUser(){\r\n\tElMessageBox.confirm(\r\n    '确定保存吗？',\r\n    {\r\n      confirmButtonText: '确认',\r\n      cancelButtonText: '取消',\r\n      type: 'warning',\r\n    }\r\n  )\r\n    .then(() => {\r\n\t\t\tlet user={\r\n\t\t\t\t\"name\":userInfo.value.name,\r\n\t\t\t\t\"birthday\":userInfo.value\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tuserInfo.value.add({\r\n\t\t\t\t\"password\":password\r\n\t\t\t})\r\n\t\t\t\r\n      save(userInfo)\r\n\t\t\t.then(res=>{\r\n\t\t\t\tif(res.code==1){\r\n\t\t\t\t\tElMessage({\r\n\t\t\t\t\t\ttype: 'success',\r\n\t\t\t\t\t\tmessage: '保存成功',\r\n\t\t\t\t\t})\r\n\t\t\t\t\tgetTags()\r\n\t\t\t\t}else{\r\n\t\t\t\t\tElMessage({\r\n\t\t\t\t\t\ttype: 'info',\r\n\t\t\t\t\t\tmessage: '保存失败',\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n    })\r\n    .catch(() => {\r\n      ElMessage({\r\n        type: 'info',\r\n        message: '取消',\r\n      })\r\n    })\r\n}\r\n</script>\r\n\r\n\r\n\r\n\r\n<style src=\"@/assets/css/user_manage.css\" scoped>\r\n\r\n</style>"],"mappings":";;;AA2DA,SAAQA,GAAG,EAACC,SAAS,QAAO,KAAK;AACjC,SAAQC,IAAI,EAACC,QAAQ,QAAO,YAAY;AACxC,SAASC,SAAS,EAAEC,YAAY,QAAQ,cAAc;;;;;;;IACtD,IAAIC,WAAW,GAACN,GAAG,CAAC,KAAK,CAAC;IAC1B,IAAIO,QAAQ,GAACP,GAAG,CAACQ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;IAG9D,IAAIC,QAAQ,GAAGZ,GAAG,CAAC,IAAI,CAAC;IACxB,IAAIa,MAAM,GAACb,GAAG,CAAC,CAAC;IAChB;IACA,MAAMc,OAAO,GAAGd,GAAG,CAAC;MAAE,OAAO,EAAGU,YAAY,CAACC,OAAO,CAAC,OAAO;IAAE,CAAC,CAAC;IAEhE,MAAMI,YAAY,GAAGf,GAAG,CAAC,0CAA0C,CAAC;IAEpE,MAAMgB,SAAS,GAAGhB,GAAG,CAAC,CAAC;IACvB;IACAC,SAAS,CAAC,MAAI;MACb;MACA;MACAgB,cAAc,CAAC,CAAC;IACjB,CAAC,CAAC;IAEF,MAAMC,kBAAkB,GAAIC,OAAO,IAAK;MACvCC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACpB,IAAIF,OAAO,CAACG,IAAI,KAAK,YAAY,IAAEH,OAAO,CAACG,IAAI,KAAK,WAAW,IAAEH,OAAO,CAACG,IAAI,KAAK,WAAW,EAAE;QAC7FlB,SAAS,CAAC;UACRmB,SAAS,EAAC,IAAI;UACdC,OAAO,EAAC,iBAAiB;UACzBF,IAAI,EAAC;QACP,CAAC,CAAC;QACF;MACF;MACA,IAAIH,OAAO,CAACM,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,CAAC,EAAE;QAClCrB,SAAS,CAAC;UACRmB,SAAS,EAAC,IAAI;UACdC,OAAO,EAAC,cAAc;UACtBF,IAAI,EAAC;QACP,CAAC,CAAC;QACF;MACF;MACF;MACEN,SAAS,CAACU,KAAK,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAClC;MACEX,SAAS,CAACU,KAAK,CAACE,MAAM,CAAC,MAAM,EAACT,OAAO,CAAC;IACxC,CAAC;;IAED;IACA,MAAMU,mBAAmB,GAAGA,CAACC,GAAG,EAAEC,UAAU,KAAK;MAChDlB,MAAM,CAACa,KAAK,GAAGM,GAAG,CAACC,eAAe,CAACF,UAAU,CAACG,GAAG,CAAC;IACnD,CAAC;IAED,SAASjB,cAAcA,CAAA,EAAE;MACxBd,QAAQ,CAACI,QAAQ,CAACmB,KAAK,CAACb,MAAM,CAAC,CAC9BsB,IAAI,CAACL,GAAG,IAAE;QACV;QACA,MAAMM,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,aAAa,CAACR,GAAG,CAAC;QACzBM,MAAM,CAACG,MAAM,GAAG,MAAM;UACrB1B,MAAM,CAACa,KAAK,GAAGU,MAAM,CAACI,MAAM;QAC7B,CAAC;QACD;MACD,CAAC,CAAC;IACH;IAEA,SAASC,QAAQA,CAAA,EAAE;MAClBpC,YAAY,CAACqC,OAAO,CACjB,QAAQ,EACR;QACEC,iBAAiB,EAAE,IAAI;QACvBC,gBAAgB,EAAE,IAAI;QACtBtB,IAAI,EAAE;MACR,CACF,CAAC,CACEa,IAAI,CAAC,MAAM;QACb,IAAIU,IAAI,GAAC;UACR,MAAM,EAACtC,QAAQ,CAACmB,KAAK,CAACoB,IAAI;UAC1B,UAAU,EAACvC,QAAQ,CAACmB;QACrB,CAAC;QAEDnB,QAAQ,CAACmB,KAAK,CAACqB,GAAG,CAAC;UAClB,UAAU,EAACnC;QACZ,CAAC,CAAC;QAECV,IAAI,CAACK,QAAQ,CAAC,CAChB4B,IAAI,CAACL,GAAG,IAAE;UACV,IAAGA,GAAG,CAACkB,IAAI,IAAE,CAAC,EAAC;YACd5C,SAAS,CAAC;cACTkB,IAAI,EAAE,SAAS;cACfE,OAAO,EAAE;YACV,CAAC,CAAC;YACFyB,OAAO,CAAC,CAAC;UACV,CAAC,MAAI;YACJ7C,SAAS,CAAC;cACTkB,IAAI,EAAE,MAAM;cACZE,OAAO,EAAE;YACV,CAAC,CAAC;UACH;QACD,CAAC,CAAC;MACD,CAAC,CAAC,CACD0B,KAAK,CAAC,MAAM;QACX9C,SAAS,CAAC;UACRkB,IAAI,EAAE,MAAM;UACZE,OAAO,EAAE;QACX,CAAC,CAAC;MACJ,CAAC,CAAC;IACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}