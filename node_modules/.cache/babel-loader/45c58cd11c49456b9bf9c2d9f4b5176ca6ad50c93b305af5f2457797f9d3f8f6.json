{"ast":null,"code":"/*引入axios*/\nimport axios from 'axios';\nconst request = axios.create({\n  baseURL: 'http//localhost:8081',\n  // 基础路径,将统一的部分全部封装\n  withCredentials: true // 表示请求可以携带cookie\n});\n//前端采用export.default，在写后端代码时用module.export\nexport default request;\n\n// request 拦截器\n// 可以自请求发送前对请求做一些处理\n// 比如统一加token，对请求参数统一加密\nrequest.interceptors.request.use(config => {\n  // 在发送请求之前做些什么\n  const userInfo = localStorage.getItem('user');\n  if (userInfo) {\n    // 如果用户信息存在于浏览器中，可以在请求头中添加用户信息\n    config.headers['password'] = userInfo.password;\n  }\n  return config;\n}, error => {\n  // 对请求错误做些什么\n  return Promise.reject(error);\n});","map":{"version":3,"names":["axios","request","create","baseURL","withCredentials","interceptors","use","config","userInfo","localStorage","getItem","headers","password","error","Promise","reject"],"sources":["E:/java项目/test/blog/blog-front/src/utils/request.js"],"sourcesContent":["/*引入axios*/\r\nimport axios from 'axios'\r\nconst request = axios.create({\r\n    baseURL: 'http//localhost:8081', // 基础路径,将统一的部分全部封装\r\n    withCredentials: true // 表示请求可以携带cookie\r\n})\r\n//前端采用export.default，在写后端代码时用module.export\r\nexport default request\r\n\r\n// request 拦截器\r\n// 可以自请求发送前对请求做一些处理\r\n// 比如统一加token，对请求参数统一加密\r\nrequest.interceptors.request.use(\r\n    config => {\r\n        // 在发送请求之前做些什么\r\n        const userInfo = localStorage.getItem('user');\r\n        if (userInfo) {\r\n            // 如果用户信息存在于浏览器中，可以在请求头中添加用户信息\r\n            config.headers['password'] = userInfo.password;\r\n        }\r\n        return config;\r\n    },\r\n    error => {\r\n        // 对请求错误做些什么\r\n        return Promise.reject(error);\r\n    }\r\n);"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAM,CAAC;EACzBC,OAAO,EAAE,sBAAsB;EAAE;EACjCC,eAAe,EAAE,IAAI,CAAC;AAC1B,CAAC,CAAC;AACF;AACA,eAAeH,OAAO;;AAEtB;AACA;AACA;AACAA,OAAO,CAACI,YAAY,CAACJ,OAAO,CAACK,GAAG,CAC5BC,MAAM,IAAI;EACN;EACA,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAC7C,IAAIF,QAAQ,EAAE;IACV;IACAD,MAAM,CAACI,OAAO,CAAC,UAAU,CAAC,GAAGH,QAAQ,CAACI,QAAQ;EAClD;EACA,OAAOL,MAAM;AACjB,CAAC,EACDM,KAAK,IAAI;EACL;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}