{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\nimport ElementPlus from 'element-plus';\nimport 'element-plus/dist/index.css';\nimport * as ElementPlusIconsVue from '@element-plus/icons-vue';\nimport vuetyped from 'vue3typed';\nimport naive from 'naive-ui';\nconst app = createApp(App);\n\n// 在此处进行配置全局的路由守卫（全局前置钩子）\n// 目的是：判断当前用户中本地存储是否有token，使用户在登录之前，只能访问到/login页面，其他的页面是访问不到的。\nrouter.beforeEach((to, from, next) => {\n  // to 即将进入的路由\n  // from 在哪个路由进入的\n  // next 放行\n  //   console.log(to); //打印的是页面要跳转到的路由,例如：它下面的path：为\"/login\"\n  let token = localStorage.getItem(\"token\") || \"\"; //在本地存储中获取token\n  if (token) {\n    //判断是否有token\n    next();\n  } else {\n    //在没有token的前提下，to下面的path是否为/login，如果不是则页面跳转到登录页面\n    if (to.path == \"/login\") {\n      next();\n    } else {\n      next({\n        path: \"/login\"\n      }); //跳转页面到login页\n    }\n  }\n});\napp.use(naive).use(vuetyped).use(ElementPlus).use(store).use(router);\nfor (const [key, component] of Object.entries(ElementPlusIconsVue)) {\n  app.component(key, component);\n}\napp.mount('#app');","map":{"version":3,"names":["createApp","App","router","store","ElementPlus","ElementPlusIconsVue","vuetyped","naive","app","beforeEach","to","from","next","token","localStorage","getItem","path","use","key","component","Object","entries","mount"],"sources":["E:/java项目/test/blog/blog-front/src/main.js"],"sourcesContent":["import { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport store from './store'\r\nimport ElementPlus from 'element-plus'\r\nimport 'element-plus/dist/index.css'\r\nimport * as ElementPlusIconsVue from '@element-plus/icons-vue'\r\nimport vuetyped from 'vue3typed'\r\nimport naive from 'naive-ui'\r\nconst app = createApp(App)\r\n\r\n// 在此处进行配置全局的路由守卫（全局前置钩子）\r\n// 目的是：判断当前用户中本地存储是否有token，使用户在登录之前，只能访问到/login页面，其他的页面是访问不到的。\r\nrouter.beforeEach((to, from, next) => {\r\n  // to 即将进入的路由\r\n  // from 在哪个路由进入的\r\n  // next 放行\r\n  //   console.log(to); //打印的是页面要跳转到的路由,例如：它下面的path：为\"/login\"\r\n  let token = localStorage.getItem(\"token\") || \"\"; //在本地存储中获取token\r\n  if (token) {\r\n    //判断是否有token\r\n    next();\r\n  } else {\r\n    //在没有token的前提下，to下面的path是否为/login，如果不是则页面跳转到登录页面\r\n    if (to.path == \"/login\") {\r\n      next();\r\n    } else {\r\n      next({ path: \"/login\" }); //跳转页面到login页\r\n    }\r\n  }\r\n});\r\napp.use(naive).use(vuetyped).use(ElementPlus).use(store).use(router)\r\nfor (const [key, component] of Object.entries(ElementPlusIconsVue)) {\r\n  app.component(key, component)\r\n}\r\napp.mount('#app')\r\n\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAO,6BAA6B;AACpC,OAAO,KAAKC,mBAAmB,MAAM,yBAAyB;AAC9D,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,KAAK,MAAM,UAAU;AAC5B,MAAMC,GAAG,GAAGR,SAAS,CAACC,GAAG,CAAC;;AAE1B;AACA;AACAC,MAAM,CAACO,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC;EACA;EACA;EACA;EACA,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;EACjD,IAAIF,KAAK,EAAE;IACT;IACAD,IAAI,CAAC,CAAC;EACR,CAAC,MAAM;IACL;IACA,IAAIF,EAAE,CAACM,IAAI,IAAI,QAAQ,EAAE;MACvBJ,IAAI,CAAC,CAAC;IACR,CAAC,MAAM;MACLA,IAAI,CAAC;QAAEI,IAAI,EAAE;MAAS,CAAC,CAAC,CAAC,CAAC;IAC5B;EACF;AACF,CAAC,CAAC;AACFR,GAAG,CAACS,GAAG,CAACV,KAAK,CAAC,CAACU,GAAG,CAACX,QAAQ,CAAC,CAACW,GAAG,CAACb,WAAW,CAAC,CAACa,GAAG,CAACd,KAAK,CAAC,CAACc,GAAG,CAACf,MAAM,CAAC;AACpE,KAAK,MAAM,CAACgB,GAAG,EAAEC,SAAS,CAAC,IAAIC,MAAM,CAACC,OAAO,CAAChB,mBAAmB,CAAC,EAAE;EAClEG,GAAG,CAACW,SAAS,CAACD,GAAG,EAAEC,SAAS,CAAC;AAC/B;AACAX,GAAG,CAACc,KAAK,CAAC,MAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}