{"ast":null,"code":"import { createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-199171c2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"blog-body\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"blog-right\\\" data-v-199171c2><div class=\\\"blog-catalog\\\" data-v-199171c2></div></div><div class=\\\"blog-center\\\" data-v-199171c2></div><div class=\\\"blog-left\\\" data-v-199171c2><div class=\\\"blog-user\\\" data-v-199171c2></div><div class=\\\"blog-tag\\\" data-v-199171c2></div></div>\", 3);\nconst _hoisted_5 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [..._hoisted_5]);\n}","map":{"version":3,"names":["class","_createStaticVNode","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_5"],"sources":["E:\\java项目\\test\\blog\\blog-front\\src\\views\\blog\\Index.vue"],"sourcesContent":["<template>\r\n\t<div class=\"blog-body\">\r\n\t\t<div class=\"blog-right\">\r\n\t\t\t<div class=\"blog-catalog\">\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"blog-center\">\r\n\r\n\t\t</div>\r\n\t\t<div class=\"blog-left\">\r\n\t\t\t<div class=\"blog-user\">\r\n\r\n\t\t\t</div>\r\n\t\t\t<div class=\"blog-tag\">\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n// 1.1 引入Vditor 构造函数\r\nimport Vditor from 'vditor'\r\n// 1.2 引入样式\r\nimport 'vditor/dist/index.css';\r\nimport { ref, onMounted } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\nimport {getArticleOne} from '@/api/article.js'\r\n// import VditorPreview from 'vditor/dist/method.min.js';\r\n// 2. 获取DOM引用\r\nconst route = useRoute();\r\nconst vditor = ref()\r\nlet articleId=null;\r\nlet articleTagList = ref([]);\r\nlet article=ref({\r\n  \"id\": null,\r\n  \"userId\": \"1\",\r\n  \"title\": \"\",\r\n  \"content\": \"\",\r\n  \"published\": null,\r\n  \"likeNum\": null,\r\n  \"collectNum\": null,\r\n  \"viewNum\":null,\r\n  \"commentNum\": null,\r\n  \"createTime\": null,\r\n  \"updateTime\": null\r\n})\r\nif(route.query.articleId != null){\r\n  // console.log(route.query.article)\r\n  articleId=route.query.articleId\r\n  // console.log(article);\r\n}\r\n// 3. 在组件初始化时，就创建Vditor对象，并引用\r\nonMounted(() => {\r\n\t\r\n})\r\n\r\n//获取文章\r\nfunction getArticle(){\r\n  \r\n  if(articleId!=null)\r\n    getArticleOne(articleId)\r\n    .then(res=>{\r\n     \r\n      articleTagList.value=res.data.tagList;\r\n      \r\n      article.value=res.data.article;\r\n\t\t\tconst vditorSpan = document.getElementById(\"vditor\");\r\n\t\t\tVditor.preview(vditorSpan,article.value.content,{\r\n\t\t\t\thljs:{style:\"github\"},\r\n\t\t\t});\r\n     \r\n    })\r\n  \r\n}\r\n\r\n</script>\r\n\r\n\r\n\r\n<style src=\"../../assets/css/blog.css\" scoped>\r\n\r\n</style>"],"mappings":";;;EACMA,KAAK,EAAC;AAAW;gCADvBC,kBAAA;oBAEEC,UAIM,C;;uBALPC,mBAAA,CAiBM,OAjBNC,UAiBM,EAlBP,IAAAC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}