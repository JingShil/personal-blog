{"ast":null,"code":"import VanillaTilt from 'vanilla-tilt';\nimport { onMounted, ref } from \"vue\";\nexport default {\n  __name: 'Index',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    let isLogin = ref(true);\n    let backgroundImg = ref(require(\"@/assets/imgs/3.png\"));\n    let color = ref(\"blak\");\n    onMounted(() => {\n      // VanillaTilt.init(document.querySelector(\".card\"), {\n      // \tmax: 50,\n      // \tspeed: 400\n      // });\n\n      //It also supports NodeList\n      VanillaTilt.init(document.querySelectorAll(\".login-left\"));\n    });\n    function openLogin() {\n      isLogin.value = true;\n      backgroundImg.value = require(\"@/assets/imgs/3.png\");\n    }\n    function closeLogin() {\n      isLogin.value = false;\n      backgroundImg.value = require(\"@/assets/imgs/10.jpg\");\n    }\n\n    //使用ref定义dom对象\n    const ruleForms = ref(null);\n\n    //使用reactive定于数据\n    const state = reactive({\n      selectObj: [{\n        value: \"1\",\n        label: \"项目1\"\n      }, {\n        value: \"2\",\n        label: \"项目2\"\n      }, {\n        value: \"3\",\n        label: \"项目3\"\n      }, {\n        value: \"4\",\n        label: \"项目4\"\n      }],\n      //定义提交的数据\n      formInfoObj: {\n        titleVal: \"\",\n        urlVal: \"\",\n        selectVal: \"\"\n      },\n      rules: {\n        //定义验证规则，有两种方式：\n        //1.使用ele原生的验证规则。\n        titleVal: [{\n          required: true,\n          message: \"请输入标题\",\n          trigger: \"blur\"\n        }],\n        //2.通过引用整体的验证规则的js来进行验证。\n        urlVal: [{\n          required: true,\n          validator: globalValidate.requiredFunction,\n          trigger: \"blur\"\n        }],\n        selectVal: [{\n          required: true,\n          message: \"此项为必填\",\n          trigger: \"blur\"\n        }]\n      }\n    });\n\n    //定义提交按钮函数\n    const submitButton = () => {\n      //通过ref的值触发验证\n      ruleForms.value.validate(valid => {\n        if (valid) {\n          console.log(\"通过\");\n          console.log(state.formInfoObj);\n          //触发成功验证表单，调用接口；\n        } else {\n          console.log(\"未通过\");\n        }\n      });\n    };\n\n    // const ruleFormRef = ref()\n\n    const __returned__ = {\n      get isLogin() {\n        return isLogin;\n      },\n      set isLogin(v) {\n        isLogin = v;\n      },\n      get backgroundImg() {\n        return backgroundImg;\n      },\n      set backgroundImg(v) {\n        backgroundImg = v;\n      },\n      get color() {\n        return color;\n      },\n      set color(v) {\n        color = v;\n      },\n      openLogin,\n      closeLogin,\n      ruleForms,\n      state,\n      submitButton,\n      get VanillaTilt() {\n        return VanillaTilt;\n      },\n      onMounted,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["VanillaTilt","onMounted","ref","isLogin","backgroundImg","require","color","init","document","querySelectorAll","openLogin","value","closeLogin","ruleForms","state","reactive","selectObj","label","formInfoObj","titleVal","urlVal","selectVal","rules","required","message","trigger","validator","globalValidate","requiredFunction","submitButton","validate","valid","console","log"],"sources":["E:/java项目/test/blog/blog-front/src/views/login/Index.vue"],"sourcesContent":["<template>\r\n\t<div class=\"login-body\" :style=\"'background-image: url(' + backgroundImg + ');'\">\r\n\t\t<div class=\"login-container\">\r\n\t\t\t<div class=\"login-left\">\r\n\t\t\t\t<h1>个人博客</h1>\r\n\t\t\t\t<!-- <span>欢迎来到我的博客</span> -->\r\n\t\t\t\t<vuetyped :strings=\"['欢迎来到小何的博客']\" :loop=\"true\" :smart-backspace=\"true\">\r\n\t\t\t\t\t<div class=\"typing\" />\r\n\t\t\t\t</vuetyped>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"login-right\">\r\n\t\t\t\t<span class=\"login-right-background\" :style=\"'background-image: url(' + backgroundImg + ');'\"></span>\r\n\r\n\t\t\t\t<div class=\"login\"\r\n\t\t\t\t\t:class=\"{\r\n\t\t\t\t\t\t'toLeft':!isLogin\r\n\t\t\t\t\t}\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<el-form\r\n\t\t\t\t\t\tlabel-position=\"left\"\r\n\t\t\t\t\t\tlabel-width=\"50px\"\r\n\t\t\t\t\t\t:model=\"formInfoObj\"\r\n\t\t\t\t\t\t:rules=\"rules\"\r\n\t\t\t\t\t\tref=\"ruleForms\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<el-form-item label=\"标题\" prop=\"titleVal\">\r\n\t\t\t\t\t\t\t<el-input v-model=\"formInfoObj.titleVal\"></el-input>\r\n\t\t\t\t\t\t</el-form-item>\r\n\t\t\t\t\t\t<el-form-item label=\"链接\" prop=\"urlVal\">\r\n\t\t\t\t\t\t\t<el-input v-model=\"formInfoObj.urlVal\"></el-input>\r\n\t\t\t\t\t\t</el-form-item>\r\n\t\t\t\t\t\t<el-form-item label=\"类别\" class=\"form-left\" prop=\"selectVal\">\r\n\t\t\t\t\t\t\t<el-select v-model=\"formInfoObj.selectVal\" placeholder=\"请选择类别\">\r\n\t\t\t\t\t\t\t\t<el-option\r\n\t\t\t\t\t\t\t\t\tv-for=\"item in selectObj\"\r\n\t\t\t\t\t\t\t\t\t:key=\"item.value\"\r\n\t\t\t\t\t\t\t\t\t:label=\"item.label\"\r\n\t\t\t\t\t\t\t\t\t:value=\"item.value\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t</el-option>\r\n\t\t\t\t\t\t\t</el-select>\r\n\t\t\t\t\t\t</el-form-item>\r\n\t\t\t\t\t\t<el-form-item class=\"form-left\">\r\n\t\t\t\t\t\t\t<el-button type=\"primary\" @click=\"submitButton\"> 提交</el-button>\r\n\t\t\t\t\t\t</el-form-item>\r\n\t\t\t\t\t</el-form>\r\n\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"register\"\r\n\t\t\t\t:class=\"{\r\n\t\t\t\t\t\t'toRight':isLogin\r\n\t\t\t\t\t}\"\r\n\t\t\t\t>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\nimport VanillaTilt from 'vanilla-tilt';\r\nimport { onMounted,ref } from \"vue\";\r\n\r\nlet isLogin = ref(true);\r\nlet backgroundImg = ref(require(\"@/assets/imgs/3.png\"));\r\nlet color = ref(\"blak\")\r\nonMounted(() => {\r\n  // VanillaTilt.init(document.querySelector(\".card\"), {\r\n\t// \tmax: 50,\r\n\t// \tspeed: 400\r\n\t// });\r\n\t\r\n\t//It also supports NodeList\r\n\tVanillaTilt.init(document.querySelectorAll(\".login-left\"));\r\n});\r\n\r\nfunction openLogin(){\r\n\tisLogin.value=true;\r\n\tbackgroundImg.value=require(\"@/assets/imgs/3.png\");\r\n}\r\n\r\nfunction closeLogin(){\r\n\tisLogin.value=false;\r\n\tbackgroundImg.value=require(\"@/assets/imgs/10.jpg\");\r\n}\r\n\r\n//使用ref定义dom对象\r\nconst ruleForms = ref(null);\r\n\r\n//使用reactive定于数据\r\nconst state = reactive({\r\n\tselectObj: [\r\n\t\t{\r\n\t\t\tvalue: \"1\",\r\n\t\t\tlabel: \"项目1\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tvalue: \"2\",\r\n\t\t\tlabel: \"项目2\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tvalue: \"3\",\r\n\t\t\tlabel: \"项目3\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tvalue: \"4\",\r\n\t\t\tlabel: \"项目4\",\r\n\t\t},\r\n\t],\r\n\r\n\t//定义提交的数据\r\n\tformInfoObj: {\r\n\t\ttitleVal: \"\",\r\n\t\turlVal: \"\",\r\n\t\tselectVal: \"\",\r\n\t},\r\n\trules: {\r\n\t\t//定义验证规则，有两种方式：\r\n\t\t//1.使用ele原生的验证规则。\r\n\t\ttitleVal: [{ required: true, message: \"请输入标题\", trigger: \"blur\" }],\r\n\r\n\t\t//2.通过引用整体的验证规则的js来进行验证。\r\n\t\turlVal: [\r\n\t\t\t{\r\n\t\t\t\trequired: true,\r\n\t\t\t\tvalidator: globalValidate.requiredFunction,\r\n\t\t\t\ttrigger: \"blur\",\r\n\t\t\t},\r\n\t\t],\r\n\t\tselectVal: [{ required: true, message: \"此项为必填\", trigger: \"blur\" }],\r\n\t},\r\n});\r\n\r\n//定义提交按钮函数\r\nconst submitButton = () => {\r\n      //通过ref的值触发验证\r\n      ruleForms.value.validate((valid) => {\r\n        if (valid) {\r\n          console.log(\"通过\");\r\n          console.log(state.formInfoObj);\r\n          //触发成功验证表单，调用接口；\r\n        } else {\r\n          console.log(\"未通过\");\r\n        }\r\n      });\r\n    };\r\n\r\n   \r\n                        \r\n\r\n// const ruleFormRef = ref()\r\n\r\n</script>\r\n\r\n<style src=\"@/assets/css/login.css\" scoped>\r\n\r\n</style>"],"mappings":"AA8DA,OAAOA,WAAW,MAAM,cAAc;AACtC,SAASC,SAAS,EAACC,GAAG,QAAQ,KAAK;;;;;;;IAEnC,IAAIC,OAAO,GAAGD,GAAG,CAAC,IAAI,CAAC;IACvB,IAAIE,aAAa,GAAGF,GAAG,CAACG,OAAO,CAAC,qBAAqB,CAAC,CAAC;IACvD,IAAIC,KAAK,GAAGJ,GAAG,CAAC,MAAM,CAAC;IACvBD,SAAS,CAAC,MAAM;MACd;MACD;MACA;MACA;;MAEA;MACAD,WAAW,CAACO,IAAI,CAACC,QAAQ,CAACC,gBAAgB,CAAC,aAAa,CAAC,CAAC;IAC3D,CAAC,CAAC;IAEF,SAASC,SAASA,CAAA,EAAE;MACnBP,OAAO,CAACQ,KAAK,GAAC,IAAI;MAClBP,aAAa,CAACO,KAAK,GAACN,OAAO,CAAC,qBAAqB,CAAC;IACnD;IAEA,SAASO,UAAUA,CAAA,EAAE;MACpBT,OAAO,CAACQ,KAAK,GAAC,KAAK;MACnBP,aAAa,CAACO,KAAK,GAACN,OAAO,CAAC,sBAAsB,CAAC;IACpD;;IAEA;IACA,MAAMQ,SAAS,GAAGX,GAAG,CAAC,IAAI,CAAC;;IAE3B;IACA,MAAMY,KAAK,GAAGC,QAAQ,CAAC;MACtBC,SAAS,EAAE,CACV;QACCL,KAAK,EAAE,GAAG;QACVM,KAAK,EAAE;MACR,CAAC,EACD;QACCN,KAAK,EAAE,GAAG;QACVM,KAAK,EAAE;MACR,CAAC,EACD;QACCN,KAAK,EAAE,GAAG;QACVM,KAAK,EAAE;MACR,CAAC,EACD;QACCN,KAAK,EAAE,GAAG;QACVM,KAAK,EAAE;MACR,CAAC,CACD;MAED;MACAC,WAAW,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE,EAAE;QACVC,SAAS,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACN;QACA;QACAH,QAAQ,EAAE,CAAC;UAAEI,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,OAAO;UAAEC,OAAO,EAAE;QAAO,CAAC,CAAC;QAEjE;QACAL,MAAM,EAAE,CACP;UACCG,QAAQ,EAAE,IAAI;UACdG,SAAS,EAAEC,cAAc,CAACC,gBAAgB;UAC1CH,OAAO,EAAE;QACV,CAAC,CACD;QACDJ,SAAS,EAAE,CAAC;UAAEE,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,OAAO;UAAEC,OAAO,EAAE;QAAO,CAAC;MAClE;IACD,CAAC,CAAC;;IAEF;IACA,MAAMI,YAAY,GAAGA,CAAA,KAAM;MACrB;MACAhB,SAAS,CAACF,KAAK,CAACmB,QAAQ,CAAEC,KAAK,IAAK;QAClC,IAAIA,KAAK,EAAE;UACTC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;UACjBD,OAAO,CAACC,GAAG,CAACnB,KAAK,CAACI,WAAW,CAAC;UAC9B;QACF,CAAC,MAAM;UACLc,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;QACpB;MACF,CAAC,CAAC;IACJ,CAAC;;IAKL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}