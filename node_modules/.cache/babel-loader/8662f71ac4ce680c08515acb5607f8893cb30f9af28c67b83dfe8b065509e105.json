{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport router from '../router';\n// 创建一个axios实例\nconst service = axios.create({\n  baseURL: 'http://localhost:8081',\n  // 请求的基础URL\n  timeout: 10000 // 请求超时时间\n});\n\n// 请求拦截器\n// service.interceptors.request.use(\n//   config => {\n//     let accessToken = localStorage.getItem('token');\n//     if (accessToken) {\n//       config.headers = Object.assign({\n//         Authorization: `${accessToken}`\n//       }, config.headers);\n//     }\n//     return config;\n//   },\n//   error => {\n//     return Promise.reject(error);\n//   }\n// );\nservice.interceptors.request.use(config => {\n  // 在发送请求之前做些什么\n  if (localStorage.getItem('token')) {\n    config.headers['Token'] = localStorage.getItem('token'); // 让每个请求携带自定义token\n  } else {\n    return config;\n  }\n  if (localStorage.getItem('userInfo')) {\n    console.log('userInfo');\n    config.headers['UserId'] = JSON.parse(localStorage.getItem('userInfo')).id;\n  }\n  return config;\n}, error => {\n  // 对请求错误做些什么\n  console.log(error); // for debug\n  Promise.reject(error);\n});\n\n// 响应拦截器\nservice.interceptors.response.use(response => {\n  // 处理响应数据\n  // console.log(response.data)\n  return response.data;\n}, error => {\n  con;\n  // 处理响应错误\n  if (error.response.status === 401) {\n    // 收到401未授权错误，重定向到登录页面\n    router.push('/login');\n  }\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","router","service","create","baseURL","timeout","interceptors","request","use","config","localStorage","getItem","headers","console","log","JSON","parse","id","error","Promise","reject","response","data","con","status","push"],"sources":["E:/java项目/blog/blog-front/src/utils/request.js"],"sourcesContent":["import axios from 'axios';\r\nimport router from '../router'\r\n// 创建一个axios实例\r\nconst service = axios.create({\r\n  baseURL: 'http://localhost:8081', // 请求的基础URL\r\n  timeout: 10000 // 请求超时时间\r\n});\r\n\r\n// 请求拦截器\r\n// service.interceptors.request.use(\r\n//   config => {\r\n//     let accessToken = localStorage.getItem('token');\r\n//     if (accessToken) {\r\n//       config.headers = Object.assign({\r\n//         Authorization: `${accessToken}`\r\n//       }, config.headers);\r\n//     }\r\n//     return config;\r\n//   },\r\n//   error => {\r\n//     return Promise.reject(error);\r\n//   }\r\n// );\r\nservice.interceptors.request.use(\r\n  config => {\r\n    // 在发送请求之前做些什么\r\n    if (localStorage.getItem('token')) {\r\n      config.headers['Token'] = localStorage.getItem('token'); // 让每个请求携带自定义token\r\n    }else{\r\n      return config;\r\n    }\r\n    if(localStorage.getItem('userInfo')){\r\n      console.log('userInfo');\r\n      config.headers['UserId'] = JSON.parse(localStorage.getItem('userInfo')).id;\r\n    }\r\n    \r\n    return config;\r\n  },\r\n  error => {\r\n    // 对请求错误做些什么\r\n    console.log(error); // for debug\r\n    Promise.reject(error);\r\n  }\r\n);\r\n\r\n\r\n// 响应拦截器\r\nservice.interceptors.response.use(\r\n  response => {\r\n    // 处理响应数据\r\n    // console.log(response.data)\r\n    return response.data;\r\n  },\r\n  error => {\r\n    con\r\n    // 处理响应错误\r\n    if (error.response.status === 401) {\r\n      // 收到401未授权错误，重定向到登录页面\r\n      router.push('/login');\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default service;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,WAAW;AAC9B;AACA,MAAMC,OAAO,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC3BC,OAAO,EAAE,uBAAuB;EAAE;EAClCC,OAAO,EAAE,KAAK,CAAC;AACjB,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,OAAO,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAI;EACR;EACA,IAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;IACjCF,MAAM,CAACG,OAAO,CAAC,OAAO,CAAC,GAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EAC3D,CAAC,MAAI;IACH,OAAOF,MAAM;EACf;EACA,IAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,EAAC;IAClCE,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvBL,MAAM,CAACG,OAAO,CAAC,QAAQ,CAAC,GAAGG,IAAI,CAACC,KAAK,CAACN,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAACM,EAAE;EAC5E;EAEA,OAAOR,MAAM;AACf,CAAC,EACDS,KAAK,IAAI;EACP;EACAL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC,CAAC,CAAC;EACpBC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AACvB,CACF,CAAC;;AAGD;AACAhB,OAAO,CAACI,YAAY,CAACe,QAAQ,CAACb,GAAG,CAC/Ba,QAAQ,IAAI;EACV;EACA;EACA,OAAOA,QAAQ,CAACC,IAAI;AACtB,CAAC,EACDJ,KAAK,IAAI;EACPK,GAAG;EACH;EACA,IAAIL,KAAK,CAACG,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;IACjC;IACAvB,MAAM,CAACwB,IAAI,CAAC,QAAQ,CAAC;EACvB;EACA,OAAON,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAehB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}