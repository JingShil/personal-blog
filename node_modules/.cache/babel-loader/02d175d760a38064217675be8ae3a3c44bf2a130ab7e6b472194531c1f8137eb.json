{"ast":null,"code":"import { h, computed, inject, defineComponent, Transition } from 'vue';\nimport { useMemo } from 'vooks';\nimport { NCheckbox } from \"../../checkbox/index.mjs\";\nimport { NBaseLoading, NBaseIcon } from \"../../_internal/index.mjs\";\nimport { ChevronRightIcon, CheckmarkIcon } from \"../../_internal/icons/index.mjs\";\nimport { cascaderInjectionKey } from \"./interface.mjs\";\nimport { happensIn } from 'seemly';\nexport default defineComponent({\n  name: 'NCascaderOption',\n  props: {\n    tmNode: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(props) {\n    const {\n      expandTriggerRef,\n      remoteRef,\n      multipleRef,\n      mergedValueRef,\n      checkedKeysRef,\n      indeterminateKeysRef,\n      hoverKeyPathRef,\n      keyboardKeyRef,\n      loadingKeySetRef,\n      cascadeRef,\n      mergedCheckStrategyRef,\n      onLoadRef,\n      mergedClsPrefixRef,\n      mergedThemeRef,\n      labelFieldRef,\n      showCheckboxRef,\n      updateHoverKey,\n      updateKeyboardKey,\n      addLoadingKey,\n      deleteLoadingKey,\n      closeMenu,\n      doCheck,\n      doUncheck,\n      renderLabelRef\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    } = inject(cascaderInjectionKey);\n    const valueRef = computed(() => props.tmNode.key);\n    const useHoverTriggerRef = computed(() => {\n      const {\n        value: expandTrigger\n      } = expandTriggerRef;\n      const {\n        value: remote\n      } = remoteRef;\n      return !remote && expandTrigger === 'hover';\n    });\n    const mergedHandleMouseEnterRef = computed(() => {\n      if (useHoverTriggerRef.value) {\n        return handleMouseEnter;\n      }\n      return undefined;\n    });\n    const mergedHandleMouseMoveRef = computed(() => {\n      if (useHoverTriggerRef.value) {\n        return handleMouseMove;\n      }\n      return undefined;\n    });\n    const checkedRef = useMemo(() => {\n      const {\n        value: multiple\n      } = multipleRef;\n      if (!multiple) return mergedValueRef.value === valueRef.value;\n      return checkedKeysRef.value.includes(valueRef.value);\n    });\n    const indeterminateRef = useMemo(() => {\n      if (!multipleRef.value) return false;\n      return indeterminateKeysRef.value.includes(valueRef.value);\n    });\n    const hoverPendingRef = useMemo(() => {\n      return hoverKeyPathRef.value.includes(valueRef.value);\n    });\n    const keyboardPendingRef = useMemo(() => {\n      const {\n        value: keyboardKey\n      } = keyboardKeyRef;\n      if (keyboardKey === null) return false;\n      return keyboardKey === valueRef.value;\n    });\n    const isLoadingRef = useMemo(() => {\n      if (remoteRef.value) {\n        return loadingKeySetRef.value.has(valueRef.value);\n      }\n      return false;\n    });\n    const isLeafRef = computed(() => props.tmNode.isLeaf);\n    const disabledRef = computed(() => props.tmNode.disabled);\n    const labelRef = computed(() => props.tmNode.rawNode[labelFieldRef.value]);\n    const isShallowLoadedRef = computed(() => {\n      return props.tmNode.shallowLoaded;\n    });\n    function handleClick(e) {\n      if (disabledRef.value) return;\n      const {\n        value: remote\n      } = remoteRef;\n      const {\n        value: loadingKeySet\n      } = loadingKeySetRef;\n      const {\n        value: onLoad\n      } = onLoadRef;\n      const {\n        value\n      } = valueRef;\n      const {\n        value: isLeaf\n      } = isLeafRef;\n      const {\n        value: isShallowLoaded\n      } = isShallowLoadedRef;\n      if (!happensIn(e, 'checkbox')) {\n        if (remote && !isShallowLoaded && !loadingKeySet.has(value) && onLoad) {\n          addLoadingKey(value);\n          onLoad(props.tmNode.rawNode).then(() => {\n            deleteLoadingKey(value);\n          }).catch(() => {\n            deleteLoadingKey(value);\n          });\n        }\n        updateHoverKey(value);\n        updateKeyboardKey(value);\n      }\n      if (isLeaf) {\n        toggleCheckbox();\n      }\n    }\n    function handleMouseEnter() {\n      if (!useHoverTriggerRef.value || disabledRef.value) return;\n      const {\n        value\n      } = valueRef;\n      updateHoverKey(value);\n      updateKeyboardKey(value);\n    }\n    function handleMouseMove() {\n      if (!useHoverTriggerRef.value) return;\n      handleMouseEnter();\n    }\n    function handleCheckboxUpdateValue() {\n      const {\n        value: isLeaf\n      } = isLeafRef;\n      if (!isLeaf) toggleCheckbox();\n    }\n    function toggleCheckbox() {\n      const {\n        value: multiple\n      } = multipleRef;\n      const {\n        value\n      } = valueRef;\n      if (multiple) {\n        if (indeterminateRef.value || checkedRef.value) {\n          doUncheck(value);\n        } else {\n          doCheck(value);\n        }\n      } else {\n        doCheck(value);\n        closeMenu(true);\n      }\n    }\n    return {\n      checkStrategy: mergedCheckStrategyRef,\n      multiple: multipleRef,\n      cascade: cascadeRef,\n      checked: checkedRef,\n      indeterminate: indeterminateRef,\n      hoverPending: hoverPendingRef,\n      keyboardPending: keyboardPendingRef,\n      isLoading: isLoadingRef,\n      showCheckbox: showCheckboxRef,\n      isLeaf: isLeafRef,\n      disabled: disabledRef,\n      label: labelRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedTheme: mergedThemeRef,\n      handleClick,\n      handleCheckboxUpdateValue,\n      mergedHandleMouseEnter: mergedHandleMouseEnterRef,\n      mergedHandleMouseMove: mergedHandleMouseMoveRef,\n      renderLabel: renderLabelRef\n    };\n  },\n  render() {\n    const {\n      mergedClsPrefix,\n      renderLabel\n    } = this;\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-cascader-option`, {\n        [`${mergedClsPrefix}-cascader-option--pending`]: this.keyboardPending || this.hoverPending,\n        [`${mergedClsPrefix}-cascader-option--disabled`]: this.disabled,\n        [`${mergedClsPrefix}-cascader-option--show-prefix`]: this.showCheckbox\n      }],\n      onMouseenter: this.mergedHandleMouseEnter,\n      onMousemove: this.mergedHandleMouseMove,\n      onClick: this.handleClick\n    }, this.showCheckbox ? h(\"div\", {\n      class: `${mergedClsPrefix}-cascader-option__prefix`\n    }, h(NCheckbox, {\n      focusable: false,\n      \"data-checkbox\": true,\n      disabled: this.disabled,\n      checked: this.checked,\n      indeterminate: this.indeterminate,\n      theme: this.mergedTheme.peers.Checkbox,\n      themeOverrides: this.mergedTheme.peerOverrides.Checkbox,\n      onUpdateChecked: this.handleCheckboxUpdateValue\n    })) : null, h(\"span\", {\n      class: `${mergedClsPrefix}-cascader-option__label`\n    }, renderLabel ? renderLabel(this.tmNode.rawNode, this.checked) : this.label), h(\"div\", {\n      class: `${mergedClsPrefix}-cascader-option__suffix`\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-cascader-option-icon-placeholder`\n    }, !this.isLeaf ? h(NBaseLoading, {\n      clsPrefix: mergedClsPrefix,\n      scale: 0.85,\n      strokeWidth: 24,\n      show: this.isLoading,\n      class: `${mergedClsPrefix}-cascader-option-icon`\n    }, {\n      default: () => h(NBaseIcon, {\n        clsPrefix: mergedClsPrefix,\n        key: \"arrow\",\n        class: `${mergedClsPrefix}-cascader-option-icon ${mergedClsPrefix}-cascader-option-icon--arrow`\n      }, {\n        default: () => h(ChevronRightIcon, null)\n      })\n    }) : this.checkStrategy === 'child' && !(this.multiple && this.cascade) ? h(Transition, {\n      name: \"fade-in-scale-up-transition\"\n    }, {\n      default: () => this.checked ? h(NBaseIcon, {\n        clsPrefix: mergedClsPrefix,\n        class: `${mergedClsPrefix}-cascader-option-icon ${mergedClsPrefix}-cascader-option-icon--checkmark`\n      }, {\n        default: () => h(CheckmarkIcon, null)\n      }) : null\n    }) : null)));\n  }\n});","map":{"version":3,"names":["h","computed","inject","defineComponent","Transition","useMemo","NCheckbox","NBaseLoading","NBaseIcon","ChevronRightIcon","CheckmarkIcon","cascaderInjectionKey","happensIn","name","props","tmNode","type","Object","required","setup","expandTriggerRef","remoteRef","multipleRef","mergedValueRef","checkedKeysRef","indeterminateKeysRef","hoverKeyPathRef","keyboardKeyRef","loadingKeySetRef","cascadeRef","mergedCheckStrategyRef","onLoadRef","mergedClsPrefixRef","mergedThemeRef","labelFieldRef","showCheckboxRef","updateHoverKey","updateKeyboardKey","addLoadingKey","deleteLoadingKey","closeMenu","doCheck","doUncheck","renderLabelRef","valueRef","key","useHoverTriggerRef","value","expandTrigger","remote","mergedHandleMouseEnterRef","handleMouseEnter","undefined","mergedHandleMouseMoveRef","handleMouseMove","checkedRef","multiple","includes","indeterminateRef","hoverPendingRef","keyboardPendingRef","keyboardKey","isLoadingRef","has","isLeafRef","isLeaf","disabledRef","disabled","labelRef","rawNode","isShallowLoadedRef","shallowLoaded","handleClick","e","loadingKeySet","onLoad","isShallowLoaded","then","catch","toggleCheckbox","handleCheckboxUpdateValue","checkStrategy","cascade","checked","indeterminate","hoverPending","keyboardPending","isLoading","showCheckbox","label","mergedClsPrefix","mergedTheme","mergedHandleMouseEnter","mergedHandleMouseMove","renderLabel","render","class","onMouseenter","onMousemove","onClick","focusable","theme","peers","Checkbox","themeOverrides","peerOverrides","onUpdateChecked","clsPrefix","scale","strokeWidth","show","default"],"sources":["E:/java项目/blog/blog-front/node_modules/naive-ui/es/cascader/src/CascaderOption.mjs"],"sourcesContent":["import { h, computed, inject, defineComponent, Transition } from 'vue';\nimport { useMemo } from 'vooks';\nimport { NCheckbox } from \"../../checkbox/index.mjs\";\nimport { NBaseLoading, NBaseIcon } from \"../../_internal/index.mjs\";\nimport { ChevronRightIcon, CheckmarkIcon } from \"../../_internal/icons/index.mjs\";\nimport { cascaderInjectionKey } from \"./interface.mjs\";\nimport { happensIn } from 'seemly';\nexport default defineComponent({\n  name: 'NCascaderOption',\n  props: {\n    tmNode: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(props) {\n    const {\n      expandTriggerRef,\n      remoteRef,\n      multipleRef,\n      mergedValueRef,\n      checkedKeysRef,\n      indeterminateKeysRef,\n      hoverKeyPathRef,\n      keyboardKeyRef,\n      loadingKeySetRef,\n      cascadeRef,\n      mergedCheckStrategyRef,\n      onLoadRef,\n      mergedClsPrefixRef,\n      mergedThemeRef,\n      labelFieldRef,\n      showCheckboxRef,\n      updateHoverKey,\n      updateKeyboardKey,\n      addLoadingKey,\n      deleteLoadingKey,\n      closeMenu,\n      doCheck,\n      doUncheck,\n      renderLabelRef\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    } = inject(cascaderInjectionKey);\n    const valueRef = computed(() => props.tmNode.key);\n    const useHoverTriggerRef = computed(() => {\n      const {\n        value: expandTrigger\n      } = expandTriggerRef;\n      const {\n        value: remote\n      } = remoteRef;\n      return !remote && expandTrigger === 'hover';\n    });\n    const mergedHandleMouseEnterRef = computed(() => {\n      if (useHoverTriggerRef.value) {\n        return handleMouseEnter;\n      }\n      return undefined;\n    });\n    const mergedHandleMouseMoveRef = computed(() => {\n      if (useHoverTriggerRef.value) {\n        return handleMouseMove;\n      }\n      return undefined;\n    });\n    const checkedRef = useMemo(() => {\n      const {\n        value: multiple\n      } = multipleRef;\n      if (!multiple) return mergedValueRef.value === valueRef.value;\n      return checkedKeysRef.value.includes(valueRef.value);\n    });\n    const indeterminateRef = useMemo(() => {\n      if (!multipleRef.value) return false;\n      return indeterminateKeysRef.value.includes(valueRef.value);\n    });\n    const hoverPendingRef = useMemo(() => {\n      return hoverKeyPathRef.value.includes(valueRef.value);\n    });\n    const keyboardPendingRef = useMemo(() => {\n      const {\n        value: keyboardKey\n      } = keyboardKeyRef;\n      if (keyboardKey === null) return false;\n      return keyboardKey === valueRef.value;\n    });\n    const isLoadingRef = useMemo(() => {\n      if (remoteRef.value) {\n        return loadingKeySetRef.value.has(valueRef.value);\n      }\n      return false;\n    });\n    const isLeafRef = computed(() => props.tmNode.isLeaf);\n    const disabledRef = computed(() => props.tmNode.disabled);\n    const labelRef = computed(() => props.tmNode.rawNode[labelFieldRef.value]);\n    const isShallowLoadedRef = computed(() => {\n      return props.tmNode.shallowLoaded;\n    });\n    function handleClick(e) {\n      if (disabledRef.value) return;\n      const {\n        value: remote\n      } = remoteRef;\n      const {\n        value: loadingKeySet\n      } = loadingKeySetRef;\n      const {\n        value: onLoad\n      } = onLoadRef;\n      const {\n        value\n      } = valueRef;\n      const {\n        value: isLeaf\n      } = isLeafRef;\n      const {\n        value: isShallowLoaded\n      } = isShallowLoadedRef;\n      if (!happensIn(e, 'checkbox')) {\n        if (remote && !isShallowLoaded && !loadingKeySet.has(value) && onLoad) {\n          addLoadingKey(value);\n          onLoad(props.tmNode.rawNode).then(() => {\n            deleteLoadingKey(value);\n          }).catch(() => {\n            deleteLoadingKey(value);\n          });\n        }\n        updateHoverKey(value);\n        updateKeyboardKey(value);\n      }\n      if (isLeaf) {\n        toggleCheckbox();\n      }\n    }\n    function handleMouseEnter() {\n      if (!useHoverTriggerRef.value || disabledRef.value) return;\n      const {\n        value\n      } = valueRef;\n      updateHoverKey(value);\n      updateKeyboardKey(value);\n    }\n    function handleMouseMove() {\n      if (!useHoverTriggerRef.value) return;\n      handleMouseEnter();\n    }\n    function handleCheckboxUpdateValue() {\n      const {\n        value: isLeaf\n      } = isLeafRef;\n      if (!isLeaf) toggleCheckbox();\n    }\n    function toggleCheckbox() {\n      const {\n        value: multiple\n      } = multipleRef;\n      const {\n        value\n      } = valueRef;\n      if (multiple) {\n        if (indeterminateRef.value || checkedRef.value) {\n          doUncheck(value);\n        } else {\n          doCheck(value);\n        }\n      } else {\n        doCheck(value);\n        closeMenu(true);\n      }\n    }\n    return {\n      checkStrategy: mergedCheckStrategyRef,\n      multiple: multipleRef,\n      cascade: cascadeRef,\n      checked: checkedRef,\n      indeterminate: indeterminateRef,\n      hoverPending: hoverPendingRef,\n      keyboardPending: keyboardPendingRef,\n      isLoading: isLoadingRef,\n      showCheckbox: showCheckboxRef,\n      isLeaf: isLeafRef,\n      disabled: disabledRef,\n      label: labelRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedTheme: mergedThemeRef,\n      handleClick,\n      handleCheckboxUpdateValue,\n      mergedHandleMouseEnter: mergedHandleMouseEnterRef,\n      mergedHandleMouseMove: mergedHandleMouseMoveRef,\n      renderLabel: renderLabelRef\n    };\n  },\n  render() {\n    const {\n      mergedClsPrefix,\n      renderLabel\n    } = this;\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-cascader-option`, {\n        [`${mergedClsPrefix}-cascader-option--pending`]: this.keyboardPending || this.hoverPending,\n        [`${mergedClsPrefix}-cascader-option--disabled`]: this.disabled,\n        [`${mergedClsPrefix}-cascader-option--show-prefix`]: this.showCheckbox\n      }],\n      onMouseenter: this.mergedHandleMouseEnter,\n      onMousemove: this.mergedHandleMouseMove,\n      onClick: this.handleClick\n    }, this.showCheckbox ? h(\"div\", {\n      class: `${mergedClsPrefix}-cascader-option__prefix`\n    }, h(NCheckbox, {\n      focusable: false,\n      \"data-checkbox\": true,\n      disabled: this.disabled,\n      checked: this.checked,\n      indeterminate: this.indeterminate,\n      theme: this.mergedTheme.peers.Checkbox,\n      themeOverrides: this.mergedTheme.peerOverrides.Checkbox,\n      onUpdateChecked: this.handleCheckboxUpdateValue\n    })) : null, h(\"span\", {\n      class: `${mergedClsPrefix}-cascader-option__label`\n    }, renderLabel ? renderLabel(this.tmNode.rawNode, this.checked) : this.label), h(\"div\", {\n      class: `${mergedClsPrefix}-cascader-option__suffix`\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-cascader-option-icon-placeholder`\n    }, !this.isLeaf ? h(NBaseLoading, {\n      clsPrefix: mergedClsPrefix,\n      scale: 0.85,\n      strokeWidth: 24,\n      show: this.isLoading,\n      class: `${mergedClsPrefix}-cascader-option-icon`\n    }, {\n      default: () => h(NBaseIcon, {\n        clsPrefix: mergedClsPrefix,\n        key: \"arrow\",\n        class: `${mergedClsPrefix}-cascader-option-icon ${mergedClsPrefix}-cascader-option-icon--arrow`\n      }, {\n        default: () => h(ChevronRightIcon, null)\n      })\n    }) : this.checkStrategy === 'child' && !(this.multiple && this.cascade) ? h(Transition, {\n      name: \"fade-in-scale-up-transition\"\n    }, {\n      default: () => this.checked ? h(NBaseIcon, {\n        clsPrefix: mergedClsPrefix,\n        class: `${mergedClsPrefix}-cascader-option-icon ${mergedClsPrefix}-cascader-option-icon--checkmark`\n      }, {\n        default: () => h(CheckmarkIcon, null)\n      }) : null\n    }) : null)));\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}