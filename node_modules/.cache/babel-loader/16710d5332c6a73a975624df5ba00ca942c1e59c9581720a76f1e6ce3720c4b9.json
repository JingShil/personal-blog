{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createBlock(_component_el_form, {\n    ref: \"ruleFormRef\",\n    style: {\n      \"max-width\": \"600px\"\n    },\n    model: _ctx.ruleForm,\n    \"status-icon\": \"\",\n    rules: _ctx.rules,\n    \"label-width\": \"auto\",\n    class: \"demo-ruleForm\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"Password\",\n      prop: \"pass\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: _ctx.ruleForm.pass,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.ruleForm.pass = $event),\n        type: \"password\",\n        autocomplete: \"off\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"Confirm\",\n      prop: \"checkPass\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: _ctx.ruleForm.checkPass,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.ruleForm.checkPass = $event),\n        type: \"password\",\n        autocomplete: \"off\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"Age\",\n      prop: \"age\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: _ctx.ruleForm.age,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.ruleForm.age = $event),\n        modelModifiers: {\n          number: true\n        }\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: _cache[3] || (_cache[3] = $event => _ctx.submitForm(_ctx.ruleFormRef))\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Submit\")]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_button, {\n        onClick: _cache[4] || (_cache[4] = $event => _ctx.resetForm(_ctx.ruleFormRef))\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Reset\")]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\", \"rules\"]);\n}","map":{"version":3,"names":["_createBlock","_component_el_form","ref","style","model","_ctx","ruleForm","rules","class","default","_withCtx","_createVNode","_component_el_form_item","label","prop","_component_el_input","modelValue","pass","_cache","$event","type","autocomplete","_","checkPass","age","modelModifiers","number","_component_el_button","onClick","submitForm","ruleFormRef","_createTextVNode","resetForm"],"sources":["E:\\java项目\\test\\blog\\blog-front\\src\\views\\test\\Index.vue"],"sourcesContent":["<template>\r\n  <el-form\r\n    ref=\"ruleFormRef\"\r\n    style=\"max-width: 600px\"\r\n    :model=\"ruleForm\"\r\n    status-icon\r\n    :rules=\"rules\"\r\n    label-width=\"auto\"\r\n    class=\"demo-ruleForm\"\r\n  >\r\n    <el-form-item label=\"Password\" prop=\"pass\">\r\n      <el-input v-model=\"ruleForm.pass\" type=\"password\" autocomplete=\"off\" />\r\n    </el-form-item>\r\n    <el-form-item label=\"Confirm\" prop=\"checkPass\">\r\n      <el-input\r\n        v-model=\"ruleForm.checkPass\"\r\n        type=\"password\"\r\n        autocomplete=\"off\"\r\n      />\r\n    </el-form-item>\r\n    <el-form-item label=\"Age\" prop=\"age\">\r\n      <el-input v-model.number=\"ruleForm.age\" />\r\n    </el-form-item>\r\n    <el-form-item>\r\n      <el-button type=\"primary\" @click=\"submitForm(ruleFormRef)\"\r\n        >Submit</el-button\r\n      >\r\n      <el-button @click=\"resetForm(ruleFormRef)\">Reset</el-button>\r\n    </el-form-item>\r\n  </el-form>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref } from 'vue'\r\nimport { FormInstance, FormRules } from 'element-plus'\r\n\r\nconst ruleFormRef = ref<FormInstance>()\r\n\r\nconst checkAge = (rule, value: any, callback: any) => {\r\n  if (!value) {\r\n    return callback(new Error('Please input the age'))\r\n  }\r\n  setTimeout(() => {\r\n    if (!Number.isInteger(value)) {\r\n      callback(new Error('Please input digits'))\r\n    } else {\r\n      if (value < 18) {\r\n        callback(new Error('Age must be greater than 18'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n  }, 1000)\r\n}\r\n\r\nconst validatePass = (rule: any, value: any, callback: any) => {\r\n  if (value === '') {\r\n    callback(new Error('Please input the password'))\r\n  } else {\r\n    if (ruleForm.checkPass !== '') {\r\n      if (!ruleFormRef.value) return\r\n      ruleFormRef.value.validateField('checkPass', () => null)\r\n    }\r\n    callback()\r\n  }\r\n}\r\nconst validatePass2 = (rule: any, value: any, callback: any) => {\r\n  if (value === '') {\r\n    callback(new Error('Please input the password again'))\r\n  } else if (value !== ruleForm.pass) {\r\n    callback(new Error(\"Two inputs don't match!\"))\r\n  } else {\r\n    callback()\r\n  }\r\n}\r\n\r\nconst ruleForm = reactive({\r\n  pass: '',\r\n  checkPass: '',\r\n  age: '',\r\n})\r\n\r\nconst rules = reactive<FormRules<typeof ruleForm>>({\r\n  pass: [{ validator: validatePass, trigger: 'blur' }],\r\n  checkPass: [{ validator: validatePass2, trigger: 'blur' }],\r\n  age: [{ validator: checkAge, trigger: 'blur' }],\r\n})\r\n\r\nconst submitForm = (formEl: FormInstance | undefined) => {\r\n  if (!formEl) return\r\n  formEl.validate((valid) => {\r\n    if (valid) {\r\n      console.log('submit!')\r\n    } else {\r\n      console.log('error submit!')\r\n      return false\r\n    }\r\n  })\r\n}\r\n\r\nconst resetForm = (formEl: FormInstance | undefined) => {\r\n  if (!formEl) return\r\n  formEl.resetFields()\r\n}\r\n</script>\r\n"],"mappings":";;;;;;uBACEA,YAAA,CA4BUC,kBAAA;IA3BRC,GAAG,EAAC,aAAa;IACjBC,KAAwB,EAAxB;MAAA;IAAA,CAAwB;IACvBC,KAAK,EAAEC,IAAA,CAAAC,QAAQ;IAChB,aAAW,EAAX,EAAW;IACVC,KAAK,EAAEF,IAAA,CAAAE,KAAK;IACb,aAAW,EAAC,MAAM;IAClBC,KAAK,EAAC;;IARVC,OAAA,EAAAC,QAAA,CAUI,MAEe,CAFfC,YAAA,CAEeC,uBAAA;MAFDC,KAAK,EAAC,UAAU;MAACC,IAAI,EAAC;;MAVxCL,OAAA,EAAAC,QAAA,CAWM,MAAuE,CAAvEC,YAAA,CAAuEI,mBAAA;QAX7EC,UAAA,EAWyBX,IAAA,CAAAC,QAAQ,CAACW,IAAI;QAXtC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAWyBd,IAAA,CAAAC,QAAQ,CAACW,IAAI,GAAAE,MAAA;QAAEC,IAAI,EAAC,UAAU;QAACC,YAAY,EAAC;;MAXrEC,CAAA;QAaIX,YAAA,CAMeC,uBAAA;MANDC,KAAK,EAAC,SAAS;MAACC,IAAI,EAAC;;MAbvCL,OAAA,EAAAC,QAAA,CAcM,MAIE,CAJFC,YAAA,CAIEI,mBAAA;QAlBRC,UAAA,EAeiBX,IAAA,CAAAC,QAAQ,CAACiB,SAAS;QAfnC,uBAAAL,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAeiBd,IAAA,CAAAC,QAAQ,CAACiB,SAAS,GAAAJ,MAAA;QAC3BC,IAAI,EAAC,UAAU;QACfC,YAAY,EAAC;;MAjBrBC,CAAA;QAoBIX,YAAA,CAEeC,uBAAA;MAFDC,KAAK,EAAC,KAAK;MAACC,IAAI,EAAC;;MApBnCL,OAAA,EAAAC,QAAA,CAqBM,MAA0C,CAA1CC,YAAA,CAA0CI,mBAAA;QArBhDC,UAAA,EAqBgCX,IAAA,CAAAC,QAAQ,CAACkB,GAAG;QArB5C,uBAAAN,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAqBgCd,IAAA,CAAAC,QAAQ,CAACkB,GAAG,GAAAL,MAAA;QArB5CM,cAAA,EAqBgB;UAAAC,MAAA;QAAA;;MArBhBJ,CAAA;QAuBIX,YAAA,CAKeC,uBAAA;MA5BnBH,OAAA,EAAAC,QAAA,CAwBM,MACqB,CADrBC,YAAA,CACqBgB,oBAAA;QADVP,IAAI,EAAC,SAAS;QAAEQ,OAAK,EAAAV,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEd,IAAA,CAAAwB,UAAU,CAACxB,IAAA,CAAAyB,WAAW;;QAxB9DrB,OAAA,EAAAC,QAAA,CAyBS,MAAM,CAzBfqB,gBAAA,CAyBS,QAAM,E;QAzBfT,CAAA;UA2BMX,YAAA,CAA4DgB,oBAAA;QAAhDC,OAAK,EAAAV,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEd,IAAA,CAAA2B,SAAS,CAAC3B,IAAA,CAAAyB,WAAW;;QA3B9CrB,OAAA,EAAAC,QAAA,CA2BiD,MAAK,CA3BtDqB,gBAAA,CA2BiD,OAAK,E;QA3BtDT,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}