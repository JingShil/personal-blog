{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vditor from 'vditor';\n// 1.2 引入样式\nimport 'vditor/dist/index.css';\nimport { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { getArticleOne } from '@/api/article.js';\n// import VditorPreview from 'vditor/dist/method.min.js';\n// 2. 获取DOM引用\n\nexport default {\n  __name: 'Index',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    // 1.1 引入Vditor 构造函数\n    const route = useRoute();\n    const vditor = ref();\n    let articleId = null;\n    let articleTagList = ref([]);\n    let catalogs = ref([]);\n    let tags = ref([]);\n    let article = ref({\n      \"id\": null,\n      \"userId\": \"1\",\n      \"title\": \"\",\n      \"content\": \"\",\n      \"published\": null,\n      \"likeNum\": null,\n      \"collectNum\": null,\n      \"viewNum\": null,\n      \"commentNum\": null,\n      \"createTime\": null,\n      \"updateTime\": null\n    });\n    if (route.query.articleId != null) {\n      // console.log(route.query.article)\n      articleId = route.query.articleId;\n      // console.log(article);\n    }\n    // 3. 在组件初始化时，就创建Vditor对象，并引用\n    onMounted(() => {\n      if (articleId != null) getArticle();\n    });\n\n    // //获取所有tag\n    // function getTags () {\n    //   getTagList()\n    //     .then(res => {\n    //       tags.value = res.data;\n\n    //     })\n    // }\n\n    //获取文章\n    function getArticle() {\n      if (articleId != null) getArticleOne(articleId).then(res => {\n        articleTagList.value = res.data.tagList;\n        article.value = res.data.article;\n        const vditorSpan = document.getElementById(\"vditor\");\n        Vditor.preview(vditorSpan, article.value.content, {\n          hljs: {\n            style: \"github\"\n          },\n          after() {\n            getCatalog();\n          }\n        });\n      });\n    }\n\n    //生成目录\n    function getCatalog() {\n      let ma = document.getElementById(\"vditor\");\n      const titleTag = [\"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\"];\n      let titles = [];\n      let pre = 1;\n      let now = 0;\n      let count = 1;\n      let num = 0;\n      let parent = 1;\n      ma.childNodes.forEach((e, index) => {\n        if (titleTag.includes(e.nodeName)) {\n          // const id = ids[num++];\n          let id = 'ma-' + index;\n          ma.childNodes[index].id = id;\n          now = Number(e.nodeName.substring(1, 2));\n          if (pre > now) {\n            count = pre - now;\n          } else if (pre < now) {\n            count++;\n          } else {\n            parent;\n          }\n          pre = now;\n          titles.push({\n            id: id,\n            title: e.innerHTML,\n            level: count,\n            nodeName: e.nodeName\n          });\n        }\n      });\n      catalogs.value = titles;\n    }\n    //点击目录，自动追寻文章相应位置\n    function scrollTo(sectionId) {\n      const element = document.getElementById(sectionId);\n      if (element) {\n        console.log(sectionId);\n        element.scrollIntoView({\n          behavior: 'instant'\n        });\n      }\n    }\n    const __returned__ = {\n      route,\n      vditor,\n      get articleId() {\n        return articleId;\n      },\n      set articleId(v) {\n        articleId = v;\n      },\n      get articleTagList() {\n        return articleTagList;\n      },\n      set articleTagList(v) {\n        articleTagList = v;\n      },\n      get catalogs() {\n        return catalogs;\n      },\n      set catalogs(v) {\n        catalogs = v;\n      },\n      get tags() {\n        return tags;\n      },\n      set tags(v) {\n        tags = v;\n      },\n      get article() {\n        return article;\n      },\n      set article(v) {\n        article = v;\n      },\n      getArticle,\n      getCatalog,\n      scrollTo,\n      get Vditor() {\n        return Vditor;\n      },\n      ref,\n      onMounted,\n      get useRoute() {\n        return useRoute;\n      },\n      get getArticleOne() {\n        return getArticleOne;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["Vditor","ref","onMounted","useRoute","getArticleOne","route","vditor","articleId","articleTagList","catalogs","tags","article","query","getArticle","then","res","value","data","tagList","vditorSpan","document","getElementById","preview","content","hljs","style","after","getCatalog","ma","titleTag","titles","pre","now","count","num","parent","childNodes","forEach","e","index","includes","nodeName","id","Number","substring","push","title","innerHTML","level","scrollTo","sectionId","element","console","log","scrollIntoView","behavior"],"sources":["E:/java项目/test/blog/blog-front/src/views/blog/Index.vue"],"sourcesContent":["<template>\r\n\t<div class=\"blog-body\">\r\n\t\t<div class=\"blog-left\">\r\n\t\t\t<div class=\"blog-catalog\">\r\n\t\t\t\t<div class=\"blog-catalog-head\">\r\n\t\t\t\t\t<img src=\"@/assets/imgs/目录2.svg\">\r\n\t\t\t\t\t<h1>目录</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"blog-catalog-main\">\r\n\t\t\t\t\t<div class=\"blog-catalog-for\"\r\n\t\t\t\t\t\t\t\tv-for=\"(catalog, index) in catalogs\"\r\n\t\t\t\t\t\t\t\t:key=\"index\">\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t:style=\"{ marginLeft: catalog.level * 20 + 'px'}\"\r\n\t\t\t\t\t\t\t\t\t@click=\"scrollTo(catalog.id)\">{{ catalog.title }}</span>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"blog-center\">\r\n\t\t\t<h1 class=\"blog-title\">{{ article.title }}</h1>\r\n\t\t\t<div id=\"vditor\" class=\"blog-content\"></div>\r\n\t\t\t<div class=\"blog-comment\">评论</div>\r\n\t\t</div>\r\n\t\t<div class=\"blog-right\">\r\n\t\t\t<div class=\"blog-user\">\r\n\t\t\t\t<div class=\"blog-user-basic\">\r\n\t\t\t\t\t<img src=\"@/assets/imgs/fufu.jpg\" style=\"height: 50px;\">\r\n\t\t\t\t\t<span>作者</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"blog-user-link\">\r\n\t\t\t\t\t<div class=\"blog-user-link-item\">\r\n\t\t\t\t\t\t<img src=\"../../assets/imgs/微信.svg\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"blog-user-link-item\">\r\n\t\t\t\t\t\t<img src=\"../../assets/imgs/QQ.svg\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"blog-user-link-item\">\r\n\t\t\t\t\t\t<img src=\"../../assets/imgs/github.svg\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"blog-user-link-item\">\r\n\t\t\t\t\t\t<img src=\"../../assets/imgs/邮箱.svg\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"blog-data\">\r\n\t\t\t\t\t<div class=\"blog-data-item\">\r\n\t\t\t\t\t\t<el-icon><View /></el-icon>\r\n\t\t\t\t\t\t<span>1</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"blog-data-item\">\r\n\t\t\t\t\t\t<el-icon><Pointer /></el-icon>\r\n\t\t\t\t\t\t<span>1</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"blog-data-item\">\r\n\t\t\t\t\t\t<el-icon><Star /></el-icon>\r\n\t\t\t\t\t\t<span>1</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"blog-data-item\">\r\n\t\t\t\t\t\t<el-icon><ChatLineSquare /></el-icon>\r\n\t\t\t\t\t\t<span>1</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"blog-tag\">\r\n\t\t\t\t<div class=\"blog-tag-head\">\r\n\t\t\t\t\t<img src=\"@/assets/imgs/标签2.svg\">\r\n\t\t\t\t\t<h1>标签</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"blog-tag-main\">\r\n\t\t\t\t\t<div class=\"blog-tag-for\"\r\n\t\t\t\t\t\t\t\tv-for=\"(tag, index) in articleTagList\"\r\n\t\t\t\t\t\t\t\t:key=\"index\">\r\n\t\t\t\t\t\t<span class=\"blog-tag-item\">{{ tag.name }}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n// 1.1 引入Vditor 构造函数\r\nimport Vditor from 'vditor'\r\n// 1.2 引入样式\r\nimport 'vditor/dist/index.css';\r\nimport { ref, onMounted } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\nimport {getArticleOne} from '@/api/article.js'\r\n// import VditorPreview from 'vditor/dist/method.min.js';\r\n// 2. 获取DOM引用\r\nconst route = useRoute();\r\nconst vditor = ref()\r\nlet articleId=null;\r\nlet articleTagList = ref([]);\r\nlet catalogs = ref([])\r\nlet tags = ref([]);\r\nlet article=ref({\r\n  \"id\": null,\r\n  \"userId\": \"1\",\r\n  \"title\": \"\",\r\n  \"content\": \"\",\r\n  \"published\": null,\r\n  \"likeNum\": null,\r\n  \"collectNum\": null,\r\n  \"viewNum\":null,\r\n  \"commentNum\": null,\r\n  \"createTime\": null,\r\n  \"updateTime\": null\r\n})\r\nif(route.query.articleId != null){\r\n  // console.log(route.query.article)\r\n  articleId=route.query.articleId\r\n  // console.log(article);\r\n}\r\n// 3. 在组件初始化时，就创建Vditor对象，并引用\r\nonMounted(() => {\r\n\t\r\n\r\n\tif(articleId != null)\r\n\tgetArticle()\r\n})\r\n\r\n\r\n// //获取所有tag\r\n// function getTags () {\r\n//   getTagList()\r\n//     .then(res => {\r\n//       tags.value = res.data;\r\n      \r\n     \r\n//     })\r\n// }\r\n\r\n//获取文章\r\nfunction getArticle(){\r\n  \r\n  if(articleId!=null)\r\n    getArticleOne(articleId)\r\n    .then(res=>{\r\n     \r\n      articleTagList.value=res.data.tagList;\r\n      \r\n      article.value=res.data.article;\r\n\t\t\tconst vditorSpan = document.getElementById(\"vditor\");\r\n\t\t\tVditor.preview(vditorSpan,article.value.content,{\r\n\t\t\t\thljs:{style:\"github\"},\r\n\t\t\t\tafter(){\r\n\t\t\t\t\tgetCatalog();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n     \r\n    })\r\n  \r\n}\r\n\r\n//生成目录\r\nfunction getCatalog () {\r\n  let ma = document.getElementById(\"vditor\");\r\n\tconst titleTag = [\"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\"];\r\n\tlet titles=[];\r\n\tlet pre = 1;\r\n  let now = 0;\r\n  let count = 1;\r\n  let num = 0;\r\n\tlet parent=1;\r\n  ma.childNodes.forEach((e, index) => {\r\n    if (titleTag.includes(e.nodeName)) {\r\n      // const id = ids[num++];\r\n\t\t\tlet id = 'ma-' + index;\r\n\t\t\tma.childNodes[index].id = id\r\n      now = Number(e.nodeName.substring(1, 2));\r\n      if (pre > now) {\r\n        count=pre-now;\r\n      } else if (pre < now) {\r\n        count++;\r\n      } else {\r\n\t\t\t\tparent\r\n\t\t\t}\r\n      pre = now;\r\n      titles.push({\r\n        id: id,\r\n        title: e.innerHTML,\r\n        level: count,\r\n        nodeName: e.nodeName\r\n      });\r\n    }\r\n  });\r\n\tcatalogs.value=titles;\r\n\t\r\n}\r\n//点击目录，自动追寻文章相应位置\r\nfunction scrollTo (sectionId) {\r\n\r\n  const element = document.getElementById(sectionId);\r\n  if (element) {\r\n    console.log(sectionId)\r\n    element.scrollIntoView({ behavior: 'instant' });\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n\r\n\r\n<style src=\"../../assets/css/blog.css\" scoped>\r\n\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}