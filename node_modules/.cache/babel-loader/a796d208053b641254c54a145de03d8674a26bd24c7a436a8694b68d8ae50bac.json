{"ast":null,"code":"export function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return null;\n}","map":{"version":3,"names":[],"sources":["E:\\java项目\\blog\\blog-front\\src\\views\\test\\Index.vue"],"sourcesContent":["<template>\r\n\t\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport { reactive,onMounted,ref } from \"vue\";\r\n// import {login} from '@/api/user'\r\n// import { useRouter } from \"vue-router\";\r\n \r\n// const router = useRouter();\r\n\r\n// let isLogin = ref(true);\r\n// let backgroundImg = ref(require(\"@/assets/imgs/3.png\"));\r\n\r\nonMounted(() => {\r\n  // VanillaTilt.init(document.querySelector(\".card\"), {\r\n\t// \tmax: 50,\r\n\t// \tspeed: 400\r\n\t// });\r\n\t\r\n\t//It also supports NodeList\r\n\t\r\n});\r\n\r\n// function openLogin(){\r\n// \tisLogin.value=true;\r\n// \tbackgroundImg.value=require(\"@/assets/imgs/3.png\");\r\n// }\r\n\r\n// function closeLogin(){\r\n// \tisLogin.value=false;\r\n// \tbackgroundImg.value=require(\"@/assets/imgs/10.jpg\");\r\n// }\r\n\r\n\r\nconst ruleForm = reactive(\r\n\t{\r\n\t\t\"phone\":\"\",\r\n\t\t\"name\":\"\",\r\n\t\t\"password\":\"\",\r\n\t\t\"checkPass\":\"\",\r\n\t\t\"code\":\"\"\r\n\t}\r\n)\r\n\r\nconst user = {\r\n\t\"phone\":null,\r\n\t\"name\":null,\r\n\t\"password\":null\r\n}\r\nfunction loginTo(){\r\n\tuser.phone=ruleForm.phone;\r\n\tuser.password=ruleForm.password;\r\n\t// if(user.phone && user.password)\r\n\t// login(user)\r\n\t// .then(res=>{\r\n\t// \tif(res.code==1){\r\n\t// \t\tlocalStorage.setItem('token', res.token);\r\n\t// \t\tlocalStorage.setItem('userInfo',JSON.stringify(res.data));\r\n\t// \t\t// router.push({ path: \"/\" });\r\n\t// \t}\r\n\t\t\r\n\t// })\r\n\t\r\n}\r\n\r\n\r\n\r\nconst validatePhone = (rule, value, callback) => {\r\n  if(!value){\r\n    callback(new Error('请输入手机号'));\r\n  }else{\r\n    callback();\r\n  }\r\n  \r\n};\r\nconst validateName = (rule, value, callback) => {\r\n  if(!value){\r\n    callback(new Error('名称不能为空'));\r\n  }else{\r\n\t\tcallback();\r\n\t}\r\n  \r\n};\r\nconst validatePass = (rule, value, callback) => {\r\n  if(!value){\r\n    callback(new Error('请输入密码'));\r\n  }else{\r\n    callback();\r\n  }\r\n};\r\nconst validateCheckPass = (rule, value, callback) => {\r\n  if(!value || value != ruleForm.password){\r\n    callback(new Error('与密码不一致'));\r\n  }else{\r\n    callback();\r\n  }\r\n};\r\nconst validateCode = (rule, value, callback) => {\r\n  if(!value){\r\n    callback(new Error('请输入验证码'));\r\n  }else if(value < 1000){\r\n    callback(new Error('请输入四位验证码'));\r\n    console.log(value)\r\n  }else{\r\n    callback();\r\n  }\r\n};\r\n\r\nconst rules = {\r\n\tphone: [{ validator: validatePhone, trigger: 'blur' }],\r\n\tname: [{ validator: validateName, trigger: 'blur' }],\r\n\tpassword: [{  validator: validatePass, trigger: 'blur' }],\r\n\tcheckPass: [{  validator: validateCheckPass, trigger: 'blur' }],\r\n\tcode: [{  validator: validateCode, trigger: 'blur' }]\r\n};\r\n   \r\n                        \r\n\r\n\r\n\r\n</script>\r\n\r\n<style src=\"@/assets/css/login.css\" scoped>\r\n\r\n</style>"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}