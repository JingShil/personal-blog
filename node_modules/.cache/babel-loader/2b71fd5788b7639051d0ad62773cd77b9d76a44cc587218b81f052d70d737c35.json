{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vditor from 'vditor';\n// 1.2 引入样式\nimport 'vditor/dist/index.css';\nimport { ref, onMounted } from 'vue';\nimport { getTagList } from '@/api/tag.js';\nimport { save } from '@/api/article.js';\nimport { getArticleOne } from '@/api/article.js';\nimport { useRoute } from 'vue-router';\nexport default {\n  __name: 'Index',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    // 1.1 引入Vditor 构造函数\n    const route = useRoute();\n    const vditor = ref();\n    let catalogs = ref([]);\n    let menu = ref(0);\n    let tags = ref([]);\n    let tagList = [];\n    let articleTags = {};\n    let tagIdList = [];\n    let article = {\n      \"id\": null,\n      \"userId\": \"1\",\n      \"title\": null,\n      \"content\": null,\n      \"published\": null,\n      \"likeNum\": null,\n      \"collectNum\": null,\n      \"commentNum\": null,\n      \"createTime\": null,\n      \"updateTime\": null\n    };\n    let articleId = null;\n    if (route.query.articleId != null) {\n      // console.log(route.query.article)\n      articleId = route.query.article;\n      // console.log(article);\n    }\n\n    // console.log(route.query.article);\n    // let article= this.$route.query.article\n    // 3. 在组件初始化时，就创建Vditor对象，并引用\n    onMounted(() => {\n      vditor.value = new Vditor('vditor', {\n        // height: '200px',\n        width: '100%',\n        height: '80vh',\n        tab: \"\\t\",\n        // \"outline\": {\n        // \t\"enable\": true\n        // },\n        toolbar: ['emoji', 'headings', 'bold', 'italic', 'strike', '|', 'line', 'quote', 'list', 'ordered-list', 'check', 'code', 'inline-code', 'insert-after', 'insert-before', 'undo', 'redo', 'link', 'table', 'edit-mode', 'both', 'content-theme', 'export'],\n        input(value) {\n          getCatalog();\n        },\n        after() {\n          getTags();\n          vditor.value.setValue(article.content);\n          getCatalog();\n        }\n      });\n    });\n    //设置help\n    function setMenu(index) {\n      menu.value = index;\n    }\n\n    //获取文章\n    function getArticle() {\n      if (article) getArticleOne(articleId);\n      // getTagIdList(article.id)\n      // .then(res=>{\n      //   tagIdList=res.data;\n      //   selectTagList();\n      // })\n    }\n    function selectTagList() {\n      let edit_tags = document.getElementsByClassName('edit-tag');\n      for (let tag of edit_tags) {\n        let id = tag.getAttribute('id');\n        let parts = id.split('-'); // 使用split方法根据'-'分割字符串\n        let index = parts[2];\n        for (let tagId of tagIdList) {\n          if (tagId == tags.value[index].id) {\n            tag.classList.add('edit-tag-select');\n            break;\n          }\n        }\n      }\n    }\n    function selectTag(id) {\n      let tag = document.getElementById('edit-' + 'tag-' + id);\n      if (tag.classList.contains('edit-tag-select')) {\n        tag.classList.remove('edit-tag-select');\n      } else {\n        tag.classList.add('edit-tag-select');\n      }\n    }\n    //保存文章\n    function saveArticle(published) {\n      let edit_tags = document.getElementsByClassName('edit-tag');\n      for (let tag of edit_tags) {\n        if (tag.classList.contains('edit-tag-select')) {\n          let id = tag.getAttribute('id');\n          let parts = id.split('-'); // 使用split方法根据'-'分割字符串\n          let index = parts[2];\n          // console.log(tags.value[index])\n          tagList.push(tags.value[index]);\n        }\n      }\n      let markdown = vditor.value.getValue();\n      if (markdown == null) {\n        markdown = \"\";\n      }\n      if (article.title == null) {\n        article.title = \"无标题\";\n      }\n      article.content = markdown;\n      article.published = published;\n      articleTags = {\n        \"article\": article,\n        \"tagList\": tagList\n      };\n      // console.log(articleTags);\n      save(articleTags).then(res => {\n        console.log(res.data);\n      });\n    }\n\n    //获取所有tag\n    function getTags() {\n      getTagList().then(res => {\n        tags.value = res.data;\n        getTagId();\n      });\n    }\n    function getCatalog() {\n      //给标题附上id\n      const vditorModel = vditor.value.getCurrentMode();\n      const article_contents = document.getElementsByClassName(\"vditor-reset\");\n      const titleTag = [\"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\"];\n      let article_content = null;\n      let article_content2 = null;\n      let model = 'ir';\n      article_content = article_contents[2];\n      if (vditorModel === 'wysiwyg') {\n        article_content2 = article_contents[0];\n        model = 'wysiwyg';\n      } else if (vditorModel === 'sv') {\n        article_content2 = article_contents[1];\n        model = 'sv';\n      } else if (vditorModel === 'ir') {\n        article_content2 = article_contents[2];\n        model = 'ir';\n      }\n      // console.log(article_content)\n      let i = 0;\n      let ids = [];\n      article_content.childNodes.forEach((e, index) => {\n        // console.log(e);\n        // console.log(article_content2.childNodes[index]);\n        if (titleTag.includes(e.nodeName)) {\n          const id = model + \"-\" + index;\n          ids.push(id);\n          article_content2.childNodes[index].id = id;\n        }\n      });\n\n      //根据HTML内容，生成树\n      const article_content1 = new DOMParser().parseFromString(vditor.value.getHTML(), \"text/html\");\n      const titleTag1 = [\"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\"];\n      let titles = [];\n      // 将childNodes转换为数组\n      const childNodesArray = Array.from(article_content1.body.childNodes);\n      let pre = 1;\n      let now = 0;\n      let count = 1;\n      let num = 0;\n      childNodesArray.forEach((e, index) => {\n        if (titleTag.includes(e.nodeName)) {\n          const id = ids[num++];\n          now = Number(e.nodeName.substring(1, 2));\n          if (pre > now) {\n            count--;\n          } else if (pre < now) {\n            count++;\n          }\n          pre = now;\n          titles.push({\n            id: id,\n            title: e.innerHTML,\n            level: count,\n            nodeName: e.nodeName\n          });\n        }\n      });\n      catalogs.value = titles;\n    }\n    function scrollTo(sectionId) {\n      const element = document.getElementById(sectionId);\n      if (element) {\n        console.log(sectionId);\n        element.scrollIntoView({\n          behavior: 'instant'\n        });\n      }\n    }\n    const __returned__ = {\n      route,\n      vditor,\n      get catalogs() {\n        return catalogs;\n      },\n      set catalogs(v) {\n        catalogs = v;\n      },\n      get menu() {\n        return menu;\n      },\n      set menu(v) {\n        menu = v;\n      },\n      get tags() {\n        return tags;\n      },\n      set tags(v) {\n        tags = v;\n      },\n      get tagList() {\n        return tagList;\n      },\n      set tagList(v) {\n        tagList = v;\n      },\n      get articleTags() {\n        return articleTags;\n      },\n      set articleTags(v) {\n        articleTags = v;\n      },\n      get tagIdList() {\n        return tagIdList;\n      },\n      set tagIdList(v) {\n        tagIdList = v;\n      },\n      get article() {\n        return article;\n      },\n      set article(v) {\n        article = v;\n      },\n      get articleId() {\n        return articleId;\n      },\n      set articleId(v) {\n        articleId = v;\n      },\n      setMenu,\n      getArticle,\n      selectTagList,\n      selectTag,\n      saveArticle,\n      getTags,\n      getCatalog,\n      scrollTo,\n      get Vditor() {\n        return Vditor;\n      },\n      ref,\n      onMounted,\n      get getTagList() {\n        return getTagList;\n      },\n      get save() {\n        return save;\n      },\n      get getArticleOne() {\n        return getArticleOne;\n      },\n      get useRoute() {\n        return useRoute;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["Vditor","ref","onMounted","getTagList","save","getArticleOne","useRoute","route","vditor","catalogs","menu","tags","tagList","articleTags","tagIdList","article","articleId","query","value","width","height","tab","toolbar","input","getCatalog","after","getTags","setValue","content","setMenu","index","getArticle","selectTagList","edit_tags","document","getElementsByClassName","tag","id","getAttribute","parts","split","tagId","classList","add","selectTag","getElementById","contains","remove","saveArticle","published","push","markdown","getValue","title","then","res","console","log","data","getTagId","vditorModel","getCurrentMode","article_contents","titleTag","article_content","article_content2","model","i","ids","childNodes","forEach","e","includes","nodeName","article_content1","DOMParser","parseFromString","getHTML","titleTag1","titles","childNodesArray","Array","from","body","pre","now","count","num","Number","substring","innerHTML","level","scrollTo","sectionId","element","scrollIntoView","behavior"],"sources":["E:/java项目/test/blog/blog-front/src/views/edit/Index.vue"],"sourcesContent":["<template>\r\n  <div class=\"edit-body\">\r\n    <div class=\"edit-head\">\r\n      <div class=\"edit-title-input\">\r\n        <input placeholder=\"请输入标题\"\r\n               maxlength=\"100\"\r\n               v-model=\"article.title\" />\r\n        <span>0/100</span>\r\n      </div>\r\n      <el-button class=\"edit-save\"\r\n                 @click=\"saveArticle(0)\">保存</el-button>\r\n      <el-button type=\"primary\"\r\n                 @click=\"saveArticle(1)\">发布</el-button>\r\n      <img src=\"../../assets/imgs/fufu.jpg\"\r\n           style=\"height: 40px;margin-left: 20px;border-radius: 30px;\">\r\n    </div>\r\n    <div class=\"edit-container\">\r\n      <div class=\"edit-left\">\r\n        <div class=\"edit-content\"\r\n             id=\"vditor\"></div>\r\n      </div>\r\n      <div class=\"edit-right\">\r\n        <div class=\"edit-help\">\r\n          <div class=\"edit-help-item\" @click=\"setMenu(0)\">\r\n            <img src=\"../../assets/imgs/目录.svg\">\r\n            <span>目录</span>\r\n          </div>\r\n          <div class=\"edit-help-item\" @click=\"setMenu(1)\">\r\n            <img src=\"../../assets/imgs/标签.svg\">\r\n            <span>标签</span>\r\n          </div>\r\n          <div class=\"edit-help-item\">\r\n            <img src=\"../../assets/imgs/AI-chat.svg\">\r\n            <span>AI助手</span>\r\n          </div>\r\n          <div class=\"edit-help-item\">\r\n            <img src=\"../../assets/imgs/帮助与说明.svg\">\r\n            <span>语法</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"edit-help-content\">\r\n\r\n          <div class=\"edit-help-content-item\"\r\n               v-if=\"menu==0\">\r\n            <div class=\"edit-help-content-head\">\r\n              <span>文章目录</span>\r\n            </div>\r\n            <div class=\"edit-help-catalog\">\r\n              <div class=\"edit-help-catalog-for\"\r\n                   v-for=\"(catalog, index) in catalogs\"\r\n                   :key=\"index\">\r\n                <span :id=\"catalog.id\"\r\n                      :style=\"{ marginLeft: catalog.level * 20 + 'px'}\"\r\n                      @click=\"scrollTo(catalog.id)\">{{ catalog.title }}</span>\r\n\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div class=\"edit-help-content-item\"\r\n               v-if=\"menu==1\">\r\n            <div class=\"edit-help-content-head\">\r\n              <span>标签</span>\r\n            </div>\r\n            <div class=\"edit-help-tag\">\r\n              <div class=\"edit-help-tag-for\"\r\n                   v-for=\"(tag, index) in tags\"\r\n                   :key=\"index\">\r\n                <span :id=\"'edit-'+'tag-'+index\"\r\n                      class=\"edit-tag\"\r\n                      type=\"primary\"\r\n                      @click=\"selectTag(index)\">{{ tag.name }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script setup>\r\n// 1.1 引入Vditor 构造函数\r\nimport Vditor from 'vditor'\r\n// 1.2 引入样式\r\nimport 'vditor/dist/index.css';\r\nimport { ref, onMounted } from 'vue';\r\nimport { getTagList } from '@/api/tag.js';\r\nimport { save } from '@/api/article.js'\r\nimport {getArticleOne} from '@/api/article.js'\r\nimport { useRoute } from 'vue-router';\r\nconst route = useRoute();\r\nconst vditor = ref()\r\nlet catalogs = ref([])\r\n\r\nlet menu = ref(0);\r\nlet tags = ref([]);\r\nlet tagList = [];\r\nlet articleTags = {};\r\nlet tagIdList = [];\r\nlet article = {\r\n  \"id\": null,\r\n  \"userId\": \"1\",\r\n  \"title\": null,\r\n  \"content\": null,\r\n  \"published\": null,\r\n  \"likeNum\": null,\r\n  \"collectNum\": null,\r\n  \"commentNum\": null,\r\n  \"createTime\": null,\r\n  \"updateTime\": null\r\n}\r\nlet articleId = null;\r\nif(route.query.articleId != null){\r\n  // console.log(route.query.article)\r\n  articleId=route.query.article\r\n  // console.log(article);\r\n}\r\n\r\n// console.log(route.query.article);\r\n// let article= this.$route.query.article\r\n// 3. 在组件初始化时，就创建Vditor对象，并引用\r\nonMounted(() => {\r\n  vditor.value = new Vditor('vditor', {\r\n    // height: '200px',\r\n    width: '100%',\r\n    height: '80vh',\r\n    tab: \"\\t\",\r\n    // \"outline\": {\r\n    // \t\"enable\": true\r\n    // },\r\n    toolbar: [\r\n      'emoji', 'headings', 'bold', 'italic', 'strike', '|', 'line', 'quote', 'list', 'ordered-list', 'check',\r\n      'code', 'inline-code', 'insert-after', 'insert-before', 'undo', 'redo', 'link', 'table', 'edit-mode',\r\n      'both', 'content-theme', 'export',\r\n\r\n\r\n    ],\r\n\r\n    input (value) {\r\n      getCatalog();\r\n    },\r\n    after () {\r\n      getTags();\r\n      \r\n      vditor.value.setValue(article.content);\r\n      getCatalog();\r\n    }\r\n\r\n\r\n  })\r\n  \r\n\r\n\r\n\r\n})\r\n//设置help\r\nfunction setMenu(index){\r\n  menu.value=index;\r\n}\r\n\r\n//获取文章\r\nfunction getArticle(){\r\n  if(article)\r\n  getArticleOne(articleId)\r\n  // getTagIdList(article.id)\r\n  // .then(res=>{\r\n  //   tagIdList=res.data;\r\n  //   selectTagList();\r\n  // })\r\n}\r\n\r\nfunction selectTagList() {\r\n  let edit_tags = document.getElementsByClassName('edit-tag');\r\n  for (let tag of edit_tags) {\r\n    let id = tag.getAttribute('id');\r\n    let parts = id.split('-'); // 使用split方法根据'-'分割字符串\r\n    let index = parts[2];\r\n    \r\n    for(let tagId of tagIdList){\r\n      \r\n      if(tagId == tags.value[index].id){\r\n        \r\n        tag.classList.add('edit-tag-select');\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction selectTag (id) {\r\n  let tag = document.getElementById('edit-' + 'tag-' + id);\r\n  if (tag.classList.contains('edit-tag-select')) {\r\n    tag.classList.remove('edit-tag-select');\r\n\r\n\r\n  } else {\r\n    tag.classList.add('edit-tag-select');\r\n  }\r\n\r\n}\r\n//保存文章\r\nfunction saveArticle (published) {\r\n  let edit_tags = document.getElementsByClassName('edit-tag');\r\n  for (let tag of edit_tags) {\r\n    if (tag.classList.contains('edit-tag-select')) {\r\n      let id = tag.getAttribute('id');\r\n      let parts = id.split('-'); // 使用split方法根据'-'分割字符串\r\n      let index = parts[2];\r\n      // console.log(tags.value[index])\r\n      tagList.push(tags.value[index]);\r\n    }\r\n  }\r\n\r\n  let markdown = vditor.value.getValue();\r\n  if (markdown == null) {\r\n    markdown = \"\";\r\n  }\r\n  if (article.title == null) {\r\n    article.title = \"无标题\";\r\n  }\r\n  article.content = markdown;\r\n  article.published = published;\r\n  articleTags = {\r\n    \"article\": article,\r\n    \"tagList\": tagList\r\n  };\r\n  // console.log(articleTags);\r\n  save(articleTags)\r\n    .then(res => {\r\n      console.log(res.data);\r\n    })\r\n\r\n}\r\n\r\n//获取所有tag\r\nfunction getTags () {\r\n  getTagList()\r\n    .then(res => {\r\n      tags.value = res.data;\r\n      getTagId();\r\n      \r\n    })\r\n}\r\n\r\n\r\nfunction getCatalog () {\r\n  //给标题附上id\r\n  const vditorModel = vditor.value.getCurrentMode();\r\n\r\n  const article_contents = document.getElementsByClassName(\"vditor-reset\");\r\n  const titleTag = [\"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\"];\r\n  let article_content = null;\r\n  let article_content2 = null;\r\n  let model = 'ir';\r\n  article_content = article_contents[2];\r\n  if (vditorModel === 'wysiwyg') {\r\n    article_content2 = article_contents[0];\r\n    model = 'wysiwyg';\r\n  } else if (vditorModel === 'sv') {\r\n    article_content2 = article_contents[1];\r\n    model = 'sv';\r\n  } else if (vditorModel === 'ir') {\r\n    article_content2 = article_contents[2];\r\n    model = 'ir';\r\n  }\r\n  // console.log(article_content)\r\n  let i = 0;\r\n  let ids = []\r\n  article_content.childNodes.forEach((e, index) => {\r\n    // console.log(e);\r\n    // console.log(article_content2.childNodes[index]);\r\n    if (titleTag.includes(e.nodeName)) {\r\n      const id = model + \"-\" + index;\r\n      ids.push(id)\r\n\r\n      article_content2.childNodes[index].id = id\r\n    }\r\n  })\r\n\r\n  //根据HTML内容，生成树\r\n  const article_content1 = new DOMParser().parseFromString(vditor.value.getHTML(), \"text/html\");\r\n  const titleTag1 = [\"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\"];\r\n\r\n  let titles = [];\r\n  // 将childNodes转换为数组\r\n  const childNodesArray = Array.from(article_content1.body.childNodes);\r\n  let pre = 1;\r\n  let now = 0;\r\n  let count = 1;\r\n  let num = 0;\r\n  childNodesArray.forEach((e, index) => {\r\n    if (titleTag.includes(e.nodeName)) {\r\n      const id = ids[num++];\r\n      now = Number(e.nodeName.substring(1, 2));\r\n      if (pre > now) {\r\n        count--;\r\n      } else if (pre < now) {\r\n        count++;\r\n      }\r\n      pre = now;\r\n      titles.push({\r\n        id: id,\r\n        title: e.innerHTML,\r\n        level: count,\r\n        nodeName: e.nodeName\r\n      });\r\n    }\r\n  });\r\n\r\n  catalogs.value = titles;\r\n\r\n\r\n\r\n}\r\n\r\nfunction scrollTo (sectionId) {\r\n\r\n  const element = document.getElementById(sectionId);\r\n  if (element) {\r\n    console.log(sectionId)\r\n    element.scrollIntoView({ behavior: 'instant' });\r\n  }\r\n}\r\n\r\n\r\n\r\n</script>\r\n\r\n\r\n<style src=\"../../assets/css/edit.css\" scoped>\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}