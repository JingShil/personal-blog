{"ast":null,"code":"import { h, defineComponent, inject, computed } from 'vue';\nimport { throwError } from \"../../_utils/index.mjs\";\nimport { uploadInjectionKey } from \"./interface.mjs\";\nimport NUploadFile from \"./UploadFile.mjs\";\nimport { NImageGroup } from \"../../image/index.mjs\";\nimport { NFadeInExpandTransition } from \"../../_internal/index.mjs\";\nimport NUploadTrigger from \"./UploadTrigger.mjs\";\nexport default defineComponent({\n  name: 'UploadFileList',\n  setup(_, {\n    slots\n  }) {\n    const NUpload = inject(uploadInjectionKey, null);\n    if (!NUpload) {\n      throwError('upload-file-list', '`n-upload-file-list` must be placed inside `n-upload`.');\n    }\n    const {\n      abstractRef,\n      mergedClsPrefixRef,\n      listTypeRef,\n      mergedFileListRef,\n      fileListClassRef,\n      fileListStyleRef,\n      cssVarsRef,\n      themeClassRef,\n      maxReachedRef,\n      showTriggerRef,\n      imageGroupPropsRef\n    } = NUpload;\n    const isImageCardTypeRef = computed(() => listTypeRef.value === 'image-card');\n    const renderFileList = () => mergedFileListRef.value.map(file => h(NUploadFile, {\n      clsPrefix: mergedClsPrefixRef.value,\n      key: file.id,\n      file: file,\n      listType: listTypeRef.value\n    }));\n    const renderUploadFileList = () => isImageCardTypeRef.value ? h(NImageGroup, Object.assign({}, imageGroupPropsRef.value), {\n      default: renderFileList\n    }) : h(NFadeInExpandTransition, {\n      group: true\n    }, {\n      default: renderFileList\n    });\n    return () => {\n      const {\n        value: mergedClsPrefix\n      } = mergedClsPrefixRef;\n      const {\n        value: abstract\n      } = abstractRef;\n      return h(\"div\", {\n        class: [`${mergedClsPrefix}-upload-file-list`, isImageCardTypeRef.value && `${mergedClsPrefix}-upload-file-list--grid`, abstract ? themeClassRef === null || themeClassRef === void 0 ? void 0 : themeClassRef.value : undefined, fileListClassRef.value],\n        style: [abstract && cssVarsRef ? cssVarsRef.value : '', fileListStyleRef.value]\n      }, renderUploadFileList(), showTriggerRef.value && !maxReachedRef.value && isImageCardTypeRef.value && h(NUploadTrigger, null, slots));\n    };\n  }\n});","map":{"version":3,"names":["h","defineComponent","inject","computed","throwError","uploadInjectionKey","NUploadFile","NImageGroup","NFadeInExpandTransition","NUploadTrigger","name","setup","_","slots","NUpload","abstractRef","mergedClsPrefixRef","listTypeRef","mergedFileListRef","fileListClassRef","fileListStyleRef","cssVarsRef","themeClassRef","maxReachedRef","showTriggerRef","imageGroupPropsRef","isImageCardTypeRef","value","renderFileList","map","file","clsPrefix","key","id","listType","renderUploadFileList","Object","assign","default","group","mergedClsPrefix","abstract","class","undefined","style"],"sources":["E:/java项目/test/blog/blog-front/node_modules/naive-ui/es/upload/src/UploadFileList.mjs"],"sourcesContent":["import { h, defineComponent, inject, computed } from 'vue';\nimport { throwError } from \"../../_utils/index.mjs\";\nimport { uploadInjectionKey } from \"./interface.mjs\";\nimport NUploadFile from \"./UploadFile.mjs\";\nimport { NImageGroup } from \"../../image/index.mjs\";\nimport { NFadeInExpandTransition } from \"../../_internal/index.mjs\";\nimport NUploadTrigger from \"./UploadTrigger.mjs\";\nexport default defineComponent({\n  name: 'UploadFileList',\n  setup(_, {\n    slots\n  }) {\n    const NUpload = inject(uploadInjectionKey, null);\n    if (!NUpload) {\n      throwError('upload-file-list', '`n-upload-file-list` must be placed inside `n-upload`.');\n    }\n    const {\n      abstractRef,\n      mergedClsPrefixRef,\n      listTypeRef,\n      mergedFileListRef,\n      fileListClassRef,\n      fileListStyleRef,\n      cssVarsRef,\n      themeClassRef,\n      maxReachedRef,\n      showTriggerRef,\n      imageGroupPropsRef\n    } = NUpload;\n    const isImageCardTypeRef = computed(() => listTypeRef.value === 'image-card');\n    const renderFileList = () => mergedFileListRef.value.map(file => h(NUploadFile, {\n      clsPrefix: mergedClsPrefixRef.value,\n      key: file.id,\n      file: file,\n      listType: listTypeRef.value\n    }));\n    const renderUploadFileList = () => isImageCardTypeRef.value ? h(NImageGroup, Object.assign({}, imageGroupPropsRef.value), {\n      default: renderFileList\n    }) : h(NFadeInExpandTransition, {\n      group: true\n    }, {\n      default: renderFileList\n    });\n    return () => {\n      const {\n        value: mergedClsPrefix\n      } = mergedClsPrefixRef;\n      const {\n        value: abstract\n      } = abstractRef;\n      return h(\"div\", {\n        class: [`${mergedClsPrefix}-upload-file-list`, isImageCardTypeRef.value && `${mergedClsPrefix}-upload-file-list--grid`, abstract ? themeClassRef === null || themeClassRef === void 0 ? void 0 : themeClassRef.value : undefined, fileListClassRef.value],\n        style: [abstract && cssVarsRef ? cssVarsRef.value : '', fileListStyleRef.value]\n      }, renderUploadFileList(), showTriggerRef.value && !maxReachedRef.value && isImageCardTypeRef.value && h(NUploadTrigger, null, slots));\n    };\n  }\n});"],"mappings":"AAAA,SAASA,CAAC,EAAEC,eAAe,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,KAAK;AAC1D,SAASC,UAAU,QAAQ,wBAAwB;AACnD,SAASC,kBAAkB,QAAQ,iBAAiB;AACpD,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,uBAAuB,QAAQ,2BAA2B;AACnE,OAAOC,cAAc,MAAM,qBAAqB;AAChD,eAAeR,eAAe,CAAC;EAC7BS,IAAI,EAAE,gBAAgB;EACtBC,KAAKA,CAACC,CAAC,EAAE;IACPC;EACF,CAAC,EAAE;IACD,MAAMC,OAAO,GAAGZ,MAAM,CAACG,kBAAkB,EAAE,IAAI,CAAC;IAChD,IAAI,CAACS,OAAO,EAAE;MACZV,UAAU,CAAC,kBAAkB,EAAE,wDAAwD,CAAC;IAC1F;IACA,MAAM;MACJW,WAAW;MACXC,kBAAkB;MAClBC,WAAW;MACXC,iBAAiB;MACjBC,gBAAgB;MAChBC,gBAAgB;MAChBC,UAAU;MACVC,aAAa;MACbC,aAAa;MACbC,cAAc;MACdC;IACF,CAAC,GAAGX,OAAO;IACX,MAAMY,kBAAkB,GAAGvB,QAAQ,CAAC,MAAMc,WAAW,CAACU,KAAK,KAAK,YAAY,CAAC;IAC7E,MAAMC,cAAc,GAAGA,CAAA,KAAMV,iBAAiB,CAACS,KAAK,CAACE,GAAG,CAACC,IAAI,IAAI9B,CAAC,CAACM,WAAW,EAAE;MAC9EyB,SAAS,EAAEf,kBAAkB,CAACW,KAAK;MACnCK,GAAG,EAAEF,IAAI,CAACG,EAAE;MACZH,IAAI,EAAEA,IAAI;MACVI,QAAQ,EAAEjB,WAAW,CAACU;IACxB,CAAC,CAAC,CAAC;IACH,MAAMQ,oBAAoB,GAAGA,CAAA,KAAMT,kBAAkB,CAACC,KAAK,GAAG3B,CAAC,CAACO,WAAW,EAAE6B,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEZ,kBAAkB,CAACE,KAAK,CAAC,EAAE;MACxHW,OAAO,EAAEV;IACX,CAAC,CAAC,GAAG5B,CAAC,CAACQ,uBAAuB,EAAE;MAC9B+B,KAAK,EAAE;IACT,CAAC,EAAE;MACDD,OAAO,EAAEV;IACX,CAAC,CAAC;IACF,OAAO,MAAM;MACX,MAAM;QACJD,KAAK,EAAEa;MACT,CAAC,GAAGxB,kBAAkB;MACtB,MAAM;QACJW,KAAK,EAAEc;MACT,CAAC,GAAG1B,WAAW;MACf,OAAOf,CAAC,CAAC,KAAK,EAAE;QACd0C,KAAK,EAAE,CAAE,GAAEF,eAAgB,mBAAkB,EAAEd,kBAAkB,CAACC,KAAK,IAAK,GAAEa,eAAgB,yBAAwB,EAAEC,QAAQ,GAAGnB,aAAa,KAAK,IAAI,IAAIA,aAAa,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACK,KAAK,GAAGgB,SAAS,EAAExB,gBAAgB,CAACQ,KAAK,CAAC;QACzPiB,KAAK,EAAE,CAACH,QAAQ,IAAIpB,UAAU,GAAGA,UAAU,CAACM,KAAK,GAAG,EAAE,EAAEP,gBAAgB,CAACO,KAAK;MAChF,CAAC,EAAEQ,oBAAoB,CAAC,CAAC,EAAEX,cAAc,CAACG,KAAK,IAAI,CAACJ,aAAa,CAACI,KAAK,IAAID,kBAAkB,CAACC,KAAK,IAAI3B,CAAC,CAACS,cAAc,EAAE,IAAI,EAAEI,KAAK,CAAC,CAAC;IACxI,CAAC;EACH;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}