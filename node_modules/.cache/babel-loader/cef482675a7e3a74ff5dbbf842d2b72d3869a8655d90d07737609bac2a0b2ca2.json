{"ast":null,"code":"import { h, ref, defineComponent, computed, onMounted, onBeforeUnmount, mergeProps, Transition, watchEffect, Fragment } from 'vue';\nimport { on, off } from 'evtd';\nimport { VResizeObserver } from 'vueuc';\nimport { useIsIos } from 'vooks';\nimport { getPreciseEventTarget } from 'seemly';\nimport { useConfig, useTheme, useThemeClass, useRtl } from \"../../../_mixins/index.mjs\";\nimport { useReactivated, Wrapper } from \"../../../_utils/index.mjs\";\nimport { scrollbarLight } from \"../styles/index.mjs\";\nimport style from \"./styles/index.cssr.mjs\";\nconst scrollbarProps = Object.assign(Object.assign({}, useTheme.props), {\n  size: {\n    type: Number,\n    default: 5\n  },\n  duration: {\n    type: Number,\n    default: 0\n  },\n  scrollable: {\n    type: Boolean,\n    default: true\n  },\n  xScrollable: Boolean,\n  trigger: {\n    type: String,\n    default: 'hover'\n  },\n  useUnifiedContainer: Boolean,\n  triggerDisplayManually: Boolean,\n  // If container is set, resize observer won't not attached\n  container: Function,\n  content: Function,\n  containerClass: String,\n  containerStyle: [String, Object],\n  contentClass: [String, Array],\n  contentStyle: [String, Object],\n  horizontalRailStyle: [String, Object],\n  verticalRailStyle: [String, Object],\n  onScroll: Function,\n  onWheel: Function,\n  onResize: Function,\n  internalOnUpdateScrollLeft: Function,\n  internalHoistYRail: Boolean\n});\nconst Scrollbar = defineComponent({\n  name: 'Scrollbar',\n  props: scrollbarProps,\n  inheritAttrs: false,\n  setup(props) {\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled,\n      mergedRtlRef\n    } = useConfig(props);\n    const rtlEnabledRef = useRtl('Scrollbar', mergedRtlRef, mergedClsPrefixRef);\n    // dom ref\n    const wrapperRef = ref(null);\n    const containerRef = ref(null);\n    const contentRef = ref(null);\n    const yRailRef = ref(null);\n    const xRailRef = ref(null);\n    // data ref\n    const contentHeightRef = ref(null);\n    const contentWidthRef = ref(null);\n    const containerHeightRef = ref(null);\n    const containerWidthRef = ref(null);\n    const yRailSizeRef = ref(null);\n    const xRailSizeRef = ref(null);\n    const containerScrollTopRef = ref(0);\n    const containerScrollLeftRef = ref(0);\n    const isShowXBarRef = ref(false);\n    const isShowYBarRef = ref(false);\n    let yBarPressed = false;\n    let xBarPressed = false;\n    let xBarVanishTimerId;\n    let yBarVanishTimerId;\n    let memoYTop = 0;\n    let memoXLeft = 0;\n    let memoMouseX = 0;\n    let memoMouseY = 0;\n    const isIos = useIsIos();\n    const yBarSizeRef = computed(() => {\n      const {\n        value: containerHeight\n      } = containerHeightRef;\n      const {\n        value: contentHeight\n      } = contentHeightRef;\n      const {\n        value: yRailSize\n      } = yRailSizeRef;\n      if (containerHeight === null || contentHeight === null || yRailSize === null) {\n        return 0;\n      } else {\n        return Math.min(containerHeight, yRailSize * containerHeight / contentHeight + props.size * 1.5);\n      }\n    });\n    const yBarSizePxRef = computed(() => {\n      return `${yBarSizeRef.value}px`;\n    });\n    const xBarSizeRef = computed(() => {\n      const {\n        value: containerWidth\n      } = containerWidthRef;\n      const {\n        value: contentWidth\n      } = contentWidthRef;\n      const {\n        value: xRailSize\n      } = xRailSizeRef;\n      if (containerWidth === null || contentWidth === null || xRailSize === null) {\n        return 0;\n      } else {\n        return xRailSize * containerWidth / contentWidth + props.size * 1.5;\n      }\n    });\n    const xBarSizePxRef = computed(() => {\n      return `${xBarSizeRef.value}px`;\n    });\n    const yBarTopRef = computed(() => {\n      const {\n        value: containerHeight\n      } = containerHeightRef;\n      const {\n        value: containerScrollTop\n      } = containerScrollTopRef;\n      const {\n        value: contentHeight\n      } = contentHeightRef;\n      const {\n        value: yRailSize\n      } = yRailSizeRef;\n      if (containerHeight === null || contentHeight === null || yRailSize === null) {\n        return 0;\n      } else {\n        const heightDiff = contentHeight - containerHeight;\n        if (!heightDiff) return 0;\n        return containerScrollTop / heightDiff * (yRailSize - yBarSizeRef.value);\n      }\n    });\n    const yBarTopPxRef = computed(() => {\n      return `${yBarTopRef.value}px`;\n    });\n    const xBarLeftRef = computed(() => {\n      const {\n        value: containerWidth\n      } = containerWidthRef;\n      const {\n        value: containerScrollLeft\n      } = containerScrollLeftRef;\n      const {\n        value: contentWidth\n      } = contentWidthRef;\n      const {\n        value: xRailSize\n      } = xRailSizeRef;\n      if (containerWidth === null || contentWidth === null || xRailSize === null) {\n        return 0;\n      } else {\n        const widthDiff = contentWidth - containerWidth;\n        if (!widthDiff) return 0;\n        return containerScrollLeft / widthDiff * (xRailSize - xBarSizeRef.value);\n      }\n    });\n    const xBarLeftPxRef = computed(() => {\n      return `${xBarLeftRef.value}px`;\n    });\n    const needYBarRef = computed(() => {\n      const {\n        value: containerHeight\n      } = containerHeightRef;\n      const {\n        value: contentHeight\n      } = contentHeightRef;\n      return containerHeight !== null && contentHeight !== null && contentHeight > containerHeight;\n    });\n    const needXBarRef = computed(() => {\n      const {\n        value: containerWidth\n      } = containerWidthRef;\n      const {\n        value: contentWidth\n      } = contentWidthRef;\n      return containerWidth !== null && contentWidth !== null && contentWidth > containerWidth;\n    });\n    const mergedShowXBarRef = computed(() => {\n      const {\n        trigger\n      } = props;\n      return trigger === 'none' || isShowXBarRef.value;\n    });\n    const mergedShowYBarRef = computed(() => {\n      const {\n        trigger\n      } = props;\n      return trigger === 'none' || isShowYBarRef.value;\n    });\n    const mergedContainerRef = computed(() => {\n      const {\n        container\n      } = props;\n      if (container) return container();\n      return containerRef.value;\n    });\n    const mergedContentRef = computed(() => {\n      const {\n        content\n      } = props;\n      if (content) return content();\n      return contentRef.value;\n    });\n    const activateState = useReactivated(() => {\n      // Only restore for builtin container & content\n      if (!props.container) {\n        // remount\n        scrollTo({\n          top: containerScrollTopRef.value,\n          left: containerScrollLeftRef.value\n        });\n      }\n    });\n    // methods\n    const handleContentResize = () => {\n      if (activateState.isDeactivated) return;\n      sync();\n    };\n    const handleContainerResize = e => {\n      if (activateState.isDeactivated) return;\n      const {\n        onResize\n      } = props;\n      if (onResize) onResize(e);\n      sync();\n    };\n    const scrollTo = (options, y) => {\n      if (!props.scrollable) return;\n      if (typeof options === 'number') {\n        scrollToPosition(options, y !== null && y !== void 0 ? y : 0, 0, false, 'auto');\n        return;\n      }\n      const {\n        left,\n        top,\n        index,\n        elSize,\n        position,\n        behavior,\n        el,\n        debounce = true\n      } = options;\n      if (left !== undefined || top !== undefined) {\n        scrollToPosition(left !== null && left !== void 0 ? left : 0, top !== null && top !== void 0 ? top : 0, 0, false, behavior);\n      }\n      if (el !== undefined) {\n        scrollToPosition(0, el.offsetTop, el.offsetHeight, debounce, behavior);\n      } else if (index !== undefined && elSize !== undefined) {\n        scrollToPosition(0, index * elSize, elSize, debounce, behavior);\n      } else if (position === 'bottom') {\n        scrollToPosition(0, Number.MAX_SAFE_INTEGER, 0, false, behavior);\n      } else if (position === 'top') {\n        scrollToPosition(0, 0, 0, false, behavior);\n      }\n    };\n    const scrollBy = (options, y) => {\n      if (!props.scrollable) return;\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (!container) return;\n      if (typeof options === 'object') {\n        container.scrollBy(options);\n      } else {\n        container.scrollBy(options, y || 0);\n      }\n    };\n    function scrollToPosition(left, top, elSize, debounce, behavior) {\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (!container) return;\n      if (debounce) {\n        const {\n          scrollTop,\n          offsetHeight\n        } = container;\n        if (top > scrollTop) {\n          if (top + elSize <= scrollTop + offsetHeight) {\n            // do nothing\n          } else {\n            container.scrollTo({\n              left,\n              top: top + elSize - offsetHeight,\n              behavior\n            });\n          }\n          return;\n        }\n      }\n      container.scrollTo({\n        left,\n        top,\n        behavior\n      });\n    }\n    function handleMouseEnterWrapper() {\n      showXBar();\n      showYBar();\n      sync();\n    }\n    function handleMouseLeaveWrapper() {\n      hideBar();\n    }\n    function hideBar() {\n      hideYBar();\n      hideXBar();\n    }\n    function hideYBar() {\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n      yBarVanishTimerId = window.setTimeout(() => {\n        isShowYBarRef.value = false;\n      }, props.duration);\n    }\n    function hideXBar() {\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n      xBarVanishTimerId = window.setTimeout(() => {\n        isShowXBarRef.value = false;\n      }, props.duration);\n    }\n    function showXBar() {\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n      isShowXBarRef.value = true;\n    }\n    function showYBar() {\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n      isShowYBarRef.value = true;\n    }\n    function handleScroll(e) {\n      const {\n        onScroll\n      } = props;\n      if (onScroll) onScroll(e);\n      syncScrollState();\n    }\n    function syncScrollState() {\n      // only collect scroll state, do not trigger any dom event\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (container) {\n        containerScrollTopRef.value = container.scrollTop;\n        containerScrollLeftRef.value = container.scrollLeft * ((rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? -1 : 1);\n      }\n    }\n    function syncPositionState() {\n      // only collect position state, do not trigger any dom event\n      // Don't use getClientBoundingRect because element may be scale transformed\n      const {\n        value: content\n      } = mergedContentRef;\n      if (content) {\n        contentHeightRef.value = content.offsetHeight;\n        contentWidthRef.value = content.offsetWidth;\n      }\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (container) {\n        containerHeightRef.value = container.offsetHeight;\n        containerWidthRef.value = container.offsetWidth;\n      }\n      const {\n        value: xRailEl\n      } = xRailRef;\n      const {\n        value: yRailEl\n      } = yRailRef;\n      if (xRailEl) {\n        xRailSizeRef.value = xRailEl.offsetWidth;\n      }\n      if (yRailEl) {\n        yRailSizeRef.value = yRailEl.offsetHeight;\n      }\n    }\n    /**\n     * Sometimes there's only one element that we can scroll,\n     * For example for textarea, there won't be a content element.\n     */\n    function syncUnifiedContainer() {\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (container) {\n        containerScrollTopRef.value = container.scrollTop;\n        containerScrollLeftRef.value = container.scrollLeft * ((rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? -1 : 1);\n        containerHeightRef.value = container.offsetHeight;\n        containerWidthRef.value = container.offsetWidth;\n        contentHeightRef.value = container.scrollHeight;\n        contentWidthRef.value = container.scrollWidth;\n      }\n      const {\n        value: xRailEl\n      } = xRailRef;\n      const {\n        value: yRailEl\n      } = yRailRef;\n      if (xRailEl) {\n        xRailSizeRef.value = xRailEl.offsetWidth;\n      }\n      if (yRailEl) {\n        yRailSizeRef.value = yRailEl.offsetHeight;\n      }\n    }\n    function sync() {\n      if (!props.scrollable) return;\n      if (props.useUnifiedContainer) {\n        syncUnifiedContainer();\n      } else {\n        syncPositionState();\n        syncScrollState();\n      }\n    }\n    function isMouseUpAway(e) {\n      var _a;\n      return !((_a = wrapperRef.value) === null || _a === void 0 ? void 0 : _a.contains(getPreciseEventTarget(e)));\n    }\n    function handleXScrollMouseDown(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      xBarPressed = true;\n      on('mousemove', window, handleXScrollMouseMove, true);\n      on('mouseup', window, handleXScrollMouseUp, true);\n      memoXLeft = containerScrollLeftRef.value;\n      memoMouseX = (rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? window.innerWidth - e.clientX : e.clientX;\n    }\n    function handleXScrollMouseMove(e) {\n      if (!xBarPressed) return;\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n      const {\n        value: containerWidth\n      } = containerWidthRef;\n      const {\n        value: contentWidth\n      } = contentWidthRef;\n      const {\n        value: xBarSize\n      } = xBarSizeRef;\n      if (containerWidth === null || contentWidth === null) return;\n      const dX = (rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? window.innerWidth - e.clientX - memoMouseX : e.clientX - memoMouseX;\n      const dScrollLeft = dX * (contentWidth - containerWidth) / (containerWidth - xBarSize);\n      const toScrollLeftUpperBound = contentWidth - containerWidth;\n      let toScrollLeft = memoXLeft + dScrollLeft;\n      toScrollLeft = Math.min(toScrollLeftUpperBound, toScrollLeft);\n      toScrollLeft = Math.max(toScrollLeft, 0);\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (container) {\n        container.scrollLeft = toScrollLeft * ((rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? -1 : 1);\n        const {\n          internalOnUpdateScrollLeft\n        } = props;\n        if (internalOnUpdateScrollLeft) internalOnUpdateScrollLeft(toScrollLeft);\n      }\n    }\n    function handleXScrollMouseUp(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      off('mousemove', window, handleXScrollMouseMove, true);\n      off('mouseup', window, handleXScrollMouseUp, true);\n      xBarPressed = false;\n      sync();\n      if (isMouseUpAway(e)) {\n        hideBar();\n      }\n    }\n    function handleYScrollMouseDown(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      yBarPressed = true;\n      on('mousemove', window, handleYScrollMouseMove, true);\n      on('mouseup', window, handleYScrollMouseUp, true);\n      memoYTop = containerScrollTopRef.value;\n      memoMouseY = e.clientY;\n    }\n    function handleYScrollMouseMove(e) {\n      if (!yBarPressed) return;\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n      const {\n        value: containerHeight\n      } = containerHeightRef;\n      const {\n        value: contentHeight\n      } = contentHeightRef;\n      const {\n        value: yBarSize\n      } = yBarSizeRef;\n      if (containerHeight === null || contentHeight === null) return;\n      const dY = e.clientY - memoMouseY;\n      const dScrollTop = dY * (contentHeight - containerHeight) / (containerHeight - yBarSize);\n      const toScrollTopUpperBound = contentHeight - containerHeight;\n      let toScrollTop = memoYTop + dScrollTop;\n      toScrollTop = Math.min(toScrollTopUpperBound, toScrollTop);\n      toScrollTop = Math.max(toScrollTop, 0);\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (container) {\n        container.scrollTop = toScrollTop;\n      }\n    }\n    function handleYScrollMouseUp(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      off('mousemove', window, handleYScrollMouseMove, true);\n      off('mouseup', window, handleYScrollMouseUp, true);\n      yBarPressed = false;\n      sync();\n      if (isMouseUpAway(e)) {\n        hideBar();\n      }\n    }\n    watchEffect(() => {\n      const {\n        value: needXBar\n      } = needXBarRef;\n      const {\n        value: needYBar\n      } = needYBarRef;\n      const {\n        value: mergedClsPrefix\n      } = mergedClsPrefixRef;\n      const {\n        value: xRailEl\n      } = xRailRef;\n      const {\n        value: yRailEl\n      } = yRailRef;\n      if (xRailEl) {\n        if (!needXBar) {\n          xRailEl.classList.add(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n        } else {\n          xRailEl.classList.remove(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n        }\n      }\n      if (yRailEl) {\n        if (!needYBar) {\n          yRailEl.classList.add(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n        } else {\n          yRailEl.classList.remove(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n        }\n      }\n    });\n    onMounted(() => {\n      // if container exist, it always can't be resolved when scrollbar is mounted\n      // for example:\n      // - component\n      //   - scrollbar\n      //     - inner\n      // if you pass inner to scrollbar, you may use a ref inside component\n      // however, when scrollbar is mounted, ref is not ready at component\n      // you need to init by yourself\n      if (props.container) return;\n      sync();\n    });\n    onBeforeUnmount(() => {\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n      off('mousemove', window, handleYScrollMouseMove, true);\n      off('mouseup', window, handleYScrollMouseUp, true);\n    });\n    const themeRef = useTheme('Scrollbar', '-scrollbar', style, scrollbarLight, props, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      const {\n        common: {\n          cubicBezierEaseInOut,\n          scrollbarBorderRadius,\n          scrollbarHeight,\n          scrollbarWidth\n        },\n        self: {\n          color,\n          colorHover\n        }\n      } = themeRef.value;\n      return {\n        '--n-scrollbar-bezier': cubicBezierEaseInOut,\n        '--n-scrollbar-color': color,\n        '--n-scrollbar-color-hover': colorHover,\n        '--n-scrollbar-border-radius': scrollbarBorderRadius,\n        '--n-scrollbar-width': scrollbarWidth,\n        '--n-scrollbar-height': scrollbarHeight\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('scrollbar', undefined, cssVarsRef, props) : undefined;\n    const exposedMethods = {\n      scrollTo,\n      scrollBy,\n      sync,\n      syncUnifiedContainer,\n      handleMouseEnterWrapper,\n      handleMouseLeaveWrapper\n    };\n    return Object.assign(Object.assign({}, exposedMethods), {\n      mergedClsPrefix: mergedClsPrefixRef,\n      rtlEnabled: rtlEnabledRef,\n      containerScrollTop: containerScrollTopRef,\n      wrapperRef,\n      containerRef,\n      contentRef,\n      yRailRef,\n      xRailRef,\n      needYBar: needYBarRef,\n      needXBar: needXBarRef,\n      yBarSizePx: yBarSizePxRef,\n      xBarSizePx: xBarSizePxRef,\n      yBarTopPx: yBarTopPxRef,\n      xBarLeftPx: xBarLeftPxRef,\n      isShowXBar: mergedShowXBarRef,\n      isShowYBar: mergedShowYBarRef,\n      isIos,\n      handleScroll,\n      handleContentResize,\n      handleContainerResize,\n      handleYScrollMouseDown,\n      handleXScrollMouseDown,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n  render() {\n    var _a;\n    const {\n      $slots,\n      mergedClsPrefix,\n      triggerDisplayManually,\n      rtlEnabled,\n      internalHoistYRail\n    } = this;\n    if (!this.scrollable) return (_a = $slots.default) === null || _a === void 0 ? void 0 : _a.call($slots);\n    const triggerIsNone = this.trigger === 'none';\n    const createYRail = (className, style) => {\n      return h(\"div\", {\n        ref: \"yRailRef\",\n        class: [`${mergedClsPrefix}-scrollbar-rail`, `${mergedClsPrefix}-scrollbar-rail--vertical`, className],\n        \"data-scrollbar-rail\": true,\n        style: [style || '', this.verticalRailStyle],\n        \"aria-hidden\": true\n      }, h(\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      triggerIsNone ? Wrapper : Transition, triggerIsNone ? null : {\n        name: 'fade-in-transition'\n      }, {\n        default: () => this.needYBar && this.isShowYBar && !this.isIos ? h(\"div\", {\n          class: `${mergedClsPrefix}-scrollbar-rail__scrollbar`,\n          style: {\n            height: this.yBarSizePx,\n            top: this.yBarTopPx\n          },\n          onMousedown: this.handleYScrollMouseDown\n        }) : null\n      }));\n    };\n    const createChildren = () => {\n      var _a, _b;\n      (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n      return h('div', mergeProps(this.$attrs, {\n        role: 'none',\n        ref: 'wrapperRef',\n        class: [`${mergedClsPrefix}-scrollbar`, this.themeClass, rtlEnabled && `${mergedClsPrefix}-scrollbar--rtl`],\n        style: this.cssVars,\n        onMouseenter: triggerDisplayManually ? undefined : this.handleMouseEnterWrapper,\n        onMouseleave: triggerDisplayManually ? undefined : this.handleMouseLeaveWrapper\n      }), [this.container ? (_b = $slots.default) === null || _b === void 0 ? void 0 : _b.call($slots) : h(\"div\", {\n        role: \"none\",\n        ref: \"containerRef\",\n        class: [`${mergedClsPrefix}-scrollbar-container`, this.containerClass],\n        style: this.containerStyle,\n        onScroll: this.handleScroll,\n        onWheel: this.onWheel\n      }, h(VResizeObserver, {\n        onResize: this.handleContentResize\n      }, {\n        default: () => h(\"div\", {\n          ref: \"contentRef\",\n          role: \"none\",\n          style: [{\n            width: this.xScrollable ? 'fit-content' : null\n          }, this.contentStyle],\n          class: [`${mergedClsPrefix}-scrollbar-content`, this.contentClass]\n        }, $slots)\n      })), internalHoistYRail ? null : createYRail(undefined, undefined), this.xScrollable && h(\"div\", {\n        ref: \"xRailRef\",\n        class: [`${mergedClsPrefix}-scrollbar-rail`, `${mergedClsPrefix}-scrollbar-rail--horizontal`],\n        style: this.horizontalRailStyle,\n        \"data-scrollbar-rail\": true,\n        \"aria-hidden\": true\n      }, h(\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      triggerIsNone ? Wrapper : Transition, triggerIsNone ? null : {\n        name: 'fade-in-transition'\n      }, {\n        default: () => this.needXBar && this.isShowXBar && !this.isIos ? h(\"div\", {\n          class: `${mergedClsPrefix}-scrollbar-rail__scrollbar`,\n          style: {\n            width: this.xBarSizePx,\n            right: rtlEnabled ? this.xBarLeftPx : undefined,\n            left: rtlEnabled ? undefined : this.xBarLeftPx\n          },\n          onMousedown: this.handleXScrollMouseDown\n        }) : null\n      }))]);\n    };\n    const scrollbarNode = this.container ? createChildren() : h(VResizeObserver, {\n      onResize: this.handleContainerResize\n    }, {\n      default: createChildren\n    });\n    if (internalHoistYRail) {\n      return h(Fragment, null, scrollbarNode, createYRail(this.themeClass, this.cssVars));\n    } else {\n      return scrollbarNode;\n    }\n  }\n});\nexport default Scrollbar;\nexport const XScrollbar = Scrollbar;","map":{"version":3,"names":["h","ref","defineComponent","computed","onMounted","onBeforeUnmount","mergeProps","Transition","watchEffect","Fragment","on","off","VResizeObserver","useIsIos","getPreciseEventTarget","useConfig","useTheme","useThemeClass","useRtl","useReactivated","Wrapper","scrollbarLight","style","scrollbarProps","Object","assign","props","size","type","Number","default","duration","scrollable","Boolean","xScrollable","trigger","String","useUnifiedContainer","triggerDisplayManually","container","Function","content","containerClass","containerStyle","contentClass","Array","contentStyle","horizontalRailStyle","verticalRailStyle","onScroll","onWheel","onResize","internalOnUpdateScrollLeft","internalHoistYRail","Scrollbar","name","inheritAttrs","setup","mergedClsPrefixRef","inlineThemeDisabled","mergedRtlRef","rtlEnabledRef","wrapperRef","containerRef","contentRef","yRailRef","xRailRef","contentHeightRef","contentWidthRef","containerHeightRef","containerWidthRef","yRailSizeRef","xRailSizeRef","containerScrollTopRef","containerScrollLeftRef","isShowXBarRef","isShowYBarRef","yBarPressed","xBarPressed","xBarVanishTimerId","yBarVanishTimerId","memoYTop","memoXLeft","memoMouseX","memoMouseY","isIos","yBarSizeRef","value","containerHeight","contentHeight","yRailSize","Math","min","yBarSizePxRef","xBarSizeRef","containerWidth","contentWidth","xRailSize","xBarSizePxRef","yBarTopRef","containerScrollTop","heightDiff","yBarTopPxRef","xBarLeftRef","containerScrollLeft","widthDiff","xBarLeftPxRef","needYBarRef","needXBarRef","mergedShowXBarRef","mergedShowYBarRef","mergedContainerRef","mergedContentRef","activateState","scrollTo","top","left","handleContentResize","isDeactivated","sync","handleContainerResize","e","options","y","scrollToPosition","index","elSize","position","behavior","el","debounce","undefined","offsetTop","offsetHeight","MAX_SAFE_INTEGER","scrollBy","scrollTop","handleMouseEnterWrapper","showXBar","showYBar","handleMouseLeaveWrapper","hideBar","hideYBar","hideXBar","window","clearTimeout","setTimeout","handleScroll","syncScrollState","scrollLeft","syncPositionState","offsetWidth","xRailEl","yRailEl","syncUnifiedContainer","scrollHeight","scrollWidth","isMouseUpAway","_a","contains","handleXScrollMouseDown","preventDefault","stopPropagation","handleXScrollMouseMove","handleXScrollMouseUp","innerWidth","clientX","xBarSize","dX","dScrollLeft","toScrollLeftUpperBound","toScrollLeft","max","handleYScrollMouseDown","handleYScrollMouseMove","handleYScrollMouseUp","clientY","yBarSize","dY","dScrollTop","toScrollTopUpperBound","toScrollTop","needXBar","needYBar","mergedClsPrefix","classList","add","remove","themeRef","cssVarsRef","common","cubicBezierEaseInOut","scrollbarBorderRadius","scrollbarHeight","scrollbarWidth","self","color","colorHover","themeClassHandle","exposedMethods","rtlEnabled","yBarSizePx","xBarSizePx","yBarTopPx","xBarLeftPx","isShowXBar","isShowYBar","cssVars","themeClass","onRender","render","$slots","call","triggerIsNone","createYRail","className","class","height","onMousedown","createChildren","_b","$attrs","role","onMouseenter","onMouseleave","width","right","scrollbarNode","XScrollbar"],"sources":["E:/java项目/test/blog/blog-front/node_modules/naive-ui/es/_internal/scrollbar/src/Scrollbar.mjs"],"sourcesContent":["import { h, ref, defineComponent, computed, onMounted, onBeforeUnmount, mergeProps, Transition, watchEffect, Fragment } from 'vue';\nimport { on, off } from 'evtd';\nimport { VResizeObserver } from 'vueuc';\nimport { useIsIos } from 'vooks';\nimport { getPreciseEventTarget } from 'seemly';\nimport { useConfig, useTheme, useThemeClass, useRtl } from \"../../../_mixins/index.mjs\";\nimport { useReactivated, Wrapper } from \"../../../_utils/index.mjs\";\nimport { scrollbarLight } from \"../styles/index.mjs\";\nimport style from \"./styles/index.cssr.mjs\";\nconst scrollbarProps = Object.assign(Object.assign({}, useTheme.props), {\n  size: {\n    type: Number,\n    default: 5\n  },\n  duration: {\n    type: Number,\n    default: 0\n  },\n  scrollable: {\n    type: Boolean,\n    default: true\n  },\n  xScrollable: Boolean,\n  trigger: {\n    type: String,\n    default: 'hover'\n  },\n  useUnifiedContainer: Boolean,\n  triggerDisplayManually: Boolean,\n  // If container is set, resize observer won't not attached\n  container: Function,\n  content: Function,\n  containerClass: String,\n  containerStyle: [String, Object],\n  contentClass: [String, Array],\n  contentStyle: [String, Object],\n  horizontalRailStyle: [String, Object],\n  verticalRailStyle: [String, Object],\n  onScroll: Function,\n  onWheel: Function,\n  onResize: Function,\n  internalOnUpdateScrollLeft: Function,\n  internalHoistYRail: Boolean\n});\nconst Scrollbar = defineComponent({\n  name: 'Scrollbar',\n  props: scrollbarProps,\n  inheritAttrs: false,\n  setup(props) {\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled,\n      mergedRtlRef\n    } = useConfig(props);\n    const rtlEnabledRef = useRtl('Scrollbar', mergedRtlRef, mergedClsPrefixRef);\n    // dom ref\n    const wrapperRef = ref(null);\n    const containerRef = ref(null);\n    const contentRef = ref(null);\n    const yRailRef = ref(null);\n    const xRailRef = ref(null);\n    // data ref\n    const contentHeightRef = ref(null);\n    const contentWidthRef = ref(null);\n    const containerHeightRef = ref(null);\n    const containerWidthRef = ref(null);\n    const yRailSizeRef = ref(null);\n    const xRailSizeRef = ref(null);\n    const containerScrollTopRef = ref(0);\n    const containerScrollLeftRef = ref(0);\n    const isShowXBarRef = ref(false);\n    const isShowYBarRef = ref(false);\n    let yBarPressed = false;\n    let xBarPressed = false;\n    let xBarVanishTimerId;\n    let yBarVanishTimerId;\n    let memoYTop = 0;\n    let memoXLeft = 0;\n    let memoMouseX = 0;\n    let memoMouseY = 0;\n    const isIos = useIsIos();\n    const yBarSizeRef = computed(() => {\n      const {\n        value: containerHeight\n      } = containerHeightRef;\n      const {\n        value: contentHeight\n      } = contentHeightRef;\n      const {\n        value: yRailSize\n      } = yRailSizeRef;\n      if (containerHeight === null || contentHeight === null || yRailSize === null) {\n        return 0;\n      } else {\n        return Math.min(containerHeight, yRailSize * containerHeight / contentHeight + props.size * 1.5);\n      }\n    });\n    const yBarSizePxRef = computed(() => {\n      return `${yBarSizeRef.value}px`;\n    });\n    const xBarSizeRef = computed(() => {\n      const {\n        value: containerWidth\n      } = containerWidthRef;\n      const {\n        value: contentWidth\n      } = contentWidthRef;\n      const {\n        value: xRailSize\n      } = xRailSizeRef;\n      if (containerWidth === null || contentWidth === null || xRailSize === null) {\n        return 0;\n      } else {\n        return xRailSize * containerWidth / contentWidth + props.size * 1.5;\n      }\n    });\n    const xBarSizePxRef = computed(() => {\n      return `${xBarSizeRef.value}px`;\n    });\n    const yBarTopRef = computed(() => {\n      const {\n        value: containerHeight\n      } = containerHeightRef;\n      const {\n        value: containerScrollTop\n      } = containerScrollTopRef;\n      const {\n        value: contentHeight\n      } = contentHeightRef;\n      const {\n        value: yRailSize\n      } = yRailSizeRef;\n      if (containerHeight === null || contentHeight === null || yRailSize === null) {\n        return 0;\n      } else {\n        const heightDiff = contentHeight - containerHeight;\n        if (!heightDiff) return 0;\n        return containerScrollTop / heightDiff * (yRailSize - yBarSizeRef.value);\n      }\n    });\n    const yBarTopPxRef = computed(() => {\n      return `${yBarTopRef.value}px`;\n    });\n    const xBarLeftRef = computed(() => {\n      const {\n        value: containerWidth\n      } = containerWidthRef;\n      const {\n        value: containerScrollLeft\n      } = containerScrollLeftRef;\n      const {\n        value: contentWidth\n      } = contentWidthRef;\n      const {\n        value: xRailSize\n      } = xRailSizeRef;\n      if (containerWidth === null || contentWidth === null || xRailSize === null) {\n        return 0;\n      } else {\n        const widthDiff = contentWidth - containerWidth;\n        if (!widthDiff) return 0;\n        return containerScrollLeft / widthDiff * (xRailSize - xBarSizeRef.value);\n      }\n    });\n    const xBarLeftPxRef = computed(() => {\n      return `${xBarLeftRef.value}px`;\n    });\n    const needYBarRef = computed(() => {\n      const {\n        value: containerHeight\n      } = containerHeightRef;\n      const {\n        value: contentHeight\n      } = contentHeightRef;\n      return containerHeight !== null && contentHeight !== null && contentHeight > containerHeight;\n    });\n    const needXBarRef = computed(() => {\n      const {\n        value: containerWidth\n      } = containerWidthRef;\n      const {\n        value: contentWidth\n      } = contentWidthRef;\n      return containerWidth !== null && contentWidth !== null && contentWidth > containerWidth;\n    });\n    const mergedShowXBarRef = computed(() => {\n      const {\n        trigger\n      } = props;\n      return trigger === 'none' || isShowXBarRef.value;\n    });\n    const mergedShowYBarRef = computed(() => {\n      const {\n        trigger\n      } = props;\n      return trigger === 'none' || isShowYBarRef.value;\n    });\n    const mergedContainerRef = computed(() => {\n      const {\n        container\n      } = props;\n      if (container) return container();\n      return containerRef.value;\n    });\n    const mergedContentRef = computed(() => {\n      const {\n        content\n      } = props;\n      if (content) return content();\n      return contentRef.value;\n    });\n    const activateState = useReactivated(() => {\n      // Only restore for builtin container & content\n      if (!props.container) {\n        // remount\n        scrollTo({\n          top: containerScrollTopRef.value,\n          left: containerScrollLeftRef.value\n        });\n      }\n    });\n    // methods\n    const handleContentResize = () => {\n      if (activateState.isDeactivated) return;\n      sync();\n    };\n    const handleContainerResize = e => {\n      if (activateState.isDeactivated) return;\n      const {\n        onResize\n      } = props;\n      if (onResize) onResize(e);\n      sync();\n    };\n    const scrollTo = (options, y) => {\n      if (!props.scrollable) return;\n      if (typeof options === 'number') {\n        scrollToPosition(options, y !== null && y !== void 0 ? y : 0, 0, false, 'auto');\n        return;\n      }\n      const {\n        left,\n        top,\n        index,\n        elSize,\n        position,\n        behavior,\n        el,\n        debounce = true\n      } = options;\n      if (left !== undefined || top !== undefined) {\n        scrollToPosition(left !== null && left !== void 0 ? left : 0, top !== null && top !== void 0 ? top : 0, 0, false, behavior);\n      }\n      if (el !== undefined) {\n        scrollToPosition(0, el.offsetTop, el.offsetHeight, debounce, behavior);\n      } else if (index !== undefined && elSize !== undefined) {\n        scrollToPosition(0, index * elSize, elSize, debounce, behavior);\n      } else if (position === 'bottom') {\n        scrollToPosition(0, Number.MAX_SAFE_INTEGER, 0, false, behavior);\n      } else if (position === 'top') {\n        scrollToPosition(0, 0, 0, false, behavior);\n      }\n    };\n    const scrollBy = (options, y) => {\n      if (!props.scrollable) return;\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (!container) return;\n      if (typeof options === 'object') {\n        container.scrollBy(options);\n      } else {\n        container.scrollBy(options, y || 0);\n      }\n    };\n    function scrollToPosition(left, top, elSize, debounce, behavior) {\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (!container) return;\n      if (debounce) {\n        const {\n          scrollTop,\n          offsetHeight\n        } = container;\n        if (top > scrollTop) {\n          if (top + elSize <= scrollTop + offsetHeight) {\n            // do nothing\n          } else {\n            container.scrollTo({\n              left,\n              top: top + elSize - offsetHeight,\n              behavior\n            });\n          }\n          return;\n        }\n      }\n      container.scrollTo({\n        left,\n        top,\n        behavior\n      });\n    }\n    function handleMouseEnterWrapper() {\n      showXBar();\n      showYBar();\n      sync();\n    }\n    function handleMouseLeaveWrapper() {\n      hideBar();\n    }\n    function hideBar() {\n      hideYBar();\n      hideXBar();\n    }\n    function hideYBar() {\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n      yBarVanishTimerId = window.setTimeout(() => {\n        isShowYBarRef.value = false;\n      }, props.duration);\n    }\n    function hideXBar() {\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n      xBarVanishTimerId = window.setTimeout(() => {\n        isShowXBarRef.value = false;\n      }, props.duration);\n    }\n    function showXBar() {\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n      isShowXBarRef.value = true;\n    }\n    function showYBar() {\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n      isShowYBarRef.value = true;\n    }\n    function handleScroll(e) {\n      const {\n        onScroll\n      } = props;\n      if (onScroll) onScroll(e);\n      syncScrollState();\n    }\n    function syncScrollState() {\n      // only collect scroll state, do not trigger any dom event\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (container) {\n        containerScrollTopRef.value = container.scrollTop;\n        containerScrollLeftRef.value = container.scrollLeft * ((rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? -1 : 1);\n      }\n    }\n    function syncPositionState() {\n      // only collect position state, do not trigger any dom event\n      // Don't use getClientBoundingRect because element may be scale transformed\n      const {\n        value: content\n      } = mergedContentRef;\n      if (content) {\n        contentHeightRef.value = content.offsetHeight;\n        contentWidthRef.value = content.offsetWidth;\n      }\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (container) {\n        containerHeightRef.value = container.offsetHeight;\n        containerWidthRef.value = container.offsetWidth;\n      }\n      const {\n        value: xRailEl\n      } = xRailRef;\n      const {\n        value: yRailEl\n      } = yRailRef;\n      if (xRailEl) {\n        xRailSizeRef.value = xRailEl.offsetWidth;\n      }\n      if (yRailEl) {\n        yRailSizeRef.value = yRailEl.offsetHeight;\n      }\n    }\n    /**\n     * Sometimes there's only one element that we can scroll,\n     * For example for textarea, there won't be a content element.\n     */\n    function syncUnifiedContainer() {\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (container) {\n        containerScrollTopRef.value = container.scrollTop;\n        containerScrollLeftRef.value = container.scrollLeft * ((rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? -1 : 1);\n        containerHeightRef.value = container.offsetHeight;\n        containerWidthRef.value = container.offsetWidth;\n        contentHeightRef.value = container.scrollHeight;\n        contentWidthRef.value = container.scrollWidth;\n      }\n      const {\n        value: xRailEl\n      } = xRailRef;\n      const {\n        value: yRailEl\n      } = yRailRef;\n      if (xRailEl) {\n        xRailSizeRef.value = xRailEl.offsetWidth;\n      }\n      if (yRailEl) {\n        yRailSizeRef.value = yRailEl.offsetHeight;\n      }\n    }\n    function sync() {\n      if (!props.scrollable) return;\n      if (props.useUnifiedContainer) {\n        syncUnifiedContainer();\n      } else {\n        syncPositionState();\n        syncScrollState();\n      }\n    }\n    function isMouseUpAway(e) {\n      var _a;\n      return !((_a = wrapperRef.value) === null || _a === void 0 ? void 0 : _a.contains(getPreciseEventTarget(e)));\n    }\n    function handleXScrollMouseDown(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      xBarPressed = true;\n      on('mousemove', window, handleXScrollMouseMove, true);\n      on('mouseup', window, handleXScrollMouseUp, true);\n      memoXLeft = containerScrollLeftRef.value;\n      memoMouseX = (rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? window.innerWidth - e.clientX : e.clientX;\n    }\n    function handleXScrollMouseMove(e) {\n      if (!xBarPressed) return;\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n      const {\n        value: containerWidth\n      } = containerWidthRef;\n      const {\n        value: contentWidth\n      } = contentWidthRef;\n      const {\n        value: xBarSize\n      } = xBarSizeRef;\n      if (containerWidth === null || contentWidth === null) return;\n      const dX = (rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? window.innerWidth - e.clientX - memoMouseX : e.clientX - memoMouseX;\n      const dScrollLeft = dX * (contentWidth - containerWidth) / (containerWidth - xBarSize);\n      const toScrollLeftUpperBound = contentWidth - containerWidth;\n      let toScrollLeft = memoXLeft + dScrollLeft;\n      toScrollLeft = Math.min(toScrollLeftUpperBound, toScrollLeft);\n      toScrollLeft = Math.max(toScrollLeft, 0);\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (container) {\n        container.scrollLeft = toScrollLeft * ((rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? -1 : 1);\n        const {\n          internalOnUpdateScrollLeft\n        } = props;\n        if (internalOnUpdateScrollLeft) internalOnUpdateScrollLeft(toScrollLeft);\n      }\n    }\n    function handleXScrollMouseUp(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      off('mousemove', window, handleXScrollMouseMove, true);\n      off('mouseup', window, handleXScrollMouseUp, true);\n      xBarPressed = false;\n      sync();\n      if (isMouseUpAway(e)) {\n        hideBar();\n      }\n    }\n    function handleYScrollMouseDown(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      yBarPressed = true;\n      on('mousemove', window, handleYScrollMouseMove, true);\n      on('mouseup', window, handleYScrollMouseUp, true);\n      memoYTop = containerScrollTopRef.value;\n      memoMouseY = e.clientY;\n    }\n    function handleYScrollMouseMove(e) {\n      if (!yBarPressed) return;\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n      const {\n        value: containerHeight\n      } = containerHeightRef;\n      const {\n        value: contentHeight\n      } = contentHeightRef;\n      const {\n        value: yBarSize\n      } = yBarSizeRef;\n      if (containerHeight === null || contentHeight === null) return;\n      const dY = e.clientY - memoMouseY;\n      const dScrollTop = dY * (contentHeight - containerHeight) / (containerHeight - yBarSize);\n      const toScrollTopUpperBound = contentHeight - containerHeight;\n      let toScrollTop = memoYTop + dScrollTop;\n      toScrollTop = Math.min(toScrollTopUpperBound, toScrollTop);\n      toScrollTop = Math.max(toScrollTop, 0);\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (container) {\n        container.scrollTop = toScrollTop;\n      }\n    }\n    function handleYScrollMouseUp(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      off('mousemove', window, handleYScrollMouseMove, true);\n      off('mouseup', window, handleYScrollMouseUp, true);\n      yBarPressed = false;\n      sync();\n      if (isMouseUpAway(e)) {\n        hideBar();\n      }\n    }\n    watchEffect(() => {\n      const {\n        value: needXBar\n      } = needXBarRef;\n      const {\n        value: needYBar\n      } = needYBarRef;\n      const {\n        value: mergedClsPrefix\n      } = mergedClsPrefixRef;\n      const {\n        value: xRailEl\n      } = xRailRef;\n      const {\n        value: yRailEl\n      } = yRailRef;\n      if (xRailEl) {\n        if (!needXBar) {\n          xRailEl.classList.add(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n        } else {\n          xRailEl.classList.remove(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n        }\n      }\n      if (yRailEl) {\n        if (!needYBar) {\n          yRailEl.classList.add(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n        } else {\n          yRailEl.classList.remove(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n        }\n      }\n    });\n    onMounted(() => {\n      // if container exist, it always can't be resolved when scrollbar is mounted\n      // for example:\n      // - component\n      //   - scrollbar\n      //     - inner\n      // if you pass inner to scrollbar, you may use a ref inside component\n      // however, when scrollbar is mounted, ref is not ready at component\n      // you need to init by yourself\n      if (props.container) return;\n      sync();\n    });\n    onBeforeUnmount(() => {\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n      off('mousemove', window, handleYScrollMouseMove, true);\n      off('mouseup', window, handleYScrollMouseUp, true);\n    });\n    const themeRef = useTheme('Scrollbar', '-scrollbar', style, scrollbarLight, props, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      const {\n        common: {\n          cubicBezierEaseInOut,\n          scrollbarBorderRadius,\n          scrollbarHeight,\n          scrollbarWidth\n        },\n        self: {\n          color,\n          colorHover\n        }\n      } = themeRef.value;\n      return {\n        '--n-scrollbar-bezier': cubicBezierEaseInOut,\n        '--n-scrollbar-color': color,\n        '--n-scrollbar-color-hover': colorHover,\n        '--n-scrollbar-border-radius': scrollbarBorderRadius,\n        '--n-scrollbar-width': scrollbarWidth,\n        '--n-scrollbar-height': scrollbarHeight\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('scrollbar', undefined, cssVarsRef, props) : undefined;\n    const exposedMethods = {\n      scrollTo,\n      scrollBy,\n      sync,\n      syncUnifiedContainer,\n      handleMouseEnterWrapper,\n      handleMouseLeaveWrapper\n    };\n    return Object.assign(Object.assign({}, exposedMethods), {\n      mergedClsPrefix: mergedClsPrefixRef,\n      rtlEnabled: rtlEnabledRef,\n      containerScrollTop: containerScrollTopRef,\n      wrapperRef,\n      containerRef,\n      contentRef,\n      yRailRef,\n      xRailRef,\n      needYBar: needYBarRef,\n      needXBar: needXBarRef,\n      yBarSizePx: yBarSizePxRef,\n      xBarSizePx: xBarSizePxRef,\n      yBarTopPx: yBarTopPxRef,\n      xBarLeftPx: xBarLeftPxRef,\n      isShowXBar: mergedShowXBarRef,\n      isShowYBar: mergedShowYBarRef,\n      isIos,\n      handleScroll,\n      handleContentResize,\n      handleContainerResize,\n      handleYScrollMouseDown,\n      handleXScrollMouseDown,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n  render() {\n    var _a;\n    const {\n      $slots,\n      mergedClsPrefix,\n      triggerDisplayManually,\n      rtlEnabled,\n      internalHoistYRail\n    } = this;\n    if (!this.scrollable) return (_a = $slots.default) === null || _a === void 0 ? void 0 : _a.call($slots);\n    const triggerIsNone = this.trigger === 'none';\n    const createYRail = (className, style) => {\n      return h(\"div\", {\n        ref: \"yRailRef\",\n        class: [`${mergedClsPrefix}-scrollbar-rail`, `${mergedClsPrefix}-scrollbar-rail--vertical`, className],\n        \"data-scrollbar-rail\": true,\n        style: [style || '', this.verticalRailStyle],\n        \"aria-hidden\": true\n      }, h(\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      triggerIsNone ? Wrapper : Transition, triggerIsNone ? null : {\n        name: 'fade-in-transition'\n      }, {\n        default: () => this.needYBar && this.isShowYBar && !this.isIos ? h(\"div\", {\n          class: `${mergedClsPrefix}-scrollbar-rail__scrollbar`,\n          style: {\n            height: this.yBarSizePx,\n            top: this.yBarTopPx\n          },\n          onMousedown: this.handleYScrollMouseDown\n        }) : null\n      }));\n    };\n    const createChildren = () => {\n      var _a, _b;\n      (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n      return h('div', mergeProps(this.$attrs, {\n        role: 'none',\n        ref: 'wrapperRef',\n        class: [`${mergedClsPrefix}-scrollbar`, this.themeClass, rtlEnabled && `${mergedClsPrefix}-scrollbar--rtl`],\n        style: this.cssVars,\n        onMouseenter: triggerDisplayManually ? undefined : this.handleMouseEnterWrapper,\n        onMouseleave: triggerDisplayManually ? undefined : this.handleMouseLeaveWrapper\n      }), [this.container ? (_b = $slots.default) === null || _b === void 0 ? void 0 : _b.call($slots) : h(\"div\", {\n        role: \"none\",\n        ref: \"containerRef\",\n        class: [`${mergedClsPrefix}-scrollbar-container`, this.containerClass],\n        style: this.containerStyle,\n        onScroll: this.handleScroll,\n        onWheel: this.onWheel\n      }, h(VResizeObserver, {\n        onResize: this.handleContentResize\n      }, {\n        default: () => h(\"div\", {\n          ref: \"contentRef\",\n          role: \"none\",\n          style: [{\n            width: this.xScrollable ? 'fit-content' : null\n          }, this.contentStyle],\n          class: [`${mergedClsPrefix}-scrollbar-content`, this.contentClass]\n        }, $slots)\n      })), internalHoistYRail ? null : createYRail(undefined, undefined), this.xScrollable && h(\"div\", {\n        ref: \"xRailRef\",\n        class: [`${mergedClsPrefix}-scrollbar-rail`, `${mergedClsPrefix}-scrollbar-rail--horizontal`],\n        style: this.horizontalRailStyle,\n        \"data-scrollbar-rail\": true,\n        \"aria-hidden\": true\n      }, h(\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      triggerIsNone ? Wrapper : Transition, triggerIsNone ? null : {\n        name: 'fade-in-transition'\n      }, {\n        default: () => this.needXBar && this.isShowXBar && !this.isIos ? h(\"div\", {\n          class: `${mergedClsPrefix}-scrollbar-rail__scrollbar`,\n          style: {\n            width: this.xBarSizePx,\n            right: rtlEnabled ? this.xBarLeftPx : undefined,\n            left: rtlEnabled ? undefined : this.xBarLeftPx\n          },\n          onMousedown: this.handleXScrollMouseDown\n        }) : null\n      }))]);\n    };\n    const scrollbarNode = this.container ? createChildren() : h(VResizeObserver, {\n      onResize: this.handleContainerResize\n    }, {\n      default: createChildren\n    });\n    if (internalHoistYRail) {\n      return h(Fragment, null, scrollbarNode, createYRail(this.themeClass, this.cssVars));\n    } else {\n      return scrollbarNode;\n    }\n  }\n});\nexport default Scrollbar;\nexport const XScrollbar = Scrollbar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}