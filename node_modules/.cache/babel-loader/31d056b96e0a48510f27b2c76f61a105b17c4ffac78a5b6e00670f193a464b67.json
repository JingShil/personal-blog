{"ast":null,"code":"export function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return null;\n}","map":{"version":3,"names":[],"sources":["E:\\java项目\\blog\\blog-front\\src\\views\\test\\Index.vue"],"sourcesContent":["<template>\r\n  \r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref } from 'vue'\r\n\r\n\r\nconst ruleForm = reactive(\r\n\t{\r\n\t\t\"phone\":\"\",\r\n\t\t\"pass\":\"\",\r\n\t\t\"checkPass\":\"\",\r\n\t\t\"code\":\"\"\r\n\t}\r\n)\r\n\r\nconst validatePhone = (rule, value, callback) => {\r\n  if(!value){\r\n    callback(new Error('请输入手机号'));\r\n  }else{\r\n    callback();\r\n  }\r\n  \r\n};\r\nconst validatePass = (rule, value, callback) => {\r\n  if(!value){\r\n    callback(new Error('请输入密码'));\r\n  }else{\r\n    callback();\r\n  }\r\n};\r\nconst validateCheckPass = (rule, value, callback) => {\r\n  if(!value || value != ruleForm.pass){\r\n    callback(new Error('与密码不一致'));\r\n  }else{\r\n    callback();\r\n  }\r\n};\r\nconst validateCode = (rule, value, callback) => {\r\n  if(!value){\r\n    callback(new Error('请输入验证码'));\r\n  }else if(value < 1000){\r\n    callback(new Error('请输入四位验证码'));\r\n    console.log(value)\r\n  }else{\r\n    callback();\r\n  }\r\n};\r\n\r\nconst rules = {\r\n\tphone: [{ validator: validatePhone, trigger: 'blur' }],\r\n\tpass: [{  validator: validatePass, trigger: 'blur' }],\r\n\tcheckPass: [{  validator: validateCheckPass, trigger: 'blur' }],\r\n\tcode: [{  validator: validateCode, trigger: 'blur' }]\r\n};\r\n\r\n\r\n\r\n\r\n</script>\r\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}