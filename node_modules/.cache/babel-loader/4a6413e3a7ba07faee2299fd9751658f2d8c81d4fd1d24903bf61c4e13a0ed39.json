{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-04c41fe2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"vditor\",\n  class: \"edit\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"span\", _hoisted_1);\n}","map":{"version":3,"names":["id","class","_createElementBlock","_hoisted_1"],"sources":["E:\\java项目\\test\\blog\\blog-front\\src\\views\\test\\Index.vue"],"sourcesContent":["<template>\r\n\t<span id=\"vditor\" class=\"edit\"></span>\r\n</template>\r\n\r\n<script setup>\r\n// 1.1 引入Vditor 构造函数\r\nimport Vditor from 'vditor'\r\n// 1.2 引入样式\r\nimport 'vditor/dist/index.css';\r\nimport { ref, onMounted } from 'vue';\r\n\r\n// 2. 获取DOM引用\r\nconst vditor = ref()\r\n\r\n// 3. 在组件初始化时，就创建Vditor对象，并引用\r\nonMounted(() => {\r\n  vditor.value = new Vditor('vditor',{\r\n  \t// height: '200px',\r\n    width: '80vw',\r\n\t\theight: '85vh',\r\n\t\ttab:\"\\t\"\r\n  })\r\n})\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.edit{\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-color: beige;\r\n}\r\n</style>"],"mappings":";;;EACOA,EAAE,EAAC,QAAQ;EAACC,KAAK,EAAC;;;uBAAxBC,mBAAA,CAAsC,QAAtCC,UAAsC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}