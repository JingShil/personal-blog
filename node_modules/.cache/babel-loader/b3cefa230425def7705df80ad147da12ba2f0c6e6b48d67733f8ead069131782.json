{"ast":null,"code":"import { createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _createCommentVNode(\" <el-form\\r\\n    :ref=\\\"ruleForm\\\"\\r\\n    style=\\\"max-width: 600px\\\"\\r\\n    :model=\\\"ruleForm\\\"\\r\\n    status-icon\\r\\n    :rules=\\\"rules\\\"\\r\\n    label-width=\\\"auto\\\"\\r\\n    class=\\\"demo-ruleForm\\\"\\r\\n  >\\r\\n\\t\\t<el-form-item label=\\\"手机号\\\" prop=\\\"phone\\\">\\r\\n      <el-input v-model.number=\\\"ruleForm.phone\\\" maxlength=\\\"11\\\"/>\\r\\n    </el-form-item>\\r\\n    <el-form-item label=\\\"密码\\\" prop=\\\"pass\\\" >\\r\\n      <el-input v-model=\\\"ruleForm.pass\\\" type=\\\"password\\\" autocomplete=\\\"off\\\"  maxlength=\\\"12\\\"/>\\r\\n    </el-form-item>\\r\\n    <el-form-item label=\\\"确认密码\\\" prop=\\\"checkPass\\\">\\r\\n      <el-input\\r\\n        v-model=\\\"ruleForm.checkPass\\\"\\r\\n        type=\\\"password\\\"\\r\\n        autocomplete=\\\"off\\\"\\r\\n        maxlength=\\\"12\\\"\\r\\n      />\\r\\n    </el-form-item>\\r\\n    <el-form-item label=\\\"验证码\\\" prop=\\\"code\\\">\\r\\n      <el-input v-model.number=\\\"ruleForm.code\\\"  maxlength=\\\"4\\\"/>\\r\\n    </el-form-item>\\r\\n    \\r\\n  </el-form> \");\n}","map":{"version":3,"names":["_createCommentVNode"],"sources":["E:\\java项目\\blog\\blog-front\\src\\views\\test\\Index.vue"],"sourcesContent":["<template>\r\n  <!-- <el-form\r\n    :ref=\"ruleForm\"\r\n    style=\"max-width: 600px\"\r\n    :model=\"ruleForm\"\r\n    status-icon\r\n    :rules=\"rules\"\r\n    label-width=\"auto\"\r\n    class=\"demo-ruleForm\"\r\n  >\r\n\t\t<el-form-item label=\"手机号\" prop=\"phone\">\r\n      <el-input v-model.number=\"ruleForm.phone\" maxlength=\"11\"/>\r\n    </el-form-item>\r\n    <el-form-item label=\"密码\" prop=\"pass\" >\r\n      <el-input v-model=\"ruleForm.pass\" type=\"password\" autocomplete=\"off\"  maxlength=\"12\"/>\r\n    </el-form-item>\r\n    <el-form-item label=\"确认密码\" prop=\"checkPass\">\r\n      <el-input\r\n        v-model=\"ruleForm.checkPass\"\r\n        type=\"password\"\r\n        autocomplete=\"off\"\r\n        maxlength=\"12\"\r\n      />\r\n    </el-form-item>\r\n    <el-form-item label=\"验证码\" prop=\"code\">\r\n      <el-input v-model.number=\"ruleForm.code\"  maxlength=\"4\"/>\r\n    </el-form-item>\r\n    \r\n  </el-form> -->\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref } from 'vue'\r\n\r\n\r\nconst ruleForm = reactive(\r\n\t{\r\n\t\t\"phone\":\"\",\r\n\t\t\"pass\":\"\",\r\n\t\t\"checkPass\":\"\",\r\n\t\t\"code\":\"\"\r\n\t}\r\n)\r\n\r\nconst validatePhone = (rule, value, callback) => {\r\n  if(!value){\r\n    callback(new Error('请输入手机号'));\r\n  }else{\r\n    callback();\r\n  }\r\n  \r\n};\r\nconst validatePass = (rule, value, callback) => {\r\n  if(!value){\r\n    callback(new Error('请输入密码'));\r\n  }else{\r\n    callback();\r\n  }\r\n};\r\nconst validateCheckPass = (rule, value, callback) => {\r\n  if(!value || value != ruleForm.pass){\r\n    callback(new Error('与密码不一致'));\r\n  }else{\r\n    callback();\r\n  }\r\n};\r\nconst validateCode = (rule, value, callback) => {\r\n  if(!value){\r\n    callback(new Error('请输入验证码'));\r\n  }else if(value < 1000){\r\n    callback(new Error('请输入四位验证码'));\r\n    console.log(value)\r\n  }else{\r\n    callback();\r\n  }\r\n};\r\n\r\nconst rules = {\r\n\tphone: [{ validator: validatePhone, trigger: 'blur' }],\r\n\tpass: [{  validator: validatePass, trigger: 'blur' }],\r\n\tcheckPass: [{  validator: validateCheckPass, trigger: 'blur' }],\r\n\tcode: [{  validator: validateCode, trigger: 'blur' }]\r\n};\r\n\r\n\r\n\r\n\r\n</script>\r\n"],"mappings":";;SACEA,mBAAA,66BA2Bc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}