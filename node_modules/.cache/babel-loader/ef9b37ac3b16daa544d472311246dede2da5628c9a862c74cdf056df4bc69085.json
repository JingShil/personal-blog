{"ast":null,"code":"import { reactive, ref } from 'vue';\nexport default {\n  __name: 'Index',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const ruleForm = reactive({\n      \"phone\": \"\",\n      \"pass\": \"\",\n      \"checkPass\": \"\",\n      \"code\": \"\"\n    });\n    const validatePhone = (rule, value, callback) => {\n      if (!value) {\n        callback(new Error('请输入手机号'));\n      } else {\n        callback();\n      }\n    };\n    const validatePass = (rule, value, callback) => {\n      if (!value) {\n        callback(new Error('请输入密码'));\n      } else {\n        callback();\n      }\n    };\n    const validateCheckPass = (rule, value, callback) => {\n      if (!value || value != ruleForm.pass) {\n        callback(new Error('与密码不一致'));\n      } else {\n        callback();\n      }\n    };\n    const validateCode = (rule, value, callback) => {\n      if (!value) {\n        callback(new Error('请输入验证码'));\n      } else if (value < 1000) {\n        callback(new Error('请输入四位验证码'));\n        console.log(value);\n      } else {\n        callback();\n      }\n    };\n    const rules = {\n      phone: [{\n        validator: validatePhone,\n        trigger: 'blur'\n      }],\n      pass: [{\n        validator: validatePass,\n        trigger: 'blur'\n      }],\n      checkPass: [{\n        validator: validateCheckPass,\n        trigger: 'blur'\n      }],\n      code: [{\n        validator: validateCode,\n        trigger: 'blur'\n      }]\n    };\n    const __returned__ = {\n      ruleForm,\n      validatePhone,\n      validatePass,\n      validateCheckPass,\n      validateCode,\n      rules,\n      reactive,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","ref","ruleForm","validatePhone","rule","value","callback","Error","validatePass","validateCheckPass","pass","validateCode","console","log","rules","phone","validator","trigger","checkPass","code"],"sources":["E:/java项目/blog/blog-front/src/views/test/Index.vue"],"sourcesContent":["<template>\r\n  <el-form\r\n    :ref=\"ruleForm\"\r\n    style=\"max-width: 600px\"\r\n    :model=\"ruleForm\"\r\n    status-icon\r\n    :rules=\"rules\"\r\n    label-width=\"auto\"\r\n    class=\"demo-ruleForm\"\r\n  >\r\n\t\t<el-form-item label=\"手机号\" prop=\"phone\">\r\n      <el-input v-model.number=\"ruleForm.phone\" maxlength=\"11\"/>\r\n    </el-form-item>\r\n    <el-form-item label=\"密码\" prop=\"pass\" >\r\n      <el-input v-model=\"ruleForm.pass\" type=\"password\" autocomplete=\"off\"  maxlength=\"12\"/>\r\n    </el-form-item>\r\n    <el-form-item label=\"确认密码\" prop=\"checkPass\">\r\n      <el-input\r\n        v-model=\"ruleForm.checkPass\"\r\n        type=\"password\"\r\n        autocomplete=\"off\"\r\n        maxlength=\"12\"\r\n      />\r\n    </el-form-item>\r\n    <el-form-item label=\"验证码\" prop=\"code\">\r\n      <el-input v-model.number=\"ruleForm.code\"  maxlength=\"4\"/>\r\n    </el-form-item>\r\n    \r\n  </el-form>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref } from 'vue'\r\n\r\n\r\nconst ruleForm = reactive(\r\n\t{\r\n\t\t\"phone\":\"\",\r\n\t\t\"pass\":\"\",\r\n\t\t\"checkPass\":\"\",\r\n\t\t\"code\":\"\"\r\n\t}\r\n)\r\n\r\nconst validatePhone = (rule, value, callback) => {\r\n  if(!value){\r\n    callback(new Error('请输入手机号'));\r\n  }else{\r\n    callback();\r\n  }\r\n  \r\n};\r\nconst validatePass = (rule, value, callback) => {\r\n  if(!value){\r\n    callback(new Error('请输入密码'));\r\n  }else{\r\n    callback();\r\n  }\r\n};\r\nconst validateCheckPass = (rule, value, callback) => {\r\n  if(!value || value != ruleForm.pass){\r\n    callback(new Error('与密码不一致'));\r\n  }else{\r\n    callback();\r\n  }\r\n};\r\nconst validateCode = (rule, value, callback) => {\r\n  if(!value){\r\n    callback(new Error('请输入验证码'));\r\n  }else if(value < 1000){\r\n    callback(new Error('请输入四位验证码'));\r\n    console.log(value)\r\n  }else{\r\n    callback();\r\n  }\r\n};\r\n\r\nconst rules = {\r\n\tphone: [{ validator: validatePhone, trigger: 'blur' }],\r\n\tpass: [{  validator: validatePass, trigger: 'blur' }],\r\n\tcheckPass: [{  validator: validateCheckPass, trigger: 'blur' }],\r\n\tcode: [{  validator: validateCode, trigger: 'blur' }]\r\n};\r\n\r\n\r\n\r\n\r\n</script>\r\n"],"mappings":"AAgCA,SAASA,QAAQ,EAAEC,GAAG,QAAQ,KAAK;;;;;;;IAGnC,MAAMC,QAAQ,GAAGF,QAAQ,CACxB;MACC,OAAO,EAAC,EAAE;MACV,MAAM,EAAC,EAAE;MACT,WAAW,EAAC,EAAE;MACd,MAAM,EAAC;IACR,CACD,CAAC;IAED,MAAMG,aAAa,GAAGA,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;MAC/C,IAAG,CAACD,KAAK,EAAC;QACRC,QAAQ,CAAC,IAAIC,KAAK,CAAC,QAAQ,CAAC,CAAC;MAC/B,CAAC,MAAI;QACHD,QAAQ,CAAC,CAAC;MACZ;IAEF,CAAC;IACD,MAAME,YAAY,GAAGA,CAACJ,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;MAC9C,IAAG,CAACD,KAAK,EAAC;QACRC,QAAQ,CAAC,IAAIC,KAAK,CAAC,OAAO,CAAC,CAAC;MAC9B,CAAC,MAAI;QACHD,QAAQ,CAAC,CAAC;MACZ;IACF,CAAC;IACD,MAAMG,iBAAiB,GAAGA,CAACL,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;MACnD,IAAG,CAACD,KAAK,IAAIA,KAAK,IAAIH,QAAQ,CAACQ,IAAI,EAAC;QAClCJ,QAAQ,CAAC,IAAIC,KAAK,CAAC,QAAQ,CAAC,CAAC;MAC/B,CAAC,MAAI;QACHD,QAAQ,CAAC,CAAC;MACZ;IACF,CAAC;IACD,MAAMK,YAAY,GAAGA,CAACP,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;MAC9C,IAAG,CAACD,KAAK,EAAC;QACRC,QAAQ,CAAC,IAAIC,KAAK,CAAC,QAAQ,CAAC,CAAC;MAC/B,CAAC,MAAK,IAAGF,KAAK,GAAG,IAAI,EAAC;QACpBC,QAAQ,CAAC,IAAIC,KAAK,CAAC,UAAU,CAAC,CAAC;QAC/BK,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;MACpB,CAAC,MAAI;QACHC,QAAQ,CAAC,CAAC;MACZ;IACF,CAAC;IAED,MAAMQ,KAAK,GAAG;MACbC,KAAK,EAAE,CAAC;QAAEC,SAAS,EAAEb,aAAa;QAAEc,OAAO,EAAE;MAAO,CAAC,CAAC;MACtDP,IAAI,EAAE,CAAC;QAAGM,SAAS,EAAER,YAAY;QAAES,OAAO,EAAE;MAAO,CAAC,CAAC;MACrDC,SAAS,EAAE,CAAC;QAAGF,SAAS,EAAEP,iBAAiB;QAAEQ,OAAO,EAAE;MAAO,CAAC,CAAC;MAC/DE,IAAI,EAAE,CAAC;QAAGH,SAAS,EAAEL,YAAY;QAAEM,OAAO,EAAE;MAAO,CAAC;IACrD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}