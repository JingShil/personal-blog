{"ast":null,"code":"/*\n * Copyright Adam Pritchard 2015\n * MIT License : http://adampritchard.mit-license.org/\n */\n\n'use strict';\n\n/*jshint node:true*/\nrequire(\"core-js/modules/es.array.push.js\");\nfunction slugify(s, md) {\n  // Unicode-friendly\n  var spaceRegex = new RegExp(md.utils.lib.ucmicro.Z.source, 'g');\n  return encodeURIComponent(s.replace(spaceRegex, ''));\n}\nfunction makeRule(md, options) {\n  return function addHeadingAnchors(state) {\n    // Go to length-2 because we're going to be peeking ahead.\n    for (var i = 0; i < state.tokens.length - 1; i++) {\n      if (state.tokens[i].type !== 'heading_open' || state.tokens[i + 1].type !== 'inline') {\n        continue;\n      }\n      var headingOpenToken = state.tokens[i + 1];\n      var headingInlineToken = state.tokens[i + 1];\n      if (!headingInlineToken.content) {\n        continue;\n      }\n      var anchorName = options.slugify(headingInlineToken.content, md);\n      if (options.addHeadingID) {\n        state.tokens[i].attrPush(['id', anchorName]);\n      }\n      if (options.addHeadingAnchor) {\n        var anchorToken = new state.Token('html_inline', '', 0);\n        anchorToken.content = '<a name=\"' + anchorName + '\" class=\"' + options.anchorClass + '\" href=\"#\"></a>';\n        headingInlineToken.children.unshift(anchorToken);\n      }\n\n      // Advance past the inline and heading_close tokens.\n      i += 2;\n    }\n  };\n}\nmodule.exports = function headinganchor_plugin(md, opts) {\n  var defaults = {\n    anchorClass: 'markdown-it-headinganchor',\n    addHeadingID: true,\n    addHeadingAnchor: true,\n    slugify: slugify\n  };\n  var options = md.utils.assign(defaults, opts);\n  md.core.ruler.push('heading_anchors', makeRule(md, options));\n};","map":{"version":3,"names":["require","slugify","s","md","spaceRegex","RegExp","utils","lib","ucmicro","Z","source","encodeURIComponent","replace","makeRule","options","addHeadingAnchors","state","i","tokens","length","type","headingOpenToken","headingInlineToken","content","anchorName","addHeadingID","attrPush","addHeadingAnchor","anchorToken","Token","anchorClass","children","unshift","module","exports","headinganchor_plugin","opts","defaults","assign","core","ruler","push"],"sources":["E:/java项目/test/blog/blog-front/node_modules/markdown-it-headinganchor/index.js"],"sourcesContent":["/*\n * Copyright Adam Pritchard 2015\n * MIT License : http://adampritchard.mit-license.org/\n */\n\n'use strict';\n/*jshint node:true*/\n\nfunction slugify(s, md) {\n  // Unicode-friendly\n  var spaceRegex = new RegExp(md.utils.lib.ucmicro.Z.source, 'g');\n  return encodeURIComponent(s.replace(spaceRegex, ''));\n}\n\nfunction makeRule(md, options) {\n  return function addHeadingAnchors(state) {\n    // Go to length-2 because we're going to be peeking ahead.\n    for (var i = 0; i < state.tokens.length-1; i++) {\n      if (state.tokens[i].type !== 'heading_open' ||\n          state.tokens[i+1].type !== 'inline') {\n        continue;\n      }\n\n      var headingOpenToken = state.tokens[i+1];\n      var headingInlineToken = state.tokens[i+1];\n\n      if (!headingInlineToken.content) {\n        continue;\n      }\n\n      var anchorName = options.slugify(headingInlineToken.content, md);\n\n      if (options.addHeadingID) {\n        state.tokens[i].attrPush(['id', anchorName]);\n      }\n\n      if (options.addHeadingAnchor) {\n        var anchorToken = new state.Token('html_inline', '', 0);\n        anchorToken.content =\n          '<a name=\"' +\n          anchorName +\n          '\" class=\"' +\n          options.anchorClass +\n          '\" href=\"#\"></a>';\n\n        headingInlineToken.children.unshift(anchorToken);\n      }\n\n      // Advance past the inline and heading_close tokens.\n      i += 2;\n    }\n  };\n}\n\nmodule.exports = function headinganchor_plugin(md, opts) {\n  var defaults = {\n    anchorClass: 'markdown-it-headinganchor',\n    addHeadingID: true,\n    addHeadingAnchor: true,\n    slugify: slugify\n  };\n  var options = md.utils.assign(defaults, opts);\n  md.core.ruler.push('heading_anchors', makeRule(md, options));\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AACZ;AAAAA,OAAA;AAEA,SAASC,OAAOA,CAACC,CAAC,EAAEC,EAAE,EAAE;EACtB;EACA,IAAIC,UAAU,GAAG,IAAIC,MAAM,CAACF,EAAE,CAACG,KAAK,CAACC,GAAG,CAACC,OAAO,CAACC,CAAC,CAACC,MAAM,EAAE,GAAG,CAAC;EAC/D,OAAOC,kBAAkB,CAACT,CAAC,CAACU,OAAO,CAACR,UAAU,EAAE,EAAE,CAAC,CAAC;AACtD;AAEA,SAASS,QAAQA,CAACV,EAAE,EAAEW,OAAO,EAAE;EAC7B,OAAO,SAASC,iBAAiBA,CAACC,KAAK,EAAE;IACvC;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACE,MAAM,CAACC,MAAM,GAAC,CAAC,EAAEF,CAAC,EAAE,EAAE;MAC9C,IAAID,KAAK,CAACE,MAAM,CAACD,CAAC,CAAC,CAACG,IAAI,KAAK,cAAc,IACvCJ,KAAK,CAACE,MAAM,CAACD,CAAC,GAAC,CAAC,CAAC,CAACG,IAAI,KAAK,QAAQ,EAAE;QACvC;MACF;MAEA,IAAIC,gBAAgB,GAAGL,KAAK,CAACE,MAAM,CAACD,CAAC,GAAC,CAAC,CAAC;MACxC,IAAIK,kBAAkB,GAAGN,KAAK,CAACE,MAAM,CAACD,CAAC,GAAC,CAAC,CAAC;MAE1C,IAAI,CAACK,kBAAkB,CAACC,OAAO,EAAE;QAC/B;MACF;MAEA,IAAIC,UAAU,GAAGV,OAAO,CAACb,OAAO,CAACqB,kBAAkB,CAACC,OAAO,EAAEpB,EAAE,CAAC;MAEhE,IAAIW,OAAO,CAACW,YAAY,EAAE;QACxBT,KAAK,CAACE,MAAM,CAACD,CAAC,CAAC,CAACS,QAAQ,CAAC,CAAC,IAAI,EAAEF,UAAU,CAAC,CAAC;MAC9C;MAEA,IAAIV,OAAO,CAACa,gBAAgB,EAAE;QAC5B,IAAIC,WAAW,GAAG,IAAIZ,KAAK,CAACa,KAAK,CAAC,aAAa,EAAE,EAAE,EAAE,CAAC,CAAC;QACvDD,WAAW,CAACL,OAAO,GACjB,WAAW,GACXC,UAAU,GACV,WAAW,GACXV,OAAO,CAACgB,WAAW,GACnB,iBAAiB;QAEnBR,kBAAkB,CAACS,QAAQ,CAACC,OAAO,CAACJ,WAAW,CAAC;MAClD;;MAEA;MACAX,CAAC,IAAI,CAAC;IACR;EACF,CAAC;AACH;AAEAgB,MAAM,CAACC,OAAO,GAAG,SAASC,oBAAoBA,CAAChC,EAAE,EAAEiC,IAAI,EAAE;EACvD,IAAIC,QAAQ,GAAG;IACbP,WAAW,EAAE,2BAA2B;IACxCL,YAAY,EAAE,IAAI;IAClBE,gBAAgB,EAAE,IAAI;IACtB1B,OAAO,EAAEA;EACX,CAAC;EACD,IAAIa,OAAO,GAAGX,EAAE,CAACG,KAAK,CAACgC,MAAM,CAACD,QAAQ,EAAED,IAAI,CAAC;EAC7CjC,EAAE,CAACoC,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC,iBAAiB,EAAE5B,QAAQ,CAACV,EAAE,EAAEW,OAAO,CAAC,CAAC;AAC9D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}