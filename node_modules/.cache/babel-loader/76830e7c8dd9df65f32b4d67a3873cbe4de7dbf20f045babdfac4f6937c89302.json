{"ast":null,"code":"import { reactive, ref } from 'vue';\nexport default {\n  __name: 'Index',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const ruleForm = ref({\n      \"phone\": null,\n      \"pass\": null,\n      \"checkPass\": null,\n      \"code\": null\n    });\n    const state = reactive({\n      selectObj: [{\n        value: \"1\",\n        label: \"项目1\"\n      }, {\n        value: \"2\",\n        label: \"项目2\"\n      }, {\n        value: \"3\",\n        label: \"项目3\"\n      }, {\n        value: \"4\",\n        label: \"项目4\"\n      }],\n      //定义提交的数据\n      formInfoObj: {\n        titleVal: \"\",\n        urlVal: \"\",\n        selectVal: \"\"\n      },\n      rules: {\n        //定义验证规则，有两种方式：\n        //1.使用ele原生的验证规则。\n        titleVal: [{\n          required: true,\n          message: \"请输入标题\",\n          trigger: \"blur\"\n        }],\n        //2.通过引用整体的验证规则的js来进行验证。\n        urlVal: [{\n          required: true,\n          validator: globalValidate.requiredFunction,\n          trigger: \"blur\"\n        }],\n        selectVal: [{\n          required: true,\n          message: \"此项为必填\",\n          trigger: \"blur\"\n        }]\n      }\n    });\n    const __returned__ = {\n      ruleForm,\n      state,\n      reactive,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","ref","ruleForm","state","selectObj","value","label","formInfoObj","titleVal","urlVal","selectVal","rules","required","message","trigger","validator","globalValidate","requiredFunction"],"sources":["E:/java项目/test/blog/blog-front/src/views/test/Index.vue"],"sourcesContent":["<template>\r\n  <el-form\r\n    \r\n    style=\"max-width: 600px\"\r\n    :model=\"ruleForm\"\r\n    status-icon\r\n    :rules=\"rules\"\r\n    label-width=\"auto\"\r\n    class=\"demo-ruleForm\"\r\n  >\r\n\t\t<el-form-item label=\"手机号\" prop=\"phone\">\r\n      <el-input v-model.number=\"ruleForm.phone\" />\r\n    </el-form-item>\r\n    <el-form-item label=\"密码\" prop=\"pass\">\r\n      <el-input v-model=\"ruleForm.pass\" type=\"password\" autocomplete=\"off\" />\r\n    </el-form-item>\r\n    <el-form-item label=\"确认密码\" prop=\"checkPass\">\r\n      <el-input\r\n        v-model=\"ruleForm.checkPass\"\r\n        type=\"password\"\r\n        autocomplete=\"off\"\r\n      />\r\n    </el-form-item>\r\n    <el-form-item label=\"验证码\" prop=\"code\">\r\n      <el-input v-model.number=\"ruleForm.code\" />\r\n    </el-form-item>\r\n    \r\n  </el-form>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref } from 'vue'\r\n\r\n\r\nconst ruleForm = ref(\r\n\t{\r\n\t\t\"phone\":null,\r\n\t\t\"pass\":null,\r\n\t\t\"checkPass\":null,\r\n\t\t\"code\":null\r\n\t}\r\n)\r\n\r\nconst state = reactive({\r\n      selectObj: [\r\n        {\r\n          value: \"1\",\r\n          label: \"项目1\",\r\n        },\r\n        {\r\n          value: \"2\",\r\n          label: \"项目2\",\r\n        },\r\n        {\r\n          value: \"3\",\r\n          label: \"项目3\",\r\n        },\r\n        {\r\n          value: \"4\",\r\n          label: \"项目4\",\r\n        },\r\n      ],\r\n\r\n      //定义提交的数据\r\n      formInfoObj: {\r\n        titleVal: \"\",\r\n        urlVal: \"\",\r\n        selectVal: \"\",\r\n      },\r\n      rules: {\r\n        //定义验证规则，有两种方式：\r\n        //1.使用ele原生的验证规则。\r\n        titleVal: [{ required: true, message: \"请输入标题\", trigger: \"blur\" }],\r\n\r\n        //2.通过引用整体的验证规则的js来进行验证。\r\n        urlVal: [\r\n          {\r\n            required: true,\r\n            validator: globalValidate.requiredFunction,\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n        selectVal: [{ required: true, message: \"此项为必填\", trigger: \"blur\" }],\r\n      },\r\n    });\r\n\r\n</script>\r\n"],"mappings":"AA+BA,SAASA,QAAQ,EAAEC,GAAG,QAAQ,KAAK;;;;;;;IAGnC,MAAMC,QAAQ,GAAGD,GAAG,CACnB;MACC,OAAO,EAAC,IAAI;MACZ,MAAM,EAAC,IAAI;MACX,WAAW,EAAC,IAAI;MAChB,MAAM,EAAC;IACR,CACD,CAAC;IAED,MAAME,KAAK,GAAGH,QAAQ,CAAC;MACjBI,SAAS,EAAE,CACT;QACEC,KAAK,EAAE,GAAG;QACVC,KAAK,EAAE;MACT,CAAC,EACD;QACED,KAAK,EAAE,GAAG;QACVC,KAAK,EAAE;MACT,CAAC,EACD;QACED,KAAK,EAAE,GAAG;QACVC,KAAK,EAAE;MACT,CAAC,EACD;QACED,KAAK,EAAE,GAAG;QACVC,KAAK,EAAE;MACT,CAAC,CACF;MAED;MACAC,WAAW,EAAE;QACXC,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE,EAAE;QACVC,SAAS,EAAE;MACb,CAAC;MACDC,KAAK,EAAE;QACL;QACA;QACAH,QAAQ,EAAE,CAAC;UAAEI,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,OAAO;UAAEC,OAAO,EAAE;QAAO,CAAC,CAAC;QAEjE;QACAL,MAAM,EAAE,CACN;UACEG,QAAQ,EAAE,IAAI;UACdG,SAAS,EAAEC,cAAc,CAACC,gBAAgB;UAC1CH,OAAO,EAAE;QACX,CAAC,CACF;QACDJ,SAAS,EAAE,CAAC;UAAEE,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,OAAO;UAAEC,OAAO,EAAE;QAAO,CAAC;MACnE;IACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}